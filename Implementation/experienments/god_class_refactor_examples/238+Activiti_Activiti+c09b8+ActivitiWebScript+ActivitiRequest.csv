index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,config,config the activiti config bean ,Field,setConfig(Config),,,,66,4,4,"/** 
 * The activiti config bean
 */
","/**
   * The activiti config bean
   */
  protected Config config;",False,False,"/** 
 * The activiti config bean
 */
",False,"/** 
 * The activiti config bean
 */
"
2,setConfig(Config),set config config setter for the activiti config bean param config the activiti config bean ,Method,,,,org.activiti.rest.util.ActivitiWebScript+config org.activiti.rest.util.ActivitiWebScript+config,185,9,1,"/** 
 * Setter for the activiti config bean
 * @param config The activiti config bean
 */
","/**
   * Setter for the activiti config bean
   * 
   * @param config
   *          The activiti config bean
   */
  public void setConfig(Config config) {
    this.config = config;
  }",False,False,"This method is a setter for the activiti config bean. It takes a parameter called ""config"" and assigns it to the instance variable ""this.config"".",False,"This code defines a setter method named ""setConfig"" that takes a parameter of type ""Config"" and assigns it to the ""config"" instance variable of the class. It is used to set the activiti config bean for the class."
3,"executeImpl(WebScriptRequest,Status,Cache)",execute impl req status cache the entry point for the webscript will create a model and call the execute web script so extending activiti webscripts may implement custom logic param req the webscript request param status the webscripts status param cache the webscript cache return the webscript template model ,Method,,,"java.util.HashMap+HashMap() org.activiti.rest.util.ActivitiWebScript+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.util.ActivitiWebScript+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",,844,28,4,"/** 
 * The entry point for the webscript. Will create a model and call the executeWebScript() so extending activiti webscripts may implement custom logic.
 * @param req The webscript request
 * @param status The webscripts status
 * @param cache The webscript cache
 * @return The webscript template model
 */
","/**
   * The entry point for the webscript.
   * 
   * Will create a model and call the executeWebScript() so extending activiti
   * webscripts may implement custom logic.
   * 
   * @param req
   *          The webscript request
   * @param status
   *          The webscripts status
   * @param cache
   *          The webscript cache
   * @return The webscript template model
   */
  @Override
  protected Map<String, Object> executeImpl(WebScriptRequest req, Status status, Cache cache) {
    // Prepare model with process engine info
    Map<String, Object> model = new HashMap<String, Object>();

    // todo: set the current user context when the core api implements security
    // checks

    // Let implementing webscript do something useful
    executeWebScript(req, status, cache, model);

    // Return model
    return model;
  }",False,False,"The function of this method is to serve as the entry point for a webscript. It creates a model and calls the executeWebScript() method, allowing for custom logic to be implemented. It takes in a webscript request, status, and cache, and returns the webscript template model.",False,This code is the entry point for a web script. It creates a model and calls the executeWebScript() method to allow for custom logic implementation. The method returns the model.
4,"executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",execute web script req status cache model override this class to implement custom logic param req the webscript request param status the webscript param cache param model ,Method,"executeImpl(WebScriptRequest,Status,Cache)",,,,360,13,4,"/** 
 * Override this class to implement custom logic.
 * @param req The webscript request
 * @param status The webscript
 * @param cache
 * @param model
 */
","/**
   * Override this class to implement custom logic.
   * 
   * @param req
   *          The webscript request
   * @param status
   *          The webscript
   * @param cache
   * @param model
   */
  protected void executeWebScript(WebScriptRequest req, Status status, Cache cache, Map<String, Object> model) {
    // Override to make something useful
  }",False,False,"The method serves as a template for implementing custom logic in a web script. It takes in a web script request, status, cache, and model as parameters. The method can be overridden to perform specific actions.",False,"The given code is a method named ""executeWebScript"" that can be overridden to implement custom logic. It takes in a WebScriptRequest, Status, Cache, and a Map<String, Object> model as parameters. The purpose of this method is to perform some useful actions, but the specific implementation is left to the overriding class."
5,getProcessEngineInfo(),get process engine info returns the process engine info return the process engine info ,Method,,"org.activiti.rest.api.engine.ProcessEngineGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngines+getProcessEngineInfo(String) org.activiti.engine.ProcessEngines+getProcessEngineInfo(String) org.activiti.rest.Config+getEngine() org.activiti.rest.Config+getEngine(),org.activiti.rest.util.ActivitiWebScript+config,217,8,4,"/** 
 * Returns the process engine info.
 * @return The process engine info
 */
","/**
   * Returns the process engine info.
   * 
   * @return The process engine info
   */
  protected ProcessEngineInfo getProcessEngineInfo() {
    return ProcessEngines.getProcessEngineInfo(config.getEngine());
  }",False,False,This method returns the process engine info by calling the getProcessEngineInfo method from the ProcessEngines class with the engine configuration as a parameter.,True,"The code defines a protected method named ""getProcessEngineInfo"" that returns the process engine information. It retrieves the process engine info by calling the ""getProcessEngineInfo"" method from the ""ProcessEngines"" class, passing the engine configuration as a parameter."
6,getProcessEngine(),get process engine returns the process engine return the process engine ,Method,getIdentityService() getManagementService() getRuntimeService() getRepositoryService() getTaskService(),,org.activiti.engine.ProcessEngines+getProcessEngine(String) org.activiti.engine.ProcessEngines+getProcessEngine(String) org.activiti.rest.Config+getEngine() org.activiti.rest.Config+getEngine(),org.activiti.rest.util.ActivitiWebScript+config,195,8,4,"/** 
 * Returns the process engine.
 * @return The process engine
 */
","/**
   * Returns the process engine.
   * 
   * @return The process engine
   */
  protected ProcessEngine getProcessEngine() {
    return ProcessEngines.getProcessEngine(config.getEngine());
  }",False,False,This method serves to retrieve the process engine by calling the `getProcessEngine` method from the `ProcessEngines` class with the engine configuration obtained from the `config` object.,True,"The given code is a protected method named ""getProcessEngine"" that returns a ProcessEngine object. It retrieves the process engine based on the configuration provided and returns it."
7,getIdentityService(),get identity service returns the identity service return the identity service ,Method,"isUserInGroup(WebScriptRequest,String,String)","org.activiti.rest.api.identity.GroupGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.GroupUsersGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksSummaryGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getIdentityService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getIdentityService(),,191,8,4,"/** 
 * Returns the identity service.
 * @return The identity service
 */
","/**
   * Returns the identity service.
   * 
   * @return The identity service
   */
  protected IdentityService getIdentityService() {
    return getProcessEngine().getIdentityService();
  }",False,False,This method serves to retrieve the identity service from the process engine.,True,"The code defines a protected method called ""getIdentityService"" that returns the identity service. This method is used to retrieve the identity service from the process engine. The identity service is responsible for managing user identities and authorizations in the system."
8,getManagementService(),get management service returns the management service return the management service ,Method,,"org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TablesGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getManagementService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getManagementService(),,202,8,4,"/** 
 * Returns the management service.
 * @return The management service.
 */
","/**
   * Returns the management service.
   * 
   * @return The management service.
   */
  protected ManagementService getManagementService() {
    return getProcessEngine().getManagementService();
  }",False,False,This method returns the management service of the process engine.,True,"The code defines a protected method called ""getManagementService"" that returns the management service of a process engine. The method retrieves the management service by calling the ""getManagementService"" method of the process engine."
9,getRuntimeService(),get runtime service returns the process service return the process service ,Method,,"org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getRuntimeService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getRuntimeService(),,186,8,4,"/** 
 * Returns The process service.
 * @return The process service
 */
","/**
   * Returns The process service.
   * 
   * @return The process service
   */
  protected RuntimeService getRuntimeService() {
    return getProcessEngine().getRuntimeService();
  }",False,False,This method returns the process service by calling the getRuntimeService() method of the process engine.,True,"The code defines a protected method named ""getRuntimeService"" that returns the runtime service of a process engine. The method is used to retrieve the process engine's runtime service, which is responsible for managing and executing process instances."
10,getRepositoryService(),get repository service returns the repository service return the repository service ,Method,,"org.activiti.rest.api.process.ProcessDefinitionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getRepositoryService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getRepositoryService(),,200,8,4,"/** 
 * Returns The repository service.
 * @return The repository service
 */
","/**
   * Returns The repository service.
   *
   * @return The repository service
   */
  protected RepositoryService getRepositoryService() {
    return getProcessEngine().getRepositoryService();
  }",False,False,This method serves to retrieve the repository service from the process engine.,True,"The given code defines a protected method named ""getRepositoryService"" that returns the repository service. This method is used to retrieve the repository service from the process engine. The method's purpose is to provide access to the repository service for other parts of the code."
11,getTaskService(),get task service returns the task service return the task service ,Method,,"org.activiti.rest.api.tasks.TaskFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksSummaryGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getTaskService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getTaskService(),,171,8,4,"/** 
 * Returns the task service.
 * @return The task service
 */
","/**
   * Returns the task service.
   * 
   * @return The task service
   */
  protected TaskService getTaskService() {
    return getProcessEngine().getTaskService();
  }",False,False,This method serves to return the task service by calling the getTaskService() method of the process engine.,True,"The code defines a protected method named ""getTaskService"" that returns the task service. It retrieves the task service from the process engine and returns it. The method is intended to be used by subclasses to access the task service."
12,getBody(WebScriptRequest),get body req returns the webscript request body in an abstracted form so multiple formats may be implemented seamlessly in the future param req the webscript request return the webscript requests body ,Method,,"org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+ActivitiWebScriptBody(WebScriptRequest) java.lang.Object+Object(),,483,15,4,"/** 
 * Returns the webscript request body in an abstracted form so multiple formats may be implemented seamlessly in the future.
 * @param req The webscript request
 * @return The webscript requests body
 */
","/**
   * Returns the webscript request body in an abstracted form so multiple
   * formats may be implemented seamlessly in the future.
   * 
   * @param req
   *          The webscript request
   * @return The webscript requests body
   */
  protected ActivitiWebScriptBody getBody(WebScriptRequest req) {
    try {
      return new ActivitiWebScriptBody(req);
    } catch (IOException e) {
      throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Can't read body"");
    }
  }",False,False,"This method returns the body of a webscript request in an abstracted form, allowing for seamless implementation of multiple formats in the future. It takes a webscript request as a parameter and returns the request's body.",True,"This code defines a method called ""getBody"" that takes a WebScriptRequest as input and returns the request body in an abstracted form. It creates a new instance of the ActivitiWebScriptBody class, passing the request as a parameter, and handles any IOException by throwing a WebScriptException with a ""Can't read body"" message."
13,"getMandatoryPathParameter(WebScriptRequest,String)",get mandatory path parameter req param gets a path parameter value and throws an exception if its not present param req the webscript request param param the name of the path parameter return the value of the path parameter throws web script exception if parameter isn t present ,Method,,"org.activiti.rest.api.identity.GroupUsersGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,502,14,4,"/** 
 * Gets a path parameter value and throws an exception if its not present.
 * @param req The webscript request
 * @param param The name of the path parameter
 * @return The value of the path parameter
 * @throws WebScriptException if parameter isn't present
 */
","/**
   * Gets a path parameter value and throws an exception if its not present.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the path parameter
   * @return The value of the path parameter
   * @throws WebScriptException
   *           if parameter isn't present
   */
  protected String getMandatoryPathParameter(WebScriptRequest req, String param) {
    return checkString(req.getServiceMatch().getTemplateVars().get(param), param, true);
  }",True,True,"The function retrieves a value for a specified path parameter from a web request. If the parameter is not present, it throws a WebScriptException.",True,"The method ""getMandatoryPathParameter"" is used to retrieve a value from a path parameter in a web script request. It throws a WebScriptException if the parameter is not present."
14,"getPathParameter(WebScriptRequest,String)",get path parameter req param gets a path parameter value param req the webscript request param param the name of the path parameter return the path parameter value or null if not present ,Method,,,"org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,393,12,4,"/** 
 * Gets a path parameter value.
 * @param req The webscript request
 * @param param The name of the path parameter
 * @return The path parameter value or null if not present
 */
","/**
   * Gets a path parameter value.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the path parameter
   * @return The path parameter value or null if not present
   */
  protected String getPathParameter(WebScriptRequest req, String param) {
    return checkString(req.getServiceMatch().getTemplateVars().get(param), param, false);
  }",True,True,"This method is used to retrieve the value of a path parameter from a webscript request. It takes the request object and the name of the parameter as input, and returns the value of the parameter or null if it is not present.",True,"The code defines a method called `getPathParameter` that takes a `WebScriptRequest` object and a parameter name as input. It retrieves the value of the specified path parameter from the request's service match template variables and returns it as a string. If the parameter is not present, it returns null."
15,"getInt(WebScriptRequest,String)",get int req param gets an int parameter value param req the webscript request param param the name of the int parameter return the int parameter value or integer min value if not present ,Method,,,"org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String)",java.lang.Integer+MIN_VALUE,415,13,4,"/** 
 * Gets an int parameter value.
 * @param req The webscript request
 * @param param The name of the int parameter
 * @return The int parameter value or Integer.MIN_VALUE if not present
 */
","/**
   * Gets an int parameter value.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the int parameter
   * @return The int parameter value or Integer.MIN_VALUE if not present
   */
  protected int getInt(WebScriptRequest req, String param) {
    String value = getString(req, param);
    return value != null ? Integer.parseInt(value) : Integer.MIN_VALUE;
  }",True,True,"This method serves to retrieve an integer parameter value from a web script request. It returns the integer value if present, otherwise it returns Integer.MIN_VALUE.",True,"The code defines a method called ""getInt"" that takes a WebScriptRequest object and a String parameter. It returns the integer value of the parameter if it is present, otherwise it returns Integer.MIN_VALUE. The method internally calls another method called ""getString"" to retrieve the parameter value as a String."
16,"getMandatoryInt(WebScriptRequest,String)",get mandatory int req param gets a mandatory int parameter and throws an exception if its not present param req the webscript request param param the name of the path parameter return the int parameter value throws web script exception if parameter isn t present ,Method,,,"org.activiti.rest.util.ActivitiWebScript+getMandatoryString(WebScriptRequest,String) org.activiti.rest.util.ActivitiWebScript+getMandatoryString(WebScriptRequest,String) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String)",java.lang.Integer+MIN_VALUE,518,15,4,"/** 
 * Gets a mandatory int parameter and throws an exception if its not present.
 * @param req The webscript request
 * @param param The name of the path parameter
 * @return The int parameter value
 * @throws WebScriptException if parameter isn't present
 */
","/**
   * Gets a mandatory int parameter and throws an exception if its not present.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the path parameter
   * @return The int parameter value
   * @throws WebScriptException
   *           if parameter isn't present
   */
  protected int getMandatoryInt(WebScriptRequest req, String param) {
    String value = getMandatoryString(req, param);
    return value != null ? Integer.parseInt(value) : Integer.MIN_VALUE;
  }",True,True,This method serves to retrieve a mandatory integer parameter from a web script request. It throws an exception if the parameter is not present.,True,"The code defines a method called ""getMandatoryInt"" that takes a WebScriptRequest object and a String parameter. It returns the integer value of the parameter if it is present, otherwise it throws a WebScriptException. The method internally calls another method called ""getMandatoryString"" to retrieve the parameter value as a string."
17,"getInt(WebScriptRequest,String,int)",get int req param default value gets an int parameter value param req the webscript request param param the name of the int parameter param default value t he value to return if the parameter isn t present return the int parameter value of default value if the parameter isn tpresent ,Method,,"org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String)",,541,16,4,"/** 
 * Gets an int parameter value
 * @param req The webscript request
 * @param param The name of the int parameter
 * @param defaultValue THe value to return if the parameter isn't present
 * @return The int parameter value of defaultValue if the parameter isn'tpresent
 */
","/**
   * Gets an int parameter value
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the int parameter
   * @param defaultValue
   *          THe value to return if the parameter isn't present
   * @return The int parameter value of defaultValue if the parameter isn't
   *         present
   */
  protected int getInt(WebScriptRequest req, String param, int defaultValue) {
    String value = getString(req, param);
    return value != null ? Integer.parseInt(value) : defaultValue;
  }",True,True,"This method serves to get the value of an int parameter from a webscript request. It returns the int value of the parameter if it is present, otherwise it returns a default value.",True,
18,"getString(WebScriptRequest,String)",get string req param gets the string parameter value param req the webscript request param param the name of the string parameter return the string parameter value or null if the parameter isn t present ,Method,"getInt(WebScriptRequest,String) getInt(WebScriptRequest,String,int)","org.activiti.rest.api.cycle.ArtifactGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.TreeGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.TreeGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,383,12,4,"/** 
 * Gets the string parameter value.
 * @param req The webscript request
 * @param param The name of the string parameter
 * @return The string parameter value or null if the parameter isn't present
 */
","/**
   * Gets the string parameter value.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the string parameter
   * @return The string parameter value or null if the parameter isn't present
   */
  protected String getString(WebScriptRequest req, String param) {
    return checkString(req.getParameter(param), param, false);
  }",True,True,This method is used to retrieve the value of a string parameter from a web script request. It returns the value of the parameter or null if the parameter is not present.,True,"The code defines a method called ""getString"" that takes a WebScriptRequest object and a string parameter as input. It returns the value of the string parameter if it is present, otherwise it returns null. The method also has a summary description explaining its purpose and usage."
19,"getMandatoryString(WebScriptRequest,String)",get mandatory string req param gets a mandatory string parameter value of throws an exception if the parameter isn t present param req the webscript request param param the name of the string parameter value return the string parameter value throws web script exception if the parameter isn t present ,Method,"getMandatoryInt(WebScriptRequest,String)","org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactActionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactActionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksSummaryGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,503,15,4,"/** 
 * Gets a mandatory string parameter value of throws an exception if the parameter isn't present.
 * @param req The webscript request
 * @param param The name of the string parameter value
 * @return The string parameter value
 * @throws WebScriptException if the parameter isn't present
 */
","/**
   * Gets a mandatory string parameter value of throws an exception if the
   * parameter isn't present.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the string parameter value
   * @return The string parameter value
   * @throws WebScriptException
   *           if the parameter isn't present
   */
  protected String getMandatoryString(WebScriptRequest req, String param) {
    return checkString(req.getParameter(param), param, true);
  }",True,True,The function serves to retrieve a mandatory string parameter value from a web script request. It throws an exception if the parameter is not present.,True,"The code defines a method called ""getMandatoryString"" that takes a WebScriptRequest object and a string parameter as input. It returns the value of the parameter if it is present, otherwise it throws a WebScriptException."
20,"getString(WebScriptRequest,String,String)",get string req param default value gets the string parameter value param req the webscript request param param the name of the string parameter value param default value the value to return if the parameter isn t present return the value of the string parameter or the default value if parameterisn t present ,Method,,"org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,587,16,4,"/** 
 * Gets the string parameter value.
 * @param req The webscript request.
 * @param param The name of the string parameter value
 * @param defaultValue The value to return if the parameter isn't present
 * @return The value of the string parameter or the default value if parameterisn't present
 */
","/**
   * Gets the string parameter value.
   * 
   * @param req
   *          The webscript request.
   * @param param
   *          The name of the string parameter value
   * @param defaultValue
   *          The value to return if the parameter isn't present
   * @return The value of the string parameter or the default value if parameter
   *         isn't present
   */
  protected String getString(WebScriptRequest req, String param, String defaultValue) {
    String value = checkString(req.getParameter(param), param, false);
    return value != null ? value : defaultValue;
  }",True,True,"This method serves to get the value of a string parameter from a web script request. It takes the request, the name of the parameter, and a default value as input. It returns the value of the parameter if it is present, or the default value if the parameter is not present.",True,"The code defines a method called ""getString"" that takes in a web script request, a string parameter name, and a default value. It returns the value of the string parameter if it is present, or the default value if it is not. The method also includes a comment block that provides a summary description and parameter details."
21,"getMandatoryString(ActivitiWebScriptBody,String)",get mandatory string body param gets a string parameter from the body param body the activiti webscript request body param param the name of the string parameter return the value of the string body parameter throws web script exception if string body parameter isn t present ,Method,,"org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getString(String) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getString(String)",,474,14,4,"/** 
 * Gets a string parameter from the body
 * @param body The activiti webscript request body
 * @param param The name of the string parameter
 * @return The value of the string body parameter
 * @throws WebScriptException if string body parameter isn't present
 */
","/**
   * Gets a string parameter from the body
   * 
   * @param body
   *          The activiti webscript request body
   * @param param
   *          The name of the string parameter
   * @return The value of the string body parameter
   * @throws WebScriptException
   *           if string body parameter isn't present
   */
  protected String getMandatoryString(ActivitiWebScriptBody body, String param) {
    return checkString(body.getString(param), param, true);
  }",False,True,The function of this method is to retrieve a mandatory string parameter from the body of an Activiti webscript request. It throws a WebScriptException if the string parameter is not present.,True,"The method ""getMandatoryString"" is a protected method that takes in an ActivitiWebScriptBody object and a string parameter. It returns the value of the string body parameter if it is present, otherwise it throws a WebScriptException."
22,getFormVariables(ActivitiWebScriptBody),get form variables body gets a parameter as map param body the activiti webscript request body return the value of the string body parameter throws web script exception if string body parameter isn t present ,Method,,"org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getFormVariables() org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getFormVariables(),,368,12,4,"/** 
 * Gets a parameter as Map
 * @param body The activiti webscript request body
 * @return The value of the string body parameter
 * @throws WebScriptException if string body parameter isn't present
 */
","/**
   * Gets a parameter as Map
   * 
   * @param body
   *          The activiti webscript request body
   * @return The value of the string body parameter
   * @throws WebScriptException
   *           if string body parameter isn't present
   */
  protected Map<String, Object> getFormVariables(ActivitiWebScriptBody body) {
    return body.getFormVariables();
  }",True,True,This method serves to get the form variables from the Activiti webscript request body as a Map. It returns the value of the string body parameter and throws a WebScriptException if the string body parameter is not present.,True,"The code defines a protected method called ""getFormVariables"" that takes an ""ActivitiWebScriptBody"" object as a parameter and returns a map of string-object pairs. It is used to retrieve the form variables from the request body of an Activiti web script. If the string body parameter is not present, a WebScriptException is thrown."
23,"checkString(String,String,boolean)",check string value param mandatory throws and exception if the parameter value is null or empty and mandatory is true param value the parameter value to test param param the name of the parameter param mandatory if true the value wil be tested return the parameter value throws web script exception if mandatory is true and value is null or empty ,Method,"getMandatoryPathParameter(WebScriptRequest,String) getPathParameter(WebScriptRequest,String) getString(WebScriptRequest,String) getMandatoryString(WebScriptRequest,String) getString(WebScriptRequest,String,String) getMandatoryString(ActivitiWebScriptBody,String)",,"java.lang.String+length() java.lang.String+length() org.activiti.rest.util.ActivitiWebScript+checkObject(Object,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkObject(Object,String,boolean)",,638,20,4,"/** 
 * Throws and exception if the parameter value is null or empty and mandatory is true
 * @param value The parameter value to test
 * @param param The name of the parameter
 * @param mandatory If true the value wil be tested
 * @return The parameter value
 * @throws WebScriptException if mandatory is true and value is null or empty
 */
","/**
   * Throws and exception if the parameter value is null or empty and mandatory
   * is true
   * 
   * @param value
   *          The parameter value to test
   * @param param
   *          The name of the parameter
   * @param mandatory
   *          If true the value wil be tested
   * @return The parameter value
   * @throws WebScriptException
   *           if mandatory is true and value is null or empty
   */
  protected String checkString(String value, String param, boolean mandatory) {
    if (value != null && value.length() == 0) {
      value = null;
    }
    return (String) checkObject(value, param, mandatory);
  }",True,True,"The function of this method is to check if a string parameter is null or empty, and throw an exception if it is mandatory and null or empty. It returns the parameter value if it is not null or empty.",True,"The code is a method called ""checkString"" that checks if a given string parameter is null or empty. If the parameter is mandatory and null or empty, it throws a WebScriptException. The method returns the parameter value if it is not null or empty."
24,"checkObject(Object,String,boolean)",check object value param mandatory throws and exception if the parameter value is null or empty and mandatory is true param value the parameter value to test param param the name of the parameter param mandatory if true the value wil be tested return the parameter value throws web script exception if mandatory is true and value is null or empty ,Method,"checkString(String,String,boolean)",,java.lang.Object+Object(),,727,24,4,"/** 
 * Throws and exception if the parameter value is null or empty and mandatory is true
 * @param value The parameter value to test
 * @param param The name of the parameter
 * @param mandatory If true the value wil be tested
 * @return The parameter value
 * @throws WebScriptException if mandatory is true and value is null or empty
 */
","/**
   * Throws and exception if the parameter value is null or empty and mandatory
   * is true
   * 
   * @param value
   *          The parameter value to test
   * @param param
   *          The name of the parameter
   * @param mandatory
   *          If true the value wil be tested
   * @return The parameter value
   * @throws WebScriptException
   *           if mandatory is true and value is null or empty
   */
  protected Object checkObject(Object value, String param, boolean mandatory) {
    if (value == null) {
      if (mandatory) {
        throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Parameter '"" + param + ""' is missing"");
      } else {
        return null;
      }
    }
    return value;
  }",True,True,"The function of this method is to check if a parameter value is null or empty, and throw an exception if it is mandatory and null or empty. It returns the parameter value if it is not null or empty.",True,"The code defines a method called ""checkObject"" that checks if a parameter value is null or empty. If the parameter is mandatory and the value is null or empty, it throws a WebScriptException with a specific message. Otherwise, it returns the parameter value."
25,getCurrentUserId(WebScriptRequest),get current user id req returns the username for the current user param req the webscript request return t he username of the current user ,Method,isManager(WebScriptRequest) isAdmin(WebScriptRequest),"org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactActionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.TreeGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",java.lang.String+split(String) java.lang.String+split(String) java.lang.String+split(String) java.lang.String+String(String) java.lang.String+split(String),,494,17,4,"/** 
 * Returns the username for the current user.
 * @param req The webscript request
 * @return THe username of the current user
 */
","/**
   * Returns the username for the current user.
   * 
   * @param req
   *          The webscript request
   * @return THe username of the current user
   */
  protected String getCurrentUserId(WebScriptRequest req) {
    String authorization = req.getHeader(""Authorization"");
    if (authorization != null) {
      String[] parts = authorization.split("" "");
      if (parts.length == 2) {
        return new String(Base64.decode(parts[1])).split("":"")[0];
      }
    }
    return null;
  }",True,True,"This method returns the username of the current user by extracting it from the ""Authorization"" header of the given WebScriptRequest object.",True,"This code defines a method called `getCurrentUserId` that takes a `WebScriptRequest` object as a parameter and returns the username of the current user. It does this by extracting the username from the `Authorization` header of the request, which is expected to be in the format ""Basic <base64 encoded username:password>"". If the header is not present or is not in the expected format, it returns null."
26,"isUserInGroup(WebScriptRequest,String,String)",is user in group req user id group id tests if user is in group param req the webscript request param user id the id of the user to test param group id the if of the group to test the user against return true of user is in group ,Method,isManager(WebScriptRequest) isAdmin(WebScriptRequest),,org.activiti.engine.identity.GroupQuery+list() org.activiti.engine.identity.GroupQuery+member(String) org.activiti.engine.IdentityService+createGroupQuery() org.activiti.rest.util.ActivitiWebScript+getIdentityService() org.activiti.rest.util.ActivitiWebScript+getIdentityService() org.activiti.engine.IdentityService+createGroupQuery() org.activiti.engine.identity.GroupQuery+member(String) org.activiti.engine.identity.GroupQuery+list() java.lang.String+equals(Object) org.activiti.rest.Config+getAdminGroupId() org.activiti.rest.Config+getAdminGroupId() java.lang.String+equals(Object) org.activiti.engine.identity.Group+getId() org.activiti.engine.identity.Group+getId(),org.activiti.rest.util.ActivitiWebScript+config,647,22,4,"/** 
 * Tests if user is in group.
 * @param req The webscript request
 * @param userId The id of the user to test
 * @param groupId The if of the group to test the user against
 * @return true of user is in group
 */
","/**
   * Tests if user is in group.
   * 
   * @param req
   *          The webscript request
   * @param userId
   *          The id of the user to test
   * @param groupId
   *          The if of the group to test the user against
   * @return true of user is in group
   */
  protected boolean isUserInGroup(WebScriptRequest req, String userId, String groupId) {
    if (userId != null) {
      List<Group> groups = getIdentityService().createGroupQuery().member(userId).list();
      for (Group group : groups) {
        if (config.getAdminGroupId().equals(group.getId())) {
          return true;
        }
      }
    }
    return false;
  }",False,True,"This method tests if a user is in a specific group. It takes in the web script request, the user ID, and the group ID as parameters. It returns true if the user is in the group, and false otherwise.",True,"The code defines a method called ""isUserInGroup"" that takes in a web script request, a user ID, and a group ID as parameters. It checks if the user is a member of the specified group by querying the identity service and returns true if they are, otherwise it returns false."
27,isManager(WebScriptRequest),is manager req tests if user has manager role param req the webscript request return true if the user has manager role ,Method,,,"org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.Config+getManagerGroupId() org.activiti.rest.Config+getManagerGroupId()",org.activiti.rest.util.ActivitiWebScript+config,292,10,4,"/** 
 * Tests if user has manager role.
 * @param req The webscript request.
 * @return true if the user has manager role
 */
","/**
   * Tests if user has manager role.
   * 
   * @param req
   *          The webscript request.
   * @return true if the user has manager role
   */
  protected boolean isManager(WebScriptRequest req) {
    return isUserInGroup(req, getCurrentUserId(req), config.getManagerGroupId());
  }",False,True,The function isManager tests if a user has the manager role by checking if the user is in the manager group. It takes in a webscript request and returns true if the user has the manager role.,True,"The code contains a method named ""isManager"" that takes a WebScriptRequest as a parameter. It checks if the user associated with the request has a manager role by calling another method named ""isUserInGroup"" with the user ID, obtained from the request, and the manager group ID as arguments. The method returns true if the user has a manager role."
28,isAdmin(WebScriptRequest),is admin req tests if user has admin role param req the webscript request return true if the user has admin role ,Method,,,"org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.Config+getAdminGroupId() org.activiti.rest.Config+getAdminGroupId()",org.activiti.rest.util.ActivitiWebScript+config,283,10,4,"/** 
 * Tests if user has admin role.
 * @param req The webscript request
 * @return true if the user has admin role
 */
","/**
   * Tests if user has admin role.
   * 
   * @param req
   *          The webscript request
   * @return true if the user has admin role
   */
  protected boolean isAdmin(WebScriptRequest req) {
    return isUserInGroup(req, getCurrentUserId(req), config.getAdminGroupId());
  }",False,True,The method tests if the user has an admin role by checking if the user is in the admin group. It takes in the webscript request and returns true if the user has an admin role.,True,"The code contains a method called `isAdmin` that takes a `WebScriptRequest` object as a parameter. It checks if the user associated with the request has an admin role by calling another method called `isUserInGroup` and passing the request, the current user ID, and the admin group ID. The method returns `true` if the user has an admin role."
29,ActivitiWebScriptBody,activiti web script body a class that wraps the webscripts request body so multiple formats such as xml may be supported in the future ,MemberClass,,,"org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+ActivitiWebScriptBody(WebScriptRequest) org.activiti.engine.impl.util.json.JSONObject+JSONObject(JSONTokener) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getInt(String) org.activiti.engine.impl.util.json.JSONObject+getInt(String) org.activiti.engine.impl.util.json.JSONObject+getInt(String) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getFormVariables() java.util.HashMap+HashMap() org.activiti.engine.impl.util.json.JSONObject+keys() org.activiti.engine.impl.util.json.JSONObject+keys() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+split(String) java.lang.String+split(String) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getInt(String) org.activiti.engine.impl.util.json.JSONObject+getInt(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getBoolean(String) org.activiti.engine.impl.util.json.JSONObject+getBoolean(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.Object+Object() org.activiti.engine.impl.util.json.JSONObject+get(String) org.activiti.engine.impl.util.json.JSONObject+get(String) java.util.Map+put(K,V) java.util.Map+put(K,V) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+get(String) org.activiti.engine.impl.util.json.JSONObject+get(String) java.lang.Object+Object()",org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody,3361,103,1,"/** 
 * A class that wraps the webscripts request body so multiple formats such as XML may be supported in the future.
 */
","/**
   * A class that wraps the webscripts request body so multiple formats such as
   * XML may be supported in the future.
   */
  public class ActivitiWebScriptBody {

    /**
     * The json body
     */
    private JSONObject jsonBody = null;

    /**
     * Constructor
     * 
     * @param req
     *          The webscript request
     * @throws IOException
     *           if body of correct format cannot be created
     */
    ActivitiWebScriptBody(WebScriptRequest req) throws IOException {
      jsonBody = new JSONObject(req.getContent().getContent());
    }

    /**
     * Gets a body parameter string value.
     * 
     * @param param
     *          The name of the parameter
     * @return The string value of the parameter
     */
    String getString(String param) {
      return jsonBody.getString(param);
    }

    /**
     * Gets a body parameter string value.
     * 
     * @param param
     *          The name of the parameter
     * @return The string value of the parameter
     */
    int getInt(String param) {
      return jsonBody.getInt(param);
    }

    /**
     * Gets the body as a map.
     * 
     * @return The body as a map
     */
    Map<String, Object> getFormVariables() {
      Map<String, Object> map = new HashMap<String, Object>();
      Iterator keys = jsonBody.keys();
      String key, typeKey, type;
      String[] keyPair;
      Object value;
      while (keys.hasNext()) {
        key = (String) keys.next();
        keyPair = key.split(""_"");
        if (keyPair.length == 1) {
          typeKey = keyPair[0] + ""_type"";
          if (jsonBody.has(typeKey)) {
            type = jsonBody.getString(typeKey);
            if (type.equals(""Integer"")) {
              value = jsonBody.getInt(key);
            } else if (type.equals(""Boolean"")) {
              value = jsonBody.getBoolean(key);
            } else if (type.equals(""Date"")) {
              value = jsonBody.getString(key);
            } else if (type.equals(""User"")) {
              value = jsonBody.getString(key);
            } else if (type.equals(""String"")) {
              value = jsonBody.getString(key);
            } else if (type.equals(""RepositoryFolder"")) {
              // TODO: Check implementation in CustomizedViewConnector, but
              // should be moved there
              value = jsonBody.getString(key);
              // if (conn != null) {
              // value = conn.getRepositoryFolder(jsonBody.getString(key));
              // } else {
              // throw new WebScriptException(Status.STATUS_BAD_REQUEST,
              // ""Parameter '"" + keyPair[0] + ""' of type '"" + type
              // + ""' requested without providing a repository connector"");
              // }
            } else {
              throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Parameter '"" + keyPair[0] + ""' is of unknown type '"" + type + ""'"");
            }
          } else {
            value = jsonBody.get(key);
          }
          map.put(key, value);
        } else if (keyPair.length == 2) {
          if (keyPair[1].equals(""required"")) {
            if (!jsonBody.has(keyPair[0]) || jsonBody.get(keyPair[0]) == null) {
              throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Parameter '"" + keyPair[0] + ""' has no value"");
            }
          }
        }
      }
      return map;
    }

  }",False,True,"/** 
 * A class that wraps the webscripts request body so multiple formats such as XML may be supported in the future.
 */
",False,"/** 
 * A class that wraps the webscripts request body so multiple formats such as XML may be supported in the future.
 */
"
