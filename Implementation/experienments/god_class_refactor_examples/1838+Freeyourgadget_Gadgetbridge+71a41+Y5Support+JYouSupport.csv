index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,LOG,log ,Field,,,,,75,1,26,,private static final Logger LOG = LoggerFactory.getLogger(Y5Support.class);,False,False,,False,
2,ctrlCharacteristic,ctrl characteristic ,Field,,,,,61,1,1,,public BluetoothGattCharacteristic ctrlCharacteristic = null;,True,True,,False,
3,measureCharacteristic,measure characteristic ,Field,,,,,64,1,1,,public BluetoothGattCharacteristic measureCharacteristic = null;,False,True,,False,
4,realtimeSamplesSupport,realtime samples support ,Field,,,,,54,1,2,,private RealtimeSamplesSupport realtimeSamplesSupport;,False,False,,False,
5,versionCmd,version cmd ,Field,,,,,83,1,18,,private final GBDeviceEventVersionInfo versionCmd = new GBDeviceEventVersionInfo();,True,True,,False,
6,batteryCmd,battery cmd ,Field,,,,,83,1,18,,private final GBDeviceEventBatteryInfo batteryCmd = new GBDeviceEventBatteryInfo();,True,True,,False,
7,Y5Support(),y5 support ,Method,,,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+UUID_SERVICE_JYOU,108,4,1,,"public Y5Support() {
        super(LOG);
        addSupportedService(JYouConstants.UUID_SERVICE_JYOU);
    }",False,False,"The function of the method is to initialize a Y5Support object. It calls the constructor of the superclass with a parameter LOG, and adds a supported service with the UUID_SERVICE_JYOU constant.",False,The code defines a constructor for the Y5Support class. It calls the constructor of its superclass with a LOG parameter and adds a supported service with a specific UUID to the Y5Support object.
8,initializeDevice(TransactionBuilder),initialize device builder ,Method,,,"org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+setGattCallback(GattCallback) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+setGattCallback(GattCallback) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+notify(BluetoothGattCharacteristic,boolean) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+notify(BluetoothGattCharacteristic,boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncSettings(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncSettings(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() org.slf4j.Logger+info(String) org.slf4j.Logger+info(String)",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+measureCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+UUID_CHARACTERISTIC_MEASURE nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+UUID_CHARACTERISTIC_CONTROL nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+measureCharacteristic nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,730,22,4,,"@Override
    protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
        LOG.info(""Initializing"");

        gbDevice.setState(GBDevice.State.INITIALIZING);
        gbDevice.sendDeviceUpdateIntent(getContext());

        measureCharacteristic = getCharacteristic(JYouConstants.UUID_CHARACTERISTIC_MEASURE);
        ctrlCharacteristic = getCharacteristic(JYouConstants.UUID_CHARACTERISTIC_CONTROL);

        builder.setGattCallback(this);
        builder.notify(measureCharacteristic, true);

        syncSettings(builder);

        gbDevice.setState(GBDevice.State.INITIALIZED);
        gbDevice.sendDeviceUpdateIntent(getContext());

        LOG.info(""Initialization Done"");

        return builder;
    }",True,True,"This method initializes a device by setting its state to ""initializing"", sending a device update intent, getting characteristics, setting a GATT callback, enabling notifications, syncing settings, setting the state to ""initialized"", sending a device update intent, and returning the transaction builder.",True,"This code is an overridden method that initializes a device. It sets the state of the device to ""INITIALIZING"", sends a device update intent, retrieves two characteristics, sets a GATT callback, enables notifications for the measure characteristic, synchronizes settings, sets the state of the device to ""INITIALIZED"", sends another device update intent, and finally returns the builder object."
9,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",on characteristic changed gatt characteristic ,Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventVersionInfo) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventVersionInfo) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventBatteryInfo) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventBatteryInfo) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.nio.ByteBuffer+getInt() java.nio.ByteBuffer+wrap(byte[],int,int) java.nio.ByteBuffer+wrap(byte[],int,int) java.nio.ByteBuffer+getInt() org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleRealtimeSteps(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleRealtimeSteps(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleHeartrate(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleHeartrate(int) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.lang.String+format(String,Object[]) java.lang.String+format(String,Object[])",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_HISTORY_SLEEP_COUNT nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_BLOOD_PRESSURE nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_DEVICE_INFO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+versionCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventVersionInfo+fwVersion nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+versionCmd nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+versionCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventVersionInfo+fwVersion nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_BATTERY_LEVEL nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+batteryCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo+level nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+batteryCmd nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+batteryCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo+level nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_STEPS_DATA nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_HEARTRATE nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_WATCH_MAC nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_GET_PHOTO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,2454,53,1,,"@Override
    public boolean onCharacteristicChanged(BluetoothGatt gatt,
                                           BluetoothGattCharacteristic characteristic) {
        if (super.onCharacteristicChanged(gatt, characteristic)) {
            return true;
        }

        UUID characteristicUUID = characteristic.getUuid();
        byte[] data = characteristic.getValue();
        if (data.length == 0)
            return true;

        switch (data[0]) {
            case JYouConstants.RECEIVE_HISTORY_SLEEP_COUNT:
                LOG.info(""onCharacteristicChanged: "" + data[0]);
                return true;
            case JYouConstants.RECEIVE_BLOOD_PRESSURE:
                int heartRate = data[2];
                int bloodPressureHigh = data[3];
                int bloodPressureLow = data[4];
                int bloodOxygen = data[5];
                int Fatigue = data[6];
                LOG.info(""RECEIVE_BLOOD_PRESSURE: Heart rate: "" + heartRate + "" Pressure high: "" + bloodPressureHigh+ "" pressure low: "" + bloodPressureLow);
                return true;
            case JYouConstants.RECEIVE_DEVICE_INFO:
                int model = data[7];
                int fwVerNum = data[4] & 0xFF;
                versionCmd.fwVersion = (fwVerNum / 100) + ""."" + ((fwVerNum % 100) / 10) + ""."" + ((fwVerNum % 100) % 10);
                handleGBDeviceEvent(versionCmd);
                LOG.info(""Firmware version is: "" + versionCmd.fwVersion);
                return true;
            case JYouConstants.RECEIVE_BATTERY_LEVEL:
                batteryCmd.level = data[8];
                handleGBDeviceEvent(batteryCmd);
                LOG.info(""Battery level is: "" + batteryCmd.level);
                return true;
            case JYouConstants.RECEIVE_STEPS_DATA:
                int steps = ByteBuffer.wrap(data, 5, 4).getInt();
                LOG.info(""Number of walked steps: "" + steps);
                handleRealtimeSteps(steps);
                return true;
            case JYouConstants.RECEIVE_HEARTRATE:
                handleHeartrate(data[8]);
                return true;
            case JYouConstants.RECEIVE_WATCH_MAC:
                return true;
            case JYouConstants.RECEIVE_GET_PHOTO:
                return true;
            default:
                LOG.info(""Unhandled characteristic change: "" + characteristicUUID + "" code: "" + String.format(""0x%1x ..."", data[0]));
                return true;
        }
    }",False,False,The function of this method is to handle characteristic changes in a BluetoothGatt device. It checks the type of characteristic change and performs different actions based on the type of change. It also logs information about the characteristic change.,True,"This code is an implementation of the `onCharacteristicChanged` method in a BluetoothGattCallback. It handles different types of characteristic changes received from a Bluetooth device, such as blood pressure, device information, battery level, steps data, heart rate, and more, by logging the received data and handling specific events accordingly."
10,handleRealtimeSteps(int),handle realtime steps value ,Method,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",,org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setSteps(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setSteps(int),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,243,7,2,,"private void handleRealtimeSteps(int value) {
        //todo Call on connect the device
        if (LOG.isDebugEnabled()) {
            LOG.debug(""realtime steps: "" + value);
        }
        getRealtimeSamplesSupport().setSteps(value);
    }",False,False,This method handles the real-time steps by setting the steps value and logging the value if debug logging is enabled.,True,The `handleRealtimeSteps` method is a private method that takes an integer value as a parameter. It logs the value of the parameter if debug logging is enabled and then sets the steps value using the `getRealtimeSamplesSupport()` method.
11,handleHeartrate(int),handle heartrate value ,Method,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",,org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setHeartrateBpm(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setHeartrateBpm(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+isRunning() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+isRunning() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+triggerCurrentSample() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+triggerCurrentSample(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,486,11,2,,"private void handleHeartrate(int value) {
        if (LOG.isDebugEnabled()) {
            LOG.debug(""heart rate: "" + value);
        }
        RealtimeSamplesSupport realtimeSamplesSupport = getRealtimeSamplesSupport();
        realtimeSamplesSupport.setHeartrateBpm(value);
        if (!realtimeSamplesSupport.isRunning()) {
            // single shot measurement, manually invoke storage and result publishing
            realtimeSamplesSupport.triggerCurrentSample();
        }
    }",False,False,"This method handles the heart rate value by logging it if debugging is enabled. It then sets the heart rate value in the RealtimeSamplesSupport object. If the RealtimeSamplesSupport is not running, it triggers a single shot measurement and manually invokes storage and result publishing.",True,The `handleHeartrate` method is a private method that takes an integer value as input. It logs the heart rate value if debug logging is enabled. It then sets the heart rate value in a `RealtimeSamplesSupport` object and triggers the storage and result publishing if the object is not currently running.
12,"createActivitySample(Device,User,int,SampleProvider)",create activity sample device user timestamp in seconds provider ,Method,,,,,365,8,1,,"public JYouActivitySample createActivitySample(Device device, User user, int timestampInSeconds, SampleProvider provider) {
        JYouActivitySample sample = new JYouActivitySample();
        sample.setDevice(device);
        sample.setUser(user);
        sample.setTimestamp(timestampInSeconds);
        sample.setProvider(provider);
        return sample;
    }",False,False,"This method creates a JYouActivitySample object with the given device, user, timestamp, and sample provider, and returns the created object.",True,"This code defines a method called ""createActivitySample"" that takes in a device, user, timestamp, and sample provider as parameters. It creates a new instance of the JYouActivitySample class, sets its properties using the provided parameters, and returns the created sample."
13,enableRealtimeSamplesTimer(boolean),enable realtime samples timer enable ,Method,onEnableRealtimeHeartRateMeasurement(boolean),,nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+start() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+start() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+stop() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+stop(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport,272,9,2,,"private void enableRealtimeSamplesTimer(boolean enable) {
        if (enable) {
            getRealtimeSamplesSupport().start();
        } else {
            if (realtimeSamplesSupport != null) {
                realtimeSamplesSupport.stop();
            }
        }
    }",False,False,"This method enables or disables a timer for collecting real-time samples. If enabled, it starts collecting samples using the getRealtimeSamplesSupport() method. If disabled, it stops collecting samples if the realtimeSamplesSupport object is not null.",True,"The code defines a private method called `enableRealtimeSamplesTimer` that takes a boolean parameter `enable`. If `enable` is true, it starts the `realtimeSamplesSupport`, otherwise it stops it if it is not null. The method is responsible for enabling or disabling a timer for collecting real-time samples."
14,getRealtimeSamplesSupport(),get realtime samples support ,Method,handleRealtimeSteps(int) handleHeartrate(int) enableRealtimeSamplesTimer(boolean),,"+(long,long) +doCurrentSample()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport,2277,42,2,,"private RealtimeSamplesSupport getRealtimeSamplesSupport() {
        if (realtimeSamplesSupport == null) {
            realtimeSamplesSupport = new RealtimeSamplesSupport(1000, 1000) {
                @Override
                public void doCurrentSample() {

                    try (DBHandler handler = GBApplication.acquireDB()) {
                        DaoSession session = handler.getDaoSession();
                        int ts = (int) (System.currentTimeMillis() / 1000);
                        JYouSampleProvider provider = new JYouSampleProvider(gbDevice, session);
                        JYouActivitySample sample = createActivitySample(DBHelper.getDevice(getDevice(), session), DBHelper.getUser(session), ts, provider);
                        sample.setHeartRate(getHeartrateBpm());
                        sample.setRawIntensity(ActivitySample.NOT_MEASURED);
                        sample.setRawKind(JYouSampleProvider.TYPE_ACTIVITY); // to make it visible in the charts TODO: add a MANUAL kind for that?

                        provider.addGBActivitySample(sample);

                        // set the steps only afterwards, since realtime steps are also recorded
                        // in the regular samples and we must not count them twice
                        // Note: we know that the DAO sample is never committed again, so we simply
                        // change the value here in memory.
                        sample.setSteps(getSteps());
                        if(steps > 1){
                            LOG.debug(""Have steps: "" + getSteps());
                        }

                        if (LOG.isDebugEnabled()) {
                            LOG.debug(""realtime sample: "" + sample);
                        }

                        Intent intent = new Intent(DeviceService.ACTION_REALTIME_SAMPLES)
                                .putExtra(DeviceService.EXTRA_REALTIME_SAMPLE, sample);
                        LocalBroadcastManager.getInstance(getContext()).sendBroadcast(intent);

                    } catch (Exception e) {
                        LOG.warn(""Unable to acquire db for saving realtime samples"", e);
                    }
                }
            };
        }
        return realtimeSamplesSupport;
    }",False,False,"This method returns an instance of the class RealtimeSamplesSupport. If the instance is null, it creates a new instance with specific parameters and overrides the doCurrentSample() method. The doCurrentSample() method performs various operations, including creating a sample, setting values, and sending a broadcast.",True,"This code defines a private method called `getRealtimeSamplesSupport()` that returns an instance of `RealtimeSamplesSupport`. Inside the method, it creates a new instance of `RealtimeSamplesSupport` with some parameters and overrides the `doCurrentSample()` method. This method performs various operations related to acquiring a database, creating a sample, setting values, and broadcasting an intent."
15,syncDateAndTime(TransactionBuilder),sync date and time builder ,Method,syncSettings(TransactionBuilder) onSetTime(),,"java.util.Calendar+getInstance() java.util.Calendar+getInstance() java.lang.String+valueOf(int) java.lang.String+valueOf(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int)",java.util.Calendar+YEAR java.util.Calendar+MONTH java.util.Calendar+DAY_OF_MONTH java.util.Calendar+HOUR_OF_DAY java.util.Calendar+MINUTE java.util.Calendar+SECOND java.util.Calendar+DAY_OF_WEEK nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_DATE_AND_TIME,919,18,2,,"private void syncDateAndTime(TransactionBuilder builder) {
        Calendar cal = Calendar.getInstance();
        String strYear = String.valueOf(cal.get(Calendar.YEAR));
        byte year1 = (byte)Integer.parseInt(strYear.substring(0, 2));
        byte year2 = (byte)Integer.parseInt(strYear.substring(2, 4));
        byte month = (byte)cal.get(Calendar.MONTH);
        byte day = (byte)cal.get(Calendar.DAY_OF_MONTH);
        byte hour = (byte)cal.get(Calendar.HOUR_OF_DAY);
        byte minute = (byte)cal.get(Calendar.MINUTE);
        byte second = (byte)cal.get(Calendar.SECOND);
        byte weekDay = (byte)cal.get(Calendar.DAY_OF_WEEK);

        builder.write(ctrlCharacteristic, commandWithChecksum(
                JYouConstants.CMD_SET_DATE_AND_TIME,
                (year1 << 24) | (year2 << 16) | (month << 8) | day,
                (hour << 24) | (minute << 16) | (second << 8) | weekDay
        ));
    }",True,True,"The function syncs the date and time from the device's calendar to a transaction builder object. It extracts the year, month, day, hour, minute, second, and weekday from the calendar and writes them to the builder using bitwise operations.",True,"This code is a private method that synchronizes the date and time on a device. It retrieves the current date and time from the system, converts them into bytes, and writes them to a specified characteristic using a given transaction builder."
16,syncSettings(TransactionBuilder),sync settings builder ,Method,initializeDevice(TransactionBuilder),,nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder),,95,3,2,,"private void syncSettings(TransactionBuilder builder) {
        syncDateAndTime(builder);
    }",False,True,"The function of the method ""syncSettings"" is to synchronize the date and time using the provided TransactionBuilder object.",True,The code snippet contains a private method called `syncSettings` that takes a `TransactionBuilder` object as a parameter. This method internally calls another method called `syncDateAndTime` to synchronize the date and time settings. The purpose of this method is to synchronize various settings related to transactions.
17,"showNotification(byte,String,String)",show notification icon title message ,Method,onNotification(NotificationSpec) onSetCallState(CallSpec) onFindDevice(boolean),,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_ACTION_SHOW_NOTIFICATION nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,1579,37,2,,"private void showNotification(byte icon, String title, String message) {
        try {
            TransactionBuilder builder = performInitialized(""ShowNotification"");

            byte[] titleBytes = stringToUTF8Bytes(title, 16);
            byte[] messageBytes = stringToUTF8Bytes(message, 80);

            for (int i = 1; i <= 7; i++)
            {
                byte[] currentPacket = new byte[20];
                currentPacket[0] = JYouConstants.CMD_ACTION_SHOW_NOTIFICATION;
                currentPacket[1] = 7;
                currentPacket[2] = (byte)i;
                switch(i) {
                    case 1:
                        currentPacket[4] = icon;
                        break;
                    case 2:
                        if (titleBytes != null) {
                            System.arraycopy(titleBytes, 0, currentPacket, 3, 6);
                            System.arraycopy(titleBytes, 6, currentPacket, 10, 10);
                        }
                        break;
                    default:
                        if (messageBytes != null) {
                            System.arraycopy(messageBytes, 16 * (i - 3), currentPacket, 3, 6);
                            System.arraycopy(messageBytes, 6 + 16 * (i - 3), currentPacket, 10, 10);
                        }
                        break;
                }
                builder.write(ctrlCharacteristic, currentPacket);
            }
            performConnected(builder.getTransaction());
        } catch (IOException e) {
            LOG.warn(e.getMessage());
        }
    }",True,True,"The function of this method is to show a notification with a specified icon, title, and message. It creates packets of data to send to a connected device, containing the necessary information for displaying the notification.",True,"The `showNotification` method is a private method that takes in an icon, title, and message as parameters. It creates a transaction builder and sends multiple packets of data to a control characteristic, each containing different parts of the notification information, such as the icon, title, and message."
18,useAutoConnect(),use auto connect ,Method,,,,,74,4,1,,"@Override
    public boolean useAutoConnect() {
        return true;
    }",True,True,"The function of the method is to determine whether to use auto-connect functionality. It returns a boolean value of true, indicating that auto-connect should be used.",True,"The code snippet defines a method named ""useAutoConnect()"" that returns a boolean value. The method is overridden from a superclass or interface and always returns true, indicating that auto-connect functionality should be used."
19,onNotification(NotificationSpec),on notification notification spec ,Method,,,"nodomain.freeyourgadget.gadgetbridge.util.StringUtils+getFirstOf(String,String) nodomain.freeyourgadget.gadgetbridge.util.StringUtils+getFirstOf(String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String)",nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+sender nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+title nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+type nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_SMS nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_FACEBOOK nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_TWITTER nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_WHATSAPP nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_LINE nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+body,868,24,1,,"@Override
    public void onNotification(NotificationSpec notificationSpec) {
        String notificationTitle = StringUtils.getFirstOf(notificationSpec.sender, notificationSpec.title);
        byte icon;
        switch (notificationSpec.type) {
            case GENERIC_SMS:
                icon = JYouConstants.ICON_SMS;
                break;
            case FACEBOOK:
            case FACEBOOK_MESSENGER:
                icon = JYouConstants.ICON_FACEBOOK;
                break;
            case TWITTER:
                icon = JYouConstants.ICON_TWITTER;
                break;
            case WHATSAPP:
                icon = JYouConstants.ICON_WHATSAPP;
                break;
            default:
                icon = JYouConstants.ICON_LINE;
                break;
        }
        showNotification(icon, notificationTitle, notificationSpec.body);
    }",True,True,"This method is an overridden method that takes a NotificationSpec object as a parameter. It extracts the notification title from the sender or title field of the NotificationSpec object. It then determines the appropriate icon based on the type field of the NotificationSpec object. Finally, it calls the showNotification method with the icon, notification title, and body of the NotificationSpec object.",True,"This code is an implementation of the `onNotification` method, which takes a `NotificationSpec` object as a parameter. It determines the appropriate icon based on the type of notification and calls the `showNotification` method with the icon, title, and body of the notification."
20,onDeleteNotification(int),on delete notification id ,Method,,,,,62,3,1,,"@Override
    public void onDeleteNotification(int id) {
    }",True,True,"This method serves as an override for the onDeleteNotification function. It takes an integer parameter ""id"" and does not return any value.",True,"The code contains a method named `onDeleteNotification` that takes an integer parameter `id`. However, the method does not have any implementation or functionality specified within it."
21,onSetAlarms(ArrayList<? extends Alarm>),on set alarms alarms ,Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) java.util.ArrayList+size() java.util.ArrayList+size() nodomain.freeyourgadget.gadgetbridge.util.AlarmUtils+toCalendar(Alarm) nodomain.freeyourgadget.gadgetbridge.util.AlarmUtils+toCalendar(Alarm) java.util.ArrayList+get(int) java.util.ArrayList+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.ArrayList+get(int) java.util.ArrayList+get(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.ArrayList+get(int) java.util.ArrayList+get(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_ALARM_1 nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_ALARM_2 nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_ALARM_3 nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic java.util.Calendar+HOUR_OF_DAY java.util.Calendar+MINUTE nodomain.freeyourgadget.gadgetbridge.util.GB+INFO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,1400,34,1,,"@Override
    public void onSetAlarms(ArrayList<? extends Alarm> alarms) {
        try {
            TransactionBuilder builder = performInitialized(""SetAlarms"");

            for (int i = 0; i < alarms.size(); i++)
            {
                byte cmd;
                switch (i) {
                    case 0:
                        cmd = JYouConstants.CMD_SET_ALARM_1;
                        break;
                    case 1:
                        cmd = JYouConstants.CMD_SET_ALARM_2;
                        break;
                    case 2:
                        cmd = JYouConstants.CMD_SET_ALARM_3;
                        break;
                    default:
                        return;
                }
                Calendar cal = AlarmUtils.toCalendar(alarms.get(i));
                builder.write(ctrlCharacteristic, commandWithChecksum(
                        cmd,
                        alarms.get(i).getEnabled() ? cal.get(Calendar.HOUR_OF_DAY) : -1,
                        alarms.get(i).getEnabled() ? cal.get(Calendar.MINUTE) : -1
                ));
            }
            performConnected(builder.getTransaction());
            GB.toast(getContext(), ""Alarm settings applied - do note that the current device does not support day specification"", Toast.LENGTH_LONG, GB.INFO);
        } catch(IOException e) {
            LOG.warn(e.getMessage());
        }
    }",False,True,"The function of this method is to set alarms on a device. It takes an ArrayList of Alarm objects as input and uses a switch statement to determine the appropriate command to send to the device for each alarm. It then converts the alarm time to a Calendar object and writes the command to the device. Finally, it displays a toast message indicating that the alarm settings have been applied.",True,"This code is an implementation of the `onSetAlarms` method, which takes in a list of alarms and sets them on a device. It iterates through the alarms, assigns a command based on the index, converts the alarm time to a calendar, and writes the command with the alarm details to a transaction. Finally, it applies the transaction and displays a toast message."
22,onSetTime(),on set time ,Method,,,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,306,10,1,,"@Override
    public void onSetTime() {
        try {
            TransactionBuilder builder = performInitialized(""SetTime"");
            syncDateAndTime(builder);
            performConnected(builder.getTransaction());
        } catch(IOException e) {
            LOG.warn(e.getMessage());
        }
    }",True,True,"This method is an overridden function that is called when the time is set. It performs a series of actions, including initializing a transaction, synchronizing the date and time, and performing a connected transaction. If an IOException occurs, it logs a warning message.",True,"The `onSetTime()` method is called to set the time. It initializes a transaction builder, synchronizes the date and time, and then performs the transaction if the device is connected. If an IOException occurs, it logs a warning message."
23,onSetCallState(CallSpec),on set call state call spec ,Method,,,"nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String)",nodomain.freeyourgadget.gadgetbridge.model.CallSpec+command nodomain.freeyourgadget.gadgetbridge.model.CallSpec+CALL_INCOMING nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_CALL nodomain.freeyourgadget.gadgetbridge.model.CallSpec+name nodomain.freeyourgadget.gadgetbridge.model.CallSpec+number,268,8,1,,"@Override
    public void onSetCallState(CallSpec callSpec) {
        switch (callSpec.command) {
            case CallSpec.CALL_INCOMING:
                showNotification(JYouConstants.ICON_CALL, callSpec.name, callSpec.number);
                break;
        }
    }",False,True,"This method is used to handle the call state when it is set. If the call is incoming, it will show a notification with the call details.",True,"This code is an implementation of the `onSetCallState` method, which is called when the call state changes. It checks if the call is incoming and then shows a notification with the caller's name and number using the `showNotification` function."
24,onSetCannedMessages(CannedMessagesSpec),on set canned messages canned messages spec ,Method,,,,,93,4,1,,"@Override
    public void onSetCannedMessages(CannedMessagesSpec cannedMessagesSpec) {

    }",True,True,This method is used to handle the event of setting canned messages. It takes a CannedMessagesSpec object as a parameter and does not return anything.,True,"The code snippet defines an overridden method called ""onSetCannedMessages"" that takes a parameter of type ""CannedMessagesSpec"". The purpose or functionality of this method is not provided in the given code."
25,onSetMusicState(MusicStateSpec),on set music state state spec ,Method,,,,,76,4,1,,"@Override
    public void onSetMusicState(MusicStateSpec stateSpec) {

    }",True,True,This method is used to override the onSetMusicState function. It takes a MusicStateSpec object as a parameter and does not return anything.,True,"The code snippet defines an overridden method called ""onSetMusicState"" that takes a parameter of type ""MusicStateSpec"". The purpose or functionality of this method is not provided in the given code."
26,onSetMusicInfo(MusicSpec),on set music info music spec ,Method,,,,,70,4,1,,"@Override
    public void onSetMusicInfo(MusicSpec musicSpec) {

    }",True,True,This method is used to override the onSetMusicInfo function. It takes a MusicSpec object as a parameter and does not return anything.,True,"The code snippet defines an overridden method called ""onSetMusicInfo"" that takes a parameter of type ""MusicSpec"". The purpose or functionality of this method is not specified in the given code."
27,onEnableRealtimeSteps(boolean),on enable realtime steps enable ,Method,,,nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+onEnableRealtimeHeartRateMeasurement(boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+onEnableRealtimeHeartRateMeasurement(boolean),,125,4,1,,"@Override
    public void onEnableRealtimeSteps(boolean enable) {
        onEnableRealtimeHeartRateMeasurement(enable);
    }",True,True,This method is an override that enables or disables real-time step counting. It calls another method to enable or disable real-time heart rate measurement.,True,The code snippet is implementing a method called `onEnableRealtimeSteps` which takes a boolean parameter `enable`. This method internally calls another method `onEnableRealtimeHeartRateMeasurement` with the same `enable` parameter. The purpose of this code is to enable or disable real-time heart rate measurement based on the value of the `enable` parameter.
28,onInstallApp(Uri),on install app uri ,Method,,,,,56,4,1,,"@Override
    public void onInstallApp(Uri uri) {

    }",True,True,"This method is used to handle the event of installing an app. It takes a Uri parameter, which represents the location of the app to be installed.",True,"The code snippet defines an overridden method called ""onInstallApp"" that takes a Uri parameter. However, the method does not contain any implementation or logic, as the method body is empty."
29,onAppInfoReq(),on app info req ,Method,,,,,49,4,1,,"@Override
    public void onAppInfoReq() {

    }",True,True,"This method serves as an override for the onAppInfoReq function, which does not return any value and does not take any parameters.",True,"The code snippet represents a method called ""onAppInfoReq"" that is being overridden from a superclass or interface. However, without the implementation details within the method, it is not possible to provide a more specific summary of its functionality."
30,"onAppStart(UUID,boolean)",on app start uuid start ,Method,,,,,71,4,1,,"@Override
    public void onAppStart(UUID uuid, boolean start) {

    }",True,True,This method is used to handle the event of the app starting. It takes in a UUID (Universally Unique Identifier) and a boolean indicating whether the app is starting or not.,True,"The code snippet defines an overridden method called ""onAppStart"" that takes a UUID and a boolean parameter. It does not have any implementation logic inside the method body."
31,onAppDelete(UUID),on app delete uuid ,Method,,,,,57,4,1,,"@Override
    public void onAppDelete(UUID uuid) {

    }",True,True,This method serves as an override for the onAppDelete function. It takes a UUID parameter and does not return any value.,True,"The code snippet defines an overridden method called ""onAppDelete"" that takes a UUID parameter. However, the method body is empty, indicating that it does not perform any specific actions or operations when called."
32,"onAppConfiguration(UUID,String,Integer)",on app configuration app uuid config id ,Method,,,,,94,4,1,,"@Override
    public void onAppConfiguration(UUID appUuid, String config, Integer id) {

    }",True,True,"This method serves as an override for the onAppConfiguration function. It takes in three parameters: appUuid (a UUID), config (a String), and id (an Integer). The function does not return anything.",True,"The code snippet defines an overridden method called ""onAppConfiguration"" that takes three parameters: an app UUID, a configuration string, and an ID. The purpose or functionality of this method is not specified in the given code."
33,onAppReorder(UUID[]),on app reorder uuids ,Method,,,,,61,4,1,,"@Override
    public void onAppReorder(UUID[] uuids) {

    }",True,True,"This method serves as an override for the onAppReorder function, which takes an array of UUIDs as a parameter and does not return any value.",True,"The code snippet defines an overridden method called ""onAppReorder"" that takes an array of UUIDs as a parameter. The purpose or functionality of this method is not specified in the given code."
34,onFetchRecordedData(int),on fetch recorded data data types ,Method,,,,,68,3,1,,"@Override
    public void onFetchRecordedData(int dataTypes) {
    }",True,True,This method is used to handle the event of fetching recorded data. It takes an integer parameter representing the data types being fetched.,True,"The code snippet defines an overridden method called ""onFetchRecordedData"" with a parameter ""dataTypes"". The purpose or functionality of this method is not provided in the given code."
35,dispose(),dispose ,Method,,,org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+dispose(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,97,5,1,,"@Override
    public void dispose() {
        LOG.info(""Dispose"");
        super.dispose();
    }",False,False,This method serves to log a message and then call the dispose method of the superclass.,True,"The given code snippet overrides the `dispose()` method, which is typically used to release resources and perform cleanup tasks. It logs a message indicating the disposal process and then calls the `dispose()` method of the superclass."
36,onReset(int),on reset flags ,Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_ACTION_REBOOT_DEVICE nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,420,12,1,,"@Override
    public void onReset(int flags) {
        try {
            TransactionBuilder builder = performInitialized(""Reboot"");
            builder.write(ctrlCharacteristic, commandWithChecksum(
                    JYouConstants.CMD_ACTION_REBOOT_DEVICE, 0, 0
            ));
            performConnected(builder.getTransaction());
        } catch(Exception e) {
            LOG.warn(e.getMessage());
        }
    }",True,True,"This method is used to perform a reboot action on a device. It initializes a transaction builder, writes a command with a checksum to a control characteristic, and then performs the transaction. If an exception occurs, it logs a warning message.",True,"This code is an implementation of the `onReset` method, which is called when a reset event occurs. It creates a `TransactionBuilder` object, writes a command with a checksum to a characteristic, and performs the transaction. If any exception occurs, it logs a warning message."
37,onHeartRateTest(),on heart rate test ,Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_HEARTRATE_AUTO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,425,13,1,,"@Override
    public void onHeartRateTest() {
        try {
            TransactionBuilder builder = performInitialized(""HeartRateTest"");
            builder.write(ctrlCharacteristic, commandWithChecksum(
                    JYouConstants.CMD_SET_HEARTRATE_AUTO, 0, 0

            ));
            performConnected(builder.getTransaction());
        } catch(Exception e) {
            LOG.warn(e.getMessage());
        }
    }",False,False,"This method is used to perform a heart rate test. It initializes a transaction builder, writes a command to the control characteristic, and then performs the transaction. If an exception occurs, it logs a warning message.",True,"The code defines a method called ""onHeartRateTest"" that performs a series of actions related to a heart rate test. It initializes a transaction builder, writes a command to a control characteristic, and then performs the transaction. If any exception occurs during this process, a warning message is logged."
38,onEnableRealtimeHeartRateMeasurement(boolean),on enable realtime heart rate measurement enable ,Method,onEnableRealtimeSteps(boolean),,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+enableRealtimeSamplesTimer(boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+enableRealtimeSamplesTimer(boolean) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_ACTION_HEARTRATE_SWITCH nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,537,13,1,,"@Override
    public void onEnableRealtimeHeartRateMeasurement(boolean enable) {
        try {
            TransactionBuilder builder = performInitialized(""RealTimeHeartMeasurement"");
            builder.write(ctrlCharacteristic, commandWithChecksum(
                    JYouConstants.CMD_ACTION_HEARTRATE_SWITCH, 0, enable ? 1 : 0
            ));
            performConnected(builder.getTransaction());
            enableRealtimeSamplesTimer(enable);
        } catch (Exception e) {
            LOG.warn(e.getMessage());
        }
    }",False,False,This method is used to enable or disable real-time heart rate measurement. It performs necessary operations to write the appropriate command to the control characteristic and handles any exceptions that may occur.,True,This code is a method that enables or disables real-time heart rate measurement. It writes a command to a control characteristic and performs a transaction to enable or disable the measurement. It also starts or stops a timer for collecting real-time heart rate samples.
39,onFindDevice(boolean),on find device start ,Method,,,"nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext()",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_QQ nodomain.freeyourgadget.gadgetbridge.util.GB+INFO,321,7,1,,"@Override
    public void onFindDevice(boolean start) {
        if (start) {
            showNotification(JYouConstants.ICON_QQ, ""Gadgetbridge"", ""Bzzt! Bzzt!"");
            GB.toast(getContext(), ""As your device doesn't have sound, it will only vibrate 3 times consecutively"", Toast.LENGTH_LONG, GB.INFO);
        }
    }",True,True,"This method is used to handle the event of finding a device. If the ""start"" parameter is true, it shows a notification and displays a toast message to inform the user about the device's behavior when it doesn't have sound.",True,"The code is an implementation of the ""onFindDevice"" method, which is called when a device is found. If the ""start"" parameter is true, it shows a notification with a specific icon and message, and also displays a toast message indicating that the device will vibrate three times consecutively as it doesn't have sound."
40,onSetConstantVibration(int),on set constant vibration integer ,Method,,,,,70,4,1,,"@Override
    public void onSetConstantVibration(int integer) {

    }",True,True,"This method is used to override the function ""onSetConstantVibration"" and it takes an integer as a parameter. The purpose or functionality of this method is not specified in the given code.",True,"The code snippet defines a method named ""onSetConstantVibration"" that takes an integer parameter. However, the method does not contain any implementation or logic, as the method body is empty."
41,onScreenshotReq(),on screenshot req ,Method,,,,,52,4,1,,"@Override
    public void onScreenshotReq() {

    }",True,True,This method serves as an override for the onScreenshotReq() function.,True,"The code snippet represents a method called ""onScreenshotReq()"" which does not have any implementation. It is likely intended to handle a screenshot request event, but the specific functionality is not provided in the given code."
42,onEnableHeartRateSleepSupport(boolean),on enable heart rate sleep support enable ,Method,,,,,80,4,1,,"@Override
    public void onEnableHeartRateSleepSupport(boolean enable) {

    }",True,True,This method is used to enable or disable support for heart rate sleep in a program or system.,True,"This code defines a method called ""onEnableHeartRateSleepSupport"" which takes a boolean parameter. The purpose of this method is not specified in the given code snippet."
43,onSetHeartRateMeasurementInterval(int),on set heart rate measurement interval seconds ,Method,,,,,81,4,1,,"@Override
    public void onSetHeartRateMeasurementInterval(int seconds) {

    }",True,True,This method is used to set the measurement interval for heart rate in seconds.,True,"The code snippet represents a method called ""onSetHeartRateMeasurementInterval"" which takes an integer parameter representing the interval in seconds. However, the method does not contain any implementation or logic, as the method body is empty."
44,onAddCalendarEvent(CalendarEventSpec),on add calendar event calendar event spec ,Method,,,,,90,4,1,,"@Override
    public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {

    }",True,True,This method serves as an override for the onAddCalendarEvent function. It takes a CalendarEventSpec parameter and does not return anything.,True,"The code contains an overridden method called ""onAddCalendarEvent"" that takes a parameter of type ""CalendarEventSpec"". The purpose or functionality of this method is not specified in the given code snippet."
45,"onDeleteCalendarEvent(byte,long)",on delete calendar event type id ,Method,,,,,76,4,1,,"@Override
    public void onDeleteCalendarEvent(byte type, long id) {

    }",True,True,"This method serves as an override for the onDeleteCalendarEvent function. It takes in a byte type and a long id as parameters, but does not have any implementation code.",True,The code snippet defines a method called `onDeleteCalendarEvent` which takes two parameters: a byte type and a long id. The method does not have any implementation and is intended to be overridden by subclasses to handle the deletion of a calendar event.
46,onSendConfiguration(String),on send configuration config ,Method,,,,,69,4,1,,"@Override
    public void onSendConfiguration(String config) {

    }",False,True,"This method is an override of a superclass method. It takes a string parameter called ""config"" and does not return anything. Its purpose is to handle the event of sending a configuration.",True,"The code snippet defines a method called ""onSendConfiguration"" that takes a string parameter called ""config"". It is marked with the ""@Override"" annotation, indicating that it overrides a method from a superclass or interface. However, the method body is empty, so it does not perform any specific actions."
47,onReadConfiguration(String),on read configuration config ,Method,,,,,69,4,1,,"@Override
    public void onReadConfiguration(String config) {

    }",True,True,"This method is an override of a superclass method. It takes a string parameter called ""config"" and does not return anything. Its purpose is to handle the event of reading a configuration.",True,"The code snippet defines a method named ""onReadConfiguration"" that takes a string parameter called ""config"". It is marked with the ""@Override"" annotation, indicating that it overrides a method from a superclass or interface. However, the method body is empty, so it does not perform any specific functionality."
48,onTestNewFunction(),on test new function ,Method,,,,,53,3,1,,"@Override
    public void onTestNewFunction() {
    }",True,True,"This method serves as an override for the onTestNewFunction() method, but it does not have any specific functionality or implementation.",True,"The code snippet defines a method named ""onTestNewFunction"" which does not have any parameters and does not return any value. It is annotated with ""@Override"" indicating that it overrides a method from a superclass or interface."
49,onSendWeather(WeatherSpec),on send weather weather spec ,Method,,,,,73,4,1,,"@Override
    public void onSendWeather(WeatherSpec weatherSpec) {

    }",True,True,This method serves as an override for the onSendWeather function. It takes a WeatherSpec object as a parameter and does not return anything.,True,"The code contains an overridden method called ""onSendWeather"" that takes a parameter of type ""WeatherSpec"". The purpose or functionality of this method is not specified in the given code snippet."
50,"commandWithChecksum(byte,int,int)",command with checksum cmd arg slot1 arg slot2 ,Method,syncDateAndTime(TransactionBuilder) onSetAlarms(ArrayList<? extends Alarm>) onReset(int) onHeartRateTest() onEnableRealtimeHeartRateMeasurement(boolean),,java.nio.ByteBuffer+allocate(int) java.nio.ByteBuffer+allocate(int) java.nio.ByteBuffer+put(byte) java.nio.ByteBuffer+put(byte) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+array() java.nio.ByteBuffer+array(),,430,18,2,,"private byte[] commandWithChecksum(byte cmd, int argSlot1, int argSlot2)
    {
        ByteBuffer buf = ByteBuffer.allocate(10);
        buf.put(cmd);
        buf.putInt(argSlot1);
        buf.putInt(argSlot2);

        byte[] bytesToWrite = buf.array();

        byte checksum = 0;
        for (byte b : bytesToWrite) {
            checksum += b;
        }

        bytesToWrite[9] = checksum;

        return bytesToWrite;
    }",True,True,"This method takes a command, and two arguments, and returns a byte array with a checksum. It creates a ByteBuffer, puts the command and arguments into it, calculates the checksum, and adds it to the byte array before returning it.",False,"This code defines a private method named `commandWithChecksum` that takes a command byte and two integer arguments. It creates a byte buffer, populates it with the command and arguments, calculates a checksum by summing all the bytes, and finally appends the checksum to the byte array before returning it."
51,"stringToUTF8Bytes(String,int)",string to ut f8 bytes src byte count ,Method,"showNotification(byte,String,String) showNotification(byte,String,String)",,"java.lang.String+length() java.lang.String+length() java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.lang.String+getBytes(String) java.lang.String+getBytes(String) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,798,24,2,,"private byte[] stringToUTF8Bytes(String src, int byteCount) {
        try {
            if (src == null)
                return null;

            for (int i = src.length(); i > 0; i--) {
                String sub = src.substring(0, i);
                byte[] subUTF8 = sub.getBytes(""UTF-8"");

                if (subUTF8.length == byteCount) {
                    return subUTF8;
                }

                if (subUTF8.length < byteCount) {
                    byte[] largerSubUTF8 = new byte[byteCount];
                    System.arraycopy(subUTF8, 0, largerSubUTF8, 0, subUTF8.length);
                    return largerSubUTF8;
                }
            }
        } catch (UnsupportedEncodingException e) {
            LOG.warn(e.getMessage());
        }
        return null;
    }",True,True,"The function of this method is to convert a given string into a byte array using the UTF-8 encoding. The method takes two parameters: the source string and the desired byte count. It returns a byte array that contains the UTF-8 encoded bytes of the string, with a length equal to the specified byte count. If the string is null or an unsupported encoding is encountered, it returns null.",False,"This code defines a private method that takes a string and a byte count as input and converts the string to UTF-8 encoded bytes. It iteratively checks if the length of the UTF-8 encoded bytes matches the given byte count and returns the corresponding byte array. If the length is smaller, it creates a larger byte array and copies the UTF-8 encoded bytes into it."
