index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,logger,logger ,Field,,,,,86,2,26,,"private static final Logger logger = Logger
        .getLogger(FirstWizardPage.class);",True,True,,False,
2,FIRST_PAGE_IDENTIFIER,first page identifier ,Field,,,,,73,1,25,,"public static final String FIRST_PAGE_IDENTIFIER = ""FirstPageIdentifier"";",False,False,,False,
3,USER_NAME_EXAMPLE,user name example ,Field,,,,,74,1,25,,"public static final String USER_NAME_EXAMPLE = ""Ex: johnsmith@jabber.org"";",True,True,,False,
4,jabberNewAccountDialog,jabber new account dialog ,Field,,,,,54,1,2,,private JabberNewAccountDialog jabberNewAccountDialog;,True,True,,False,
5,userIDPassPanel,user id pass panel ,Field,,,,,88,2,2,,"private JPanel userIDPassPanel
        = new TransparentPanel(new BorderLayout(10, 10));",True,True,,False,
6,labelsPanel,labels panel ,Field,FirstWizardPage(JabberAccountRegistrationWizard) init(),,,,52,1,2,,private JPanel labelsPanel = new TransparentPanel();,True,True,,False,
7,valuesPanel,values panel ,Field,FirstWizardPage(JabberAccountRegistrationWizard) init(),,,,52,1,2,,private JPanel valuesPanel = new TransparentPanel();,True,True,,False,
8,userIDLabel,user id label ,Field,,,,,105,2,2,,"private JLabel userIDLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.USERNAME""));",True,True,,False,
9,passLabel,pass label ,Field,,,,,91,2,2,,"private JLabel passLabel
        = new JLabel(Resources.getString(""service.gui.PASSWORD""));",True,True,,False,
10,emptyPanel,empty panel ,Field,init() init(),,,,51,1,2,,private JPanel emptyPanel = new TransparentPanel();,True,True,,False,
11,userIDExampleLabel,user id example label ,Field,init() init() init(),,,,66,1,2,,private JLabel userIDExampleLabel = new JLabel(USER_NAME_EXAMPLE);,True,True,,False,
12,userIDField,user id field ,Field,init() loadAccount(ProtocolProviderService) loadAccount(ProtocolProviderService),,,,50,1,2,,private JTextField userIDField = new JTextField();,True,True,,False,
13,passField,pass field ,Field,loadAccount(ProtocolProviderService),,,,56,1,2,,private JPasswordField passField = new JPasswordField();,True,True,,False,
14,rememberPassBox,remember pass box ,Field,init() loadAccount(ProtocolProviderService),,,,119,2,2,,"private JCheckBox rememberPassBox = new SIPCommCheckBox(Resources
        .getString(""service.gui.REMEMBER_PASSWORD""));",True,True,,False,
15,advancedOpPanel,advanced op panel ,Field,,,,,88,2,2,,"private JPanel advancedOpPanel
        = new TransparentPanel(new BorderLayout(10, 10));",True,True,,False,
16,labelsAdvOpPanel,labels adv op panel ,Field,,,,,93,2,2,,"private JPanel labelsAdvOpPanel
        = new TransparentPanel(new GridLayout(0, 1, 10, 10));",True,True,,False,
17,valuesAdvOpPanel,values adv op panel ,Field,,,,,93,2,2,,"private JPanel valuesAdvOpPanel
        = new TransparentPanel(new GridLayout(0, 1, 10, 10));",True,True,,False,
18,sendKeepAliveBox,send keep alive box ,Field,,,,,132,2,2,,"private JCheckBox sendKeepAliveBox = new SIPCommCheckBox(Resources
        .getString(""plugin.jabberaccregwizz.ENABLE_KEEP_ALIVE""));",True,True,,False,
19,gmailNotificationsBox,gmail notifications box ,Field,commitPage(),,,,150,2,2,,"private JCheckBox gmailNotificationsBox = new SIPCommCheckBox(Resources
            .getString(""plugin.jabberaccregwizz.ENABLE_GMAIL_NOTIFICATIONS""));",True,True,,False,
20,resourceLabel,resource label ,Field,,,,,107,2,2,,"private JLabel resourceLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.RESOURCE""));",True,True,,False,
21,resourceField,resource field ,Field,,,,,102,2,2,,"private JTextField resourceField
        = new JTextField(JabberAccountRegistration.DEFAULT_RESOURCE);",True,True,,False,
22,priorityLabel,priority label ,Field,,,,,108,2,2,,"private JLabel priorityLabel = new JLabel(
        Resources.getString(""plugin.jabberaccregwizz.PRIORITY""));",True,True,,False,
23,priorityField,priority field ,Field,,,,,102,2,2,,"private JTextField priorityField
        = new JTextField(JabberAccountRegistration.DEFAULT_PRIORITY);",True,True,,False,
24,serverLabel,server label ,Field,,,,,103,2,2,,"private JLabel serverLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.SERVER""));",True,True,,False,
25,serverField,server field ,Field,,,,,50,1,2,,private JTextField serverField = new JTextField();,True,True,,False,
26,portLabel,port label ,Field,,,,,99,2,2,,"private JLabel portLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.PORT""));",True,True,,False,
27,portField,port field ,Field,,,,,94,2,2,,"private JTextField portField
        = new JTextField(JabberAccountRegistration.DEFAULT_PORT);",True,True,,False,
28,registerPanel,register panel ,Field,,,,,74,1,2,,"private JPanel registerPanel = new TransparentPanel(new GridLayout(0, 1));",True,True,,False,
29,buttonPanel,button panel ,Field,,,,,93,2,2,,"private JPanel buttonPanel
        = new TransparentPanel(new FlowLayout(FlowLayout.CENTER));",True,True,,False,
30,registerArea,register area ,Field,,,,,130,2,2,,"private JTextArea registerArea = new JTextArea(Resources
        .getString(""plugin.jabberaccregwizz.REGISTER_NEW_ACCOUNT_TEXT""));",True,True,,False,
31,registerButton,register button ,Field,,,,,120,2,2,,"private JButton registerButton = new JButton(Resources
        .getString(""plugin.jabberaccregwizz.NEW_ACCOUNT_TITLE""));",True,True,,False,
32,mainPanel,main panel ,Field,init(),,,,50,1,2,,private JPanel mainPanel = new TransparentPanel();,False,True,,False,
33,nextPageIdentifier,next page identifier ,Field,,,,,71,1,2,,private Object nextPageIdentifier = WizardPage.SUMMARY_PAGE_IDENTIFIER;,False,False,,False,
34,wizard,wizard ,Field,FirstWizardPage(JabberAccountRegistrationWizard),,,,53,1,18,,private final JabberAccountRegistrationWizard wizard;,False,False,,False,
35,isCommitted,is committed ,Field,commitPage(),,,,36,1,2,,private boolean isCommitted = false;,False,False,,False,
36,isServerOverridden,is server overridden ,Field,loadAccount(ProtocolProviderService),,,,43,1,2,,private boolean isServerOverridden = false;,False,False,,False,
37,FirstWizardPage(JabberAccountRegistrationWizard),first wizard page wizard creates an instance of first wizard page param wizard the parent wizard ,Method,,,"java.awt.BorderLayout+BorderLayout() java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.BoxLayout+BoxLayout(Container,int) net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+init() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+init() javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.BoxLayout+BoxLayout(Container,int) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.BoxLayout+BoxLayout(Container,int)",net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel javax.swing.BoxLayout+Y_AXIS net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel javax.swing.BoxLayout+Y_AXIS net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel javax.swing.BoxLayout+Y_AXIS,620,23,1,"/** 
 * Creates an instance of <tt>FirstWizardPage</tt>.
 * @param wizard the parent wizard
 */
","/**
     * Creates an instance of <tt>FirstWizardPage</tt>.
     *
     * @param wizard the parent wizard
     */
    public FirstWizardPage(JabberAccountRegistrationWizard wizard)
    {
        super(new BorderLayout());

        this.wizard = wizard;

        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));

        this.init();

        this.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        this.labelsPanel
            .setLayout(new BoxLayout(labelsPanel, BoxLayout.Y_AXIS));

        this.valuesPanel
            .setLayout(new BoxLayout(valuesPanel, BoxLayout.Y_AXIS));
    }",False,False,"The function of this method is to create an instance of the FirstWizardPage class, set its layout, initialize its components, and set the border and layout for the labelsPanel and valuesPanel.",True,"The code defines a constructor for the class FirstWizardPage, which takes a JabberAccountRegistrationWizard object as a parameter. It initializes the mainPanel, sets a border, and sets the layouts for the labelsPanel and valuesPanel."
38,init(),init initializes all panels buttons etc ,Method,FirstWizardPage(JabberAccountRegistrationWizard),,"javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.JComponent+setForeground(Color) javax.swing.JComponent+setForeground(Color) javax.swing.JComponent+setFont(Font) javax.swing.JComponent+setFont(Font) java.awt.Font+deriveFont(int) java.awt.Component+getFont() java.awt.Component+getFont() java.awt.Font+deriveFont(int) javax.swing.JComponent+setMaximumSize(Dimension) javax.swing.JComponent+setMaximumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createTitledBorder(String) javax.swing.BorderFactory+createTitledBorder(String) net.java.sip.communicator.plugin.jabberaccregwizz.Resources+getString(String) net.java.sip.communicator.plugin.jabberaccregwizz.Resources+getString(String) java.awt.Container+add(Component) java.awt.Container+add(Component) javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() javax.swing.text.Document+addDocumentListener(DocumentListener) +() +changedUpdate(DocumentEvent)",net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel java.awt.Color+GRAY net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel java.awt.BorderLayout+WEST net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel java.awt.BorderLayout+CENTER net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox java.awt.BorderLayout+SOUTH net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField,4713,139,2,"/** 
 * Initializes all panels, buttons, etc.
 */
","/**
     * Initializes all panels, buttons, etc.
     */
    private void init()
    {
        this.mainPanel.setOpaque(false);
        this.labelsPanel.setOpaque(false);
        this.valuesPanel.setOpaque(false);
        this.emptyPanel.setOpaque(false);

        this.userIDField.getDocument().addDocumentListener(this);
        this.rememberPassBox.setSelected(true);

        this.userIDExampleLabel.setForeground(Color.GRAY);
        this.userIDExampleLabel.setFont(userIDExampleLabel.getFont()
            .deriveFont(8));
        this.emptyPanel.setMaximumSize(new Dimension(40, 35));
        this.userIDExampleLabel.setBorder(BorderFactory.createEmptyBorder(0, 0,
            8, 0));

        labelsPanel.add(userIDLabel);
        labelsPanel.add(emptyPanel);
        labelsPanel.add(passLabel);

        valuesPanel.add(userIDField);
        valuesPanel.add(userIDExampleLabel);
        valuesPanel.add(passField);

        userIDPassPanel.add(labelsPanel, BorderLayout.WEST);
        userIDPassPanel.add(valuesPanel, BorderLayout.CENTER);
        userIDPassPanel.add(rememberPassBox, BorderLayout.SOUTH);

        userIDPassPanel.setBorder(BorderFactory.createTitledBorder(Resources
            .getString(""plugin.jabberaccregwizz.USERNAME_AND_PASSWORD"")));

        mainPanel.add(userIDPassPanel);

        portField.getDocument().addDocumentListener(new DocumentListener()
        {
            public void changedUpdate(DocumentEvent evt)
            {
            }

            public void insertUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }

            public void removeUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }
        });

        priorityField.getDocument().addDocumentListener(new DocumentListener()
        {
            public void changedUpdate(DocumentEvent evt)
            {
            }

            public void insertUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }

            public void removeUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }
        });

        labelsAdvOpPanel.add(serverLabel);
        labelsAdvOpPanel.add(portLabel);
        labelsAdvOpPanel.add(resourceLabel);
        labelsAdvOpPanel.add(priorityLabel);

        valuesAdvOpPanel.add(serverField);
        valuesAdvOpPanel.add(portField);
        valuesAdvOpPanel.add(resourceField);
        valuesAdvOpPanel.add(priorityField);

        JPanel checkBoxesPanel
            = new TransparentPanel(new GridLayout(0, 1, 10, 10));
        checkBoxesPanel.add(sendKeepAliveBox);
        checkBoxesPanel.add(gmailNotificationsBox);

        advancedOpPanel.add(checkBoxesPanel, BorderLayout.NORTH);
        advancedOpPanel.add(labelsAdvOpPanel, BorderLayout.WEST);
        advancedOpPanel.add(valuesAdvOpPanel, BorderLayout.CENTER);

        advancedOpPanel.setBorder(BorderFactory.createTitledBorder(Resources
            .getString(""plugin.jabberaccregwizz.ADVANCED_OPTIONS"")));

        mainPanel.add(advancedOpPanel);

        registerButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                if (logger.isDebugEnabled())
                    logger.debug(""Reg OK"");

                // Open the new account dialog.

                jabberNewAccountDialog = new JabberNewAccountDialog();

                if (jabberNewAccountDialog.isOK == true)
                {
                    serverField.setText(jabberNewAccountDialog.server);
                    portField.setText(jabberNewAccountDialog.port);

                    // This userIDField contains the username ""@"" the server.
                    userIDField.setText(jabberNewAccountDialog.userID + ""@""
                        + jabberNewAccountDialog.server);

                    passField.setText(jabberNewAccountDialog.password);
                }
                if (logger.isDebugEnabled())
                    logger.debug(""Reg End"");
            }
        });

        buttonPanel.add(registerButton);

        registerArea.setEditable(false);
        registerArea.setOpaque(false);
        registerArea.setLineWrap(true);
        registerArea.setWrapStyleWord(true);

        registerPanel.add(registerArea);
        registerPanel.add(buttonPanel);

        registerPanel.setBorder(BorderFactory.createTitledBorder(Resources
            .getString(""plugin.jabberaccregwizz.NEW_ACCOUNT_TITLE"")));

        mainPanel.add(registerPanel);

        this.add(mainPanel, BorderLayout.NORTH);
    }",False,False,"The function of this method is to initialize all the panels, buttons, and other components of a graphical user interface. It also sets various properties and listeners for these components.",True,"The `init()` method initializes various panels, buttons, and fields for a user registration form. It sets up the layout and adds event listeners for document changes in certain fields. It also adds action listeners for the register button, which opens a new account dialog and populates the form fields with the entered information."
39,getIdentifier(),get identifier implements the wizard page get identifier to return this page identifier return the id of the first wizard page ,Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getFirstPageIdentifier() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getLastPageIdentifier(),,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+FIRST_PAGE_IDENTIFIER,249,10,1,"/** 
 * Implements the <code>WizardPage.getIdentifier</code> to return this page identifier.
 * @return the id of the first wizard page.
 */
","/**
     * Implements the <code>WizardPage.getIdentifier</code> to return this
     * page identifier.
     *
     * @return the id of the first wizard page.
     */
    public Object getIdentifier()
    {
        return FIRST_PAGE_IDENTIFIER;
    }",False,False,This method serves to implement the WizardPage.getIdentifier method and return the identifier of the first wizard page. It returns the value of the constant FIRST_PAGE_IDENTIFIER.,False,This code snippet is a method implementation for the `getIdentifier()` method in a class. It returns the identifier of the first wizard page. The method is expected to return an object representing the identifier.
40,getNextPageIdentifier(),get next page identifier implements the wizard page get next page identifier to return the next page identifier the summary page return the id of the next wizard page ,Method,,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+nextPageIdentifier,284,10,1,"/** 
 * Implements the <code>WizardPage.getNextPageIdentifier</code> to return the next page identifier - the summary page.
 * @return the id of the next wizard page.
 */
","/**
     * Implements the <code>WizardPage.getNextPageIdentifier</code> to return
     * the next page identifier - the summary page.
     *
     * @return the id of the next wizard page.
     */
    public Object getNextPageIdentifier()
    {
        return nextPageIdentifier;
    }",False,False,"This method serves to implement the getNextPageIdentifier function in a WizardPage class. It returns the identifier of the next page, which is the summary page, as an Object.",False,This code is a method implementation that returns the identifier of the next page in a wizard. It is used to determine the next page to be displayed after the current page. The returned identifier is typically used to navigate to the next page in the wizard flow.
41,getBackPageIdentifier(),get back page identifier implements the wizard page get back page identifier to return the back identifier in this case it s null because this is the first wizard page return the identifier of the previous wizard page ,Method,,,,,326,11,1,"/** 
 * Implements the <code>WizardPage.getBackPageIdentifier</code> to return the back identifier. In this case it's null because this is the first wizard page.
 * @return the identifier of the previous wizard page
 */
","/**
     * Implements the <code>WizardPage.getBackPageIdentifier</code> to return
     * the back identifier. In this case it's null because this is the first
     * wizard page.
     *
     * @return the identifier of the previous wizard page
     */
    public Object getBackPageIdentifier()
    {
        return null;
    }",False,False,"This method serves to implement the ""getBackPageIdentifier"" function for a wizard page. It returns null because this is the first wizard page.",False,"This code is a method implementation of the `getBackPageIdentifier` method in a class called `WizardPage`. It returns `null` as the identifier of the previous wizard page, indicating that this is the first page of the wizard."
42,getWizardForm(),get wizard form implements the wizard page get wizard form to return this panel return this wizard page ,Method,,,,,207,10,1,"/** 
 * Implements the <code>WizardPage.getWizardForm</code> to return this panel.
 * @return this wizard page.
 */
","/**
     * Implements the <code>WizardPage.getWizardForm</code> to return this
     * panel.
     *
     * @return this wizard page.
     */
    public Object getWizardForm()
    {
        return this;
    }",False,False,This method serves to return the current panel as the wizard form.,False,"The code defines a method called ""getWizardForm"" which returns the current panel. It is used to implement the ""WizardPage.getWizardForm"" method. The method returns an object representing the current wizard page."
43,pageShowing(),page showing before this page is displayed enables or disables the next wizard button according to whether the user id field is empty ,Method,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource(),,249,8,1,"/** 
 * Before this page is displayed enables or disables the ""Next"" wizard button according to whether the User ID field is empty.
 */
","/**
     * Before this page is displayed enables or disables the ""Next"" wizard
     * button according to whether the User ID field is empty.
     */
    public void pageShowing()
    {
        this.setNextButtonAccordingToUserIDAndResource();
    }",False,False,"The function of the method is to enable or disable the ""Next"" wizard button based on whether the User ID field is empty.",False,"The method ""pageShowing"" is called before a page is displayed and it enables or disables the ""Next"" wizard button based on whether the User ID field is empty. It calls another method called ""setNextButtonAccordingToUserIDAndResource"" to perform this functionality."
44,commitPage(),commit page saves the user input when the next wizard buttons is clicked ,Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+signin(),net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getRegistration() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getRegistration() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.String+length() java.lang.String+trim() java.lang.String+trim() java.lang.String+length() java.lang.IllegalStateException+IllegalStateException(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setUserID(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setUserID(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPassword(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPassword(String) java.lang.String+String(char[]) javax.swing.JPasswordField+getPassword() javax.swing.JPasswordField+getPassword() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setRememberPassword(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setRememberPassword(boolean) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setServerAddress(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setServerAddress(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setSendKeepAlive(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setSendKeepAlive(boolean) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setGmailNotificationEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setGmailNotificationEnabled(boolean) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setResource(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setResource(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPort(int) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPort(int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPriority(int) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPriority(int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText(),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+serverField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+sendKeepAliveBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+gmailNotificationsBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+gmailNotificationsBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+resourceField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+nextPageIdentifier net.java.sip.communicator.service.gui.WizardPage+SUMMARY_PAGE_IDENTIFIER net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isCommitted net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isCommitted,1214,33,1,"/** 
 * Saves the user input when the ""Next"" wizard buttons is clicked.
 */
","/**
     * Saves the user input when the ""Next"" wizard buttons is clicked.
     */
    public void commitPage()
    {
        JabberAccountRegistration registration = wizard.getRegistration();

        String userID = userIDField.getText();

        if(userID == null || userID.trim().length() == 0)
            throw new IllegalStateException(""No user ID provided."");

        registration.setUserID(userID);
        registration.setPassword(new String(passField.getPassword()));
        registration.setRememberPassword(rememberPassBox.isSelected());

        registration.setServerAddress(serverField.getText());
        registration.setSendKeepAlive(sendKeepAliveBox.isSelected());
        registration.setGmailNotificationEnabled(
                        this.gmailNotificationsBox.isSelected());
        registration.setResource(resourceField.getText());

        if (portField.getText() != null)
            registration.setPort(Integer.parseInt(portField.getText()));

        if (priorityField.getText() != null)
            registration.setPriority(
                Integer.parseInt(priorityField.getText()));

        nextPageIdentifier = SUMMARY_PAGE_IDENTIFIER;

        this.isCommitted = true;
    }",False,False,"The function of this method is to save the user input when the ""Next"" wizard button is clicked. It retrieves the user input from various fields and sets the corresponding values in the JabberAccountRegistration object. It also performs some validation checks on the user ID field. Finally, it sets the next page identifier and marks the page as committed.",False,"This code defines a method called ""commitPage"" that saves user input from a wizard form. It sets various properties of a JabberAccountRegistration object based on the user input, such as user ID, password, server address, and notification settings. Finally, it sets the next page identifier and marks the form as committed."
45,setNextButtonAccordingToUserIDAndResource(),set next button according to user id and resource enables or disables the next wizard button according to whether the user id field is empty ,Method,pageShowing() insertUpdate(DocumentEvent) removeUpdate(DocumentEvent),,javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.String+equals(Object) java.lang.String+equals(Object) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+resourceField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard,671,22,2,"/** 
 * Enables or disables the ""Next"" wizard button according to whether the UserID field is empty.
 */
","/**
     * Enables or disables the ""Next"" wizard button according to whether the
     * UserID field is empty.
     */
    private void setNextButtonAccordingToUserIDAndResource()
    {
        boolean nextFinishButtonEnabled = false;

        String userID = userIDField.getText();
        if ((userID != null) && !userID.equals(""""))
        {
            String resource = resourceField.getText();
            if ((resource != null) && !resource.equals(""""))
            {
                nextFinishButtonEnabled = true;
            }
        }

        wizard
            .getWizardContainer()
                .setNextFinishButtonEnabled(nextFinishButtonEnabled);
    }",False,False,"This method enables or disables the ""Next"" wizard button based on whether the UserID field and Resource field are empty or not.",True,"This code defines a method called ""setNextButtonAccordingToUserIDAndResource"" that enables or disables the ""Next"" button in a wizard based on whether the UserID and Resource fields are empty or not. It checks if both fields have non-empty values and sets the ""nextFinishButtonEnabled"" variable accordingly, and then updates the button's enabled state using the wizard container."
46,insertUpdate(DocumentEvent),insert update evt handles the document event triggered when user types in the user id field enables or disables the next wizard button according to whether the user id field is empty param evt the document event that has triggered this method call ,Method,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID(),,455,13,1,"/** 
 * Handles the <tt>DocumentEvent</tt> triggered when user types in the UserID field. Enables or disables the ""Next"" wizard button according to whether the UserID field is empty.
 * @param evt the document event that has triggered this method call.
 */
","/**
     * Handles the <tt>DocumentEvent</tt> triggered when user types in the
     * UserID field. Enables or disables the ""Next"" wizard button according to
     * whether the UserID field is empty.
     *
     * @param evt the document event that has triggered this method call.
     */
    public void insertUpdate(DocumentEvent evt)
    {
        this.setNextButtonAccordingToUserIDAndResource();

        this.setServerFieldAccordingToUserID();
    }",True,True,"The function of this method is to handle the DocumentEvent triggered when the user types in the UserID field. It enables or disables the ""Next"" wizard button based on whether the UserID field is empty. It also sets the server field according to the UserID.",True,"The method ""insertUpdate"" is triggered when the user types in the UserID field. It updates the state of the ""Next"" wizard button based on whether the UserID field is empty and also sets the server field according to the UserID."
47,removeUpdate(DocumentEvent),remove update evt handles the document event triggered when user deletes letters from the user id field enables or disables the next wizard button according to whether the user id field is empty param evt the document event that has triggered this method call ,Method,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID(),,469,13,1,"/** 
 * Handles the <tt>DocumentEvent</tt> triggered when user deletes letters from the User ID field. Enables or disables the ""Next"" wizard button according to whether the User ID field is empty.
 * @param evt the document event that has triggered this method call.
 */
","/**
     * Handles the <tt>DocumentEvent</tt> triggered when user deletes letters
     * from the User ID field. Enables or disables the ""Next"" wizard button
     * according to whether the User ID field is empty.
     *
     * @param evt the document event that has triggered this method call.
     */
    public void removeUpdate(DocumentEvent evt)
    {
        this.setNextButtonAccordingToUserIDAndResource();

        this.setServerFieldAccordingToUserID();
    }",True,True,"This method handles the DocumentEvent triggered when the user deletes letters from the User ID field. It enables or disables the ""Next"" wizard button based on whether the User ID field is empty. It also sets the server field according to the User ID.",True,"This code is a method called ""removeUpdate"" that handles a document event triggered when the user deletes letters from the User ID field. It updates the state of the ""Next"" wizard button based on whether the User ID field is empty and also updates the server field based on the User ID."
48,changedUpdate(DocumentEvent),changed update evt ,Method,,,,,56,3,1,,"public void changedUpdate(DocumentEvent evt)
    {
    }",True,True,This method serves as a placeholder for an action that should be performed when the content of a document is changed.,False,"The code contains a method named ""changedUpdate"" which takes a DocumentEvent object as a parameter. However, the method does not have any implementation or functionality specified within its body."
49,pageHiding(),page hiding ,Method,,,,,36,3,1,,"public void pageHiding()
    {
    }",False,False,"The function of the method ""pageHiding"" is not clear from the given code.",False,"The code contains a method named ""pageHiding"" with no parameters and no return type. However, without any code inside the method, it is difficult to determine its purpose or functionality."
50,pageShown(),page shown ,Method,,,,,35,3,1,,"public void pageShown()
    {
    }",False,False,"The function of the method ""pageShown"" is not clear from the given code. It appears to be an empty method with no specific functionality.",False,"The code contains a method named ""pageShown"" which does not have any parameters or return type. The purpose or functionality of this method is not specified and would need further information to provide a more detailed summary."
51,pageBack(),page back ,Method,,,,,34,3,1,,"public void pageBack()
    {
    }",False,False,"The function of the method ""pageBack"" is not clear from the given code.",False,"The code contains a method named ""pageBack"" which does not have any implementation or functionality specified. It is an empty method that does not perform any actions or return any values."
52,loadAccount(ProtocolProviderService),load account protocol provider fills the user id and password fields in this panel with the data coming from the given protocol provider param protocol provider the protocol provider service to loadthe data from ,Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+loadAccount(ProtocolProviderService),"net.java.sip.communicator.service.protocol.ProtocolProviderService+getAccountID() net.java.sip.communicator.service.protocol.ProtocolProviderService+getAccountID() net.java.sip.communicator.service.protocol.AccountID+getAccountProperties() net.java.sip.communicator.service.protocol.AccountID+getAccountProperties() java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.service.protocol.AccountID+getUserID() net.java.sip.communicator.service.protocol.AccountID+getUserID() javax.swing.JPasswordField+setText(String) javax.swing.JPasswordField+setText(String) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.lang.Boolean+parseBoolean(String) java.lang.Boolean+parseBoolean(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) java.lang.Boolean+parseBoolean(String) java.lang.Boolean+parseBoolean(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.service.protocol.AccountID+getAccountPropertyBoolean(Object,boolean) net.java.sip.communicator.service.protocol.AccountID+getAccountPropertyBoolean(Object,boolean)",net.java.sip.communicator.service.protocol.ProtocolProviderFactory+PASSWORD net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.service.protocol.ProtocolProviderFactory+SERVER_ADDRESS net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+serverField net.java.sip.communicator.service.protocol.ProtocolProviderFactory+SERVER_PORT net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+sendKeepAliveBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+gmailNotificationsBox net.java.sip.communicator.service.protocol.ProtocolProviderFactory+RESOURCE net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+resourceField net.java.sip.communicator.service.protocol.ProtocolProviderFactory+RESOURCE_PRIORITY net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isServerOverridden net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isServerOverridden net.java.sip.communicator.service.protocol.ProtocolProviderFactory+IS_SERVER_OVERRIDDEN,1967,61,1,"/** 
 * Fills the User ID and Password fields in this panel with the data coming from the given protocolProvider.
 * @param protocolProvider The <tt>ProtocolProviderService</tt> to loadthe data from.
 */
","/**
     * Fills the User ID and Password fields in this panel with the data coming
     * from the given protocolProvider.
     *
     * @param protocolProvider The <tt>ProtocolProviderService</tt> to load
     *            the data from.
     */
    public void loadAccount(ProtocolProviderService protocolProvider)
    {
        AccountID accountID = protocolProvider.getAccountID();
        Map<String, String> accountProperties
            = accountID.getAccountProperties();

        String password
            = accountProperties.get(ProtocolProviderFactory.PASSWORD);

        this.userIDField.setEnabled(false);
        this.userIDField.setText(accountID.getUserID());

        if (password != null)
        {
            this.passField.setText(password);
            this.rememberPassBox.setSelected(true);
        }

        String serverAddress
            = accountProperties.get(ProtocolProviderFactory.SERVER_ADDRESS);

        serverField.setText(serverAddress);

        String serverPort
            = accountProperties.get(ProtocolProviderFactory.SERVER_PORT);

        portField.setText(serverPort);

        boolean keepAlive
            = Boolean.parseBoolean(accountProperties.get(""SEND_KEEP_ALIVE""));

        sendKeepAliveBox.setSelected(keepAlive);

        boolean gmailNotificationEnabled
            = Boolean.parseBoolean(
                    accountProperties.get(""GMAIL_NOTIFICATIONS_ENABLED""));

        gmailNotificationsBox.setSelected(gmailNotificationEnabled);

        String resource
            = accountProperties.get(ProtocolProviderFactory.RESOURCE);

        resourceField.setText(resource);

        String priority
            = accountProperties.get(ProtocolProviderFactory.RESOURCE_PRIORITY);

        priorityField.setText(priority);

        this.isServerOverridden
            = accountID.getAccountPropertyBoolean(
                    ProtocolProviderFactory.IS_SERVER_OVERRIDDEN,
                    false);
    }",False,False,"The function of this method is to load the account data from a given protocol provider and fill the User ID, Password, server address, server port, keep alive, Gmail notifications, resource, priority, and server override fields in this panel.",True,"The `loadAccount` method fills the User ID, Password, server address, server port, keep alive, Gmail notification, resource, priority, and server override fields in a panel with data from a given `ProtocolProviderService`. It also sets the enabled state and text of the User ID field, and selects the remember password checkbox if a password is provided."
53,setServerFieldAccordingToUserID(),set server field according to user id parse the server part from the jabber id and set it to server as default value if advanced option is enabled do nothing ,Method,insertUpdate(DocumentEvent) removeUpdate(DocumentEvent),,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+isModification() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+isModification() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getServerFromUserName(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getServerFromUserName(String),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isServerOverridden net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+serverField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard,414,13,2,"/** 
 * Parse the server part from the jabber id and set it to server as default value. If Advanced option is enabled Do nothing.
 */
","/**
     * Parse the server part from the jabber id and set it to server as default
     * value. If Advanced option is enabled Do nothing.
     */
    private void setServerFieldAccordingToUserID()
    {
        if (!wizard.isModification() || !isServerOverridden)
        {
            String userId = userIDField.getText();

            serverField.setText(wizard.getServerFromUserName(userId));
        }
    }",False,False,This method sets the server field to the default value by parsing the server part from the jabber id. It only does this if the Advanced option is not enabled and if the wizard is not in modification mode or the server is not overridden.,True,This method is used to parse the server part from a Jabber ID and set it as the default value for the server field. It only executes if the wizard is not in modification mode and the server is not overridden.
54,setNextButtonAccordingToPortAndPriority(),set next button according to port and priority disables next button if port field value is incorrect ,Method,,,java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard,491,16,2,"/** 
 * Disables Next Button if Port field value is incorrect
 */
","/**
     * Disables Next Button if Port field value is incorrect
     */
    private void setNextButtonAccordingToPortAndPriority()
    {
        try
        {
            Integer.parseInt(portField.getText());
            Integer.parseInt(priorityField.getText());
            wizard.getWizardContainer().setNextFinishButtonEnabled(true);
        }
        catch (NumberFormatException ex)
        {
            wizard.getWizardContainer().setNextFinishButtonEnabled(false);
        }
    }",True,True,"This method disables the Next Button if the Port field value or the Priority field value is incorrect. It checks if the values can be parsed as integers, and enables or disables the Next Button accordingly.",True,"This code is a method that checks if the values entered in the ""Port"" and ""Priority"" fields are valid integers. If they are, it enables the ""Next"" button in a wizard container, otherwise it disables it."
55,getSimpleForm(),get simple form ,Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getSimpleForm(),,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel,73,4,1,,"public Object getSimpleForm()
    {
        return userIDPassPanel;
    }",False,False,"The function of the method is to return the object ""userIDPassPanel"" as an Object type.",False,"The code contains a method named ""getSimpleForm"" that returns an object called ""userIDPassPanel"". This method is responsible for retrieving and providing the simple form associated with the user ID and password panel."
56,isCommitted(),is committed ,Method,,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isCommitted,68,4,1,,"public boolean isCommitted()
    {
        return isCommitted;
    }",False,False,This method returns a boolean value indicating whether a certain action or transaction has been committed or not.,False,"The code contains a method named ""isCommitted"" which returns a boolean value. It checks whether a certain action or transaction has been committed or not."
