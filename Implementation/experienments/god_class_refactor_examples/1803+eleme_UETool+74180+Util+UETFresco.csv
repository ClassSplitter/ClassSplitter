index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,getStatusBarHeight(),get status bar height ,Method,,,,,259,5,9,,"public static int getStatusBarHeight() {
    Resources resources = UETool.getApplication().getResources();
    int resId = resources.getIdentifier(""status_bar_height"", ""dimen"", ""android"");
    return resId > 0 ? resources.getDimensionPixelSize(resId) : 0;
  }",False,False,"This method returns the height of the status bar in pixels. It uses the resources of the application to get the identifier for the status bar height and then returns the dimension pixel size if the identifier is greater than 0, otherwise it returns 0.",True,"This code defines a method named ""getStatusBarHeight"" that retrieves the height of the status bar in pixels. It uses the ""Resources"" class to access the system's resources and the ""getIdentifier"" method to obtain the resource ID for the status bar height. The method returns the height if it is greater than 0, otherwise it returns 0."
2,enableFullscreen(Window),enable fullscreen window ,Method,,me.ele.uetool.TransparentActivity+onCreate(Bundle),"me.ele.uetool.Util+addSystemUiFlag(Window,int) me.ele.uetool.Util+addSystemUiFlag(Window,int)",,147,5,9,,"public static void enableFullscreen(@NonNull Window window) {
    if (Build.VERSION.SDK_INT >= 21) {
      addSystemUiFlag(window, 1280);
    }
  }",False,False,This method enables fullscreen mode for the given window if the device's SDK version is 21 or higher.,True,"The code defines a method called ""enableFullscreen"" that takes a Window object as a parameter. If the device's SDK version is 21 or higher, the method adds a system UI flag to the window to enable fullscreen mode."
3,"addSystemUiFlag(Window,int)",add system ui flag window flag ,Method,enableFullscreen(Window),,,,206,6,10,,"private static void addSystemUiFlag(Window window, int flag) {
    View view = window.getDecorView();
    if (view != null) {
      view.setSystemUiVisibility(view.getSystemUiVisibility() | flag);
    }
  }",False,False,"This method adds a system UI flag to the window's decor view, which affects the appearance and behavior of the system UI elements in the app.",True,"The given code defines a private static method called ""addSystemUiFlag"" that takes a Window object and an integer flag as parameters. It retrieves the DecorView from the Window and sets the system UI visibility by combining the existing visibility with the provided flag."
4,"setStatusBarColor(Window,int)",set status bar color window color ,Method,,me.ele.uetool.TransparentActivity+onCreate(Bundle),,,161,5,9,,"public static void setStatusBarColor(@NonNull Window window, int color) {
    if (Build.VERSION.SDK_INT >= 21) {
      window.setStatusBarColor(color);
    }
  }",False,False,"This method sets the color of the status bar in the Android system. It takes a Window object and a color as parameters, and if the Android version is 21 or higher, it sets the status bar color to the specified color.",True,"The code defines a method named ""setStatusBarColor"" that takes a Window object and a color as parameters. It sets the status bar color of the window if the device's SDK version is 21 or higher."
5,px2dip(float),px2dip px value ,Method,getDraweeViewCornerRadius(DraweeView),"me.ele.uetool.Element+getAttrs() me.ele.uetool.Element+getAttrs() me.ele.uetool.Element+getAttrs() me.ele.uetool.Element+getAttrs() me.ele.uetool.Element+getAttrs() me.ele.uetool.Element+getAttrs() me.ele.uetool.function.CollectViewsLayout+drawLineWithText(Canvas,int,int,int,int) me.ele.uetool.function.CollectViewsLayout+drawLineWithText(Canvas,int,int,int,int)",,,174,4,9,,"public static int px2dip(float pxValue) {
    float scale = UETool.getApplication().getResources().getDisplayMetrics().density;
    return (int) (pxValue / scale + 0.5F);
  }",False,False,This method converts a given value in pixels (px) to density-independent pixels (dip) by dividing it by the device's display density scale and adding a small offset.,True,"The given code defines a method named ""px2dip"" that converts a given pixel value to density-independent pixels (dip). It retrieves the display density from the application's resources and uses it to calculate the dip value. The result is then returned as an integer."
6,dip2px(float),dip2px dp value ,Method,,"me.ele.uetool.function.RelativePositionLayout+getLineEndPointSpace() me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.function.ViewAttrDialog+EditTextViewHolder.onTextChanged(CharSequence,int,int,int) me.ele.uetool.suspend.UETSubMenu+UETSubMenu(Context,AttributeSet,int) me.ele.uetool.suspend.UETSubMenu+UETSubMenu(Context,AttributeSet,int)",,,174,4,9,,"public static int dip2px(float dpValue) {
    float scale = UETool.getApplication().getResources().getDisplayMetrics().density;
    return (int) (dpValue * scale + 0.5F);
  }",False,False,This method converts a value in dp (density-independent pixels) to pixels by multiplying it with the device's density scale factor and adding a small offset. It returns the result as an integer.,True,"The given code is a method named ""dip2px"" that converts a value in dp (density-independent pixels) to pixels. It retrieves the display density from the application's resources and uses it to calculate the equivalent pixel value, which is then returned as an integer."
7,sp2px(float),sp2px sp ,Method,,,,,158,4,9,,"public static int sp2px(float sp) {
    return (int) TypedValue.applyDimension(2, sp,
        UETool.getApplication().getResources().getDisplayMetrics());
  }",False,False,This method converts a value in sp (scaled pixels) to pixels by using the display metrics of the application's resources.,True,"The given code is a method named ""sp2px"" that converts a value in scaled pixels (sp) to pixels (px). It uses the TypedValue class to apply the conversion using the display metrics of the application. The method returns the converted value as an integer."
8,px2sp(float),px2sp px value ,Method,,me.ele.uetool.Element+getAttrs(),,,201,5,9,,"public static int px2sp(float pxValue) {
    final float fontScale =
        UETool.getApplication().getResources().getDisplayMetrics().scaledDensity;
    return (int) (pxValue / fontScale + 0.5f);
  }",False,False,This method converts a given pixel value to a scaled pixel value (sp) based on the device's font scale.,True,"The given code defines a method named ""px2sp"" that converts a given pixel value to scaled pixels (sp) based on the device's font scale. It retrieves the font scale from the application's resources and returns the converted value as an integer."
9,getScreenWidth(),get screen width ,Method,,,,,123,3,9,,"public static int getScreenWidth() {
    return UETool.getApplication().getResources().getDisplayMetrics().widthPixels;
  }",False,False,This method returns the width of the screen in pixels.,True,"The given code defines a static method named ""getScreenWidth"" that returns the width of the screen in pixels. It achieves this by accessing the display metrics of the application's resources using the UETool library."
10,getScreenHeight(),get screen height ,Method,,me.ele.uetool.function.ViewAttrDialog+show(Element),,,125,3,9,,"public static int getScreenHeight() {
    return UETool.getApplication().getResources().getDisplayMetrics().heightPixels;
  }",False,False,This method returns the height of the screen in pixels.,True,"The given code defines a static method named ""getScreenHeight"" that returns the height of the device screen in pixels. It achieves this by accessing the display metrics of the application's resources using the UETool library."
11,"getResourceName(Resources,int)",get resource name resources id ,Method,,me.ele.uetool.Element+getAttrs(),java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace(),,286,12,9,,"public static String getResourceName(Resources resources, int id) {
    try {
      if (id == NO_ID || id == 0) {
        return """";
      } else {
        return resources.getResourceEntryName(id);
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    return """";
  }",False,False,"This method returns the name of a resource based on its ID. If the ID is invalid or not found, it returns an empty string.",True,"The code defines a method named ""getResourceName"" that takes a Resources object and an integer ID as parameters. It returns the name of the resource associated with the given ID, or an empty string if the ID is invalid or an exception occurs."
12,getResId(View),get res id view ,Method,,me.ele.uetool.Element+getAttrs(),java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace(),,254,13,9,,"public static String getResId(View view) {
    try {
      int id = view.getId();
      if (id == NO_ID) {
        return """";
      } else {
        return ""0x"" + id;
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    return """";
  }",False,False,"This method returns the resource ID of a given view as a string. If the view has no ID, it returns an empty string.",True,"The given code is a method named ""getResId"" that takes a View object as input and returns a string representation of its resource ID. If the View has no ID, an empty string is returned. The method also handles any exceptions that may occur and prints the stack trace."
13,intToHexColor(int),int to hex color color ,Method,getBackground(View) getBackground(View),me.ele.uetool.Element+getAttrs(),java.lang.String+toUpperCase() java.lang.Integer+toHexString(int) java.lang.Integer+toHexString(int) java.lang.String+toUpperCase(),,110,3,9,,"public static String intToHexColor(int color) {
    return ""#"" + Integer.toHexString(color).toUpperCase();
  }",False,False,"This method converts an integer color value to a hexadecimal color code and returns it as a string, with a ""#"" prefix and in uppercase.",True,"The code defines a method named ""intToHexColor"" that takes an integer value representing a color and converts it into a hexadecimal color code. The method returns the color code as a string, prefixed with a ""#"" symbol and in uppercase."
14,getBackground(View),get background view ,Method,,me.ele.uetool.Element+getAttrs(),me.ele.uetool.Util+intToHexColor(int) me.ele.uetool.Util+intToHexColor(int) java.lang.Class+getDeclaredField(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Class+getDeclaredField(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.StringBuilder+StringBuilder() java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) me.ele.uetool.Util+intToHexColor(int) me.ele.uetool.Util+intToHexColor(int) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) java.lang.StringBuilder+toString() java.lang.StringBuilder+toString() java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace() me.ele.uetool.Util+getDrawableBitmap(Drawable) me.ele.uetool.Util+getDrawableBitmap(Drawable),,1273,33,9,,"public static Object getBackground(View view) {
    Drawable drawable = view.getBackground();
    if (drawable instanceof ColorDrawable) {
      return intToHexColor(((ColorDrawable) drawable).getColor());
    } else if (drawable instanceof GradientDrawable) {
      try {
        Field mFillPaintField = GradientDrawable.class.getDeclaredField(""mFillPaint"");
        mFillPaintField.setAccessible(true);
        Paint mFillPaint = (Paint) mFillPaintField.get(drawable);
        Shader shader = mFillPaint.getShader();
        if (shader instanceof LinearGradient) {
          Field mColorsField = LinearGradient.class.getDeclaredField(""mColors"");
          mColorsField.setAccessible(true);
          int[] mColors = (int[]) mColorsField.get(shader);
          StringBuilder sb = new StringBuilder();
          for (int i = 0, N = mColors.length; i < N; i++) {
            sb.append(intToHexColor(mColors[i]));
            if (i < N - 1) {
              sb.append("" -> "");
            }
          }
          return sb.toString();
        }
      } catch (NoSuchFieldException e) {
        e.printStackTrace();
      } catch (IllegalAccessException e) {
        e.printStackTrace();
      }
    } else {
      return getDrawableBitmap(drawable);
    }
    return null;
  }",False,False,"The function of this method is to retrieve the background color or gradient of a given view and return it as a hexadecimal color value or a string representation of the gradient colors. If the background is not a color or gradient, it returns the bitmap representation of the background.",True,"This code defines a method called ""getBackground"" that takes a View as input and returns the background color or gradient of the view. It checks the type of the background drawable and retrieves the color or gradient information accordingly."
15,getImageURI(DraweeView),get image uri drawee view ,Method,,me.ele.uetool.Element+getAttrs(),me.ele.uetool.Util+getFrescoControllerBuilder(DraweeView) me.ele.uetool.Util+getFrescoControllerBuilder(DraweeView),,261,7,9,,"public static String getImageURI(DraweeView draweeView) {
    PipelineDraweeControllerBuilder builder = getFrescoControllerBuilder(draweeView);
    if (builder != null) {
      return builder.getImageRequest().getSourceUri().toString();
    }
    return """";
  }",True,True,"This method returns the URI of the image being displayed in a DraweeView using Fresco library. If a valid controller builder is available, it retrieves the image request's source URI and returns it as a string. Otherwise, it returns an empty string.",True,"The given code defines a method named `getImageURI` that takes a `DraweeView` object as input. It retrieves the image URI from the `DraweeView` using Fresco library and returns it as a string. If the `DraweeView` does not have a valid URI, an empty string is returned."
16,isSupportAnimation(DraweeView),is support animation drawee view ,Method,,me.ele.uetool.Element+getAttrs(),me.ele.uetool.Util+getFrescoControllerBuilder(DraweeView) me.ele.uetool.Util+getFrescoControllerBuilder(DraweeView) java.lang.String+valueOf(char[]) java.lang.String+valueOf(char[]),,278,7,9,,"public static String isSupportAnimation(DraweeView draweeView) {
    PipelineDraweeControllerBuilder builder = getFrescoControllerBuilder(draweeView);
    if (builder != null) {
      return String.valueOf(builder.getAutoPlayAnimations()).toUpperCase();
    }
    return """";
  }",True,True,"This method checks if the given DraweeView supports animation by getting the PipelineDraweeControllerBuilder and checking if it is not null. If it is not null, it returns the value of the autoPlayAnimations property in uppercase. Otherwise, it returns an empty string.",True,"The code is a method named ""isSupportAnimation"" that takes a DraweeView as a parameter. It checks if the DraweeView has a valid PipelineDraweeControllerBuilder and returns a string representation of whether the builder supports auto-playing animations or not. If the builder is not valid, it returns an empty string."
17,getPlaceHolderBitmap(DraweeView),get place holder bitmap drawee view ,Method,,me.ele.uetool.Element+getAttrs(),java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) me.ele.uetool.Util+getDrawableBitmap(Drawable) me.ele.uetool.Util+getDrawableBitmap(Drawable) java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace(),,851,19,9,,"public static Bitmap getPlaceHolderBitmap(DraweeView draweeView) {
    GenericDraweeHierarchy hierarchy = (GenericDraweeHierarchy) draweeView.getHierarchy();
    if (hierarchy.hasPlaceholderImage()) {
      try {
        Field mFadeDrawableField = hierarchy.getClass().getDeclaredField(""mFadeDrawable"");
        mFadeDrawableField.setAccessible(true);
        FadeDrawable fadeDrawable = (FadeDrawable) mFadeDrawableField.get(hierarchy);
        Field mLayersField = fadeDrawable.getClass().getDeclaredField(""mLayers"");
        mLayersField.setAccessible(true);
        Drawable[] layers = (Drawable[]) mLayersField.get(fadeDrawable);
        // PLACEHOLDER_IMAGE_INDEX == 1
        Drawable drawable = layers[1];
        return getDrawableBitmap(drawable);
      } catch (Exception e) {
        e.printStackTrace();
      }
    }
    return null;
  }",True,True,"This method retrieves the placeholder image from a DraweeView and returns it as a Bitmap. It does this by accessing the hierarchy of the DraweeView, retrieving the layers of the fade drawable, and returning the bitmap of the placeholder image.",True,"This code is a method that retrieves the placeholder image from a DraweeView object. It does this by accessing the hierarchy of the DraweeView, retrieving the fade drawable, and then extracting the placeholder image from the layers of the fade drawable."
18,getDraweeViewCornerRadius(DraweeView),get drawee view corner radius drawee view ,Method,,me.ele.uetool.Element+getAttrs(),me.ele.uetool.Util+px2dip(float) me.ele.uetool.Util+px2dip(float),,557,16,9,,"public static String getDraweeViewCornerRadius(DraweeView draweeView) {
    if (draweeView instanceof SimpleDraweeView) {
      RoundingParams params = ((SimpleDraweeView) draweeView).getHierarchy().getRoundingParams();
      if (params != null) {
        float[] cornersRadii = params.getCornersRadii();
        float firstRadii = cornersRadii[0];
        for (int i = 1; i < 8; i++) {
          if (firstRadii != cornersRadii[i]) {
            return null;
          }
        }
        return px2dip(firstRadii) + ""dp"";
      }
    }
    return null;
  }",True,True,"This method returns the corner radius of a DraweeView in dp units. It checks if the DraweeView is an instance of SimpleDraweeView, gets the RoundingParams, and checks if all corner radii are the same. If so, it converts the radius to dp and returns it as a String. Otherwise, it returns null.",True,"This code is a method named ""getDraweeViewCornerRadius"" that takes a DraweeView as input and returns the corner radius of the view if it is a SimpleDraweeView with equal corner radii on all sides, converted to dp. If the view is not a SimpleDraweeView or the corner radii are not equal, it returns null."
19,getFrescoControllerBuilder(DraweeView),get fresco controller builder drawee view ,Method,getImageURI(DraweeView) isSupportAnimation(DraweeView),,java.lang.Class+getDeclaredField(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Class+getDeclaredField(String) java.lang.Class+forName(String) java.lang.Class+forName(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace(),,879,19,10,,"private static PipelineDraweeControllerBuilder getFrescoControllerBuilder(DraweeView draweeView) {
    try {
      PipelineDraweeController controller = (PipelineDraweeController) draweeView.getController();
      Field mDataSourceSupplierFiled =
          PipelineDraweeController.class.getDeclaredField(""mDataSourceSupplier"");
      mDataSourceSupplierFiled.setAccessible(true);
      Supplier supplier = (Supplier) mDataSourceSupplierFiled.get(controller);
      Field mAutoField =
          Class.forName(""com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2"")
              .getDeclaredField(""this$0"");
      mAutoField.setAccessible(true);
      PipelineDraweeControllerBuilder builder =
          (PipelineDraweeControllerBuilder) mAutoField.get(supplier);
      return builder;
    } catch (Exception e) {
      e.printStackTrace();
    }
    return null;
  }",True,True,"This method returns a PipelineDraweeControllerBuilder object by accessing private fields and using reflection on the given DraweeView object. If any exception occurs, it returns null.",False,"This code retrieves the `PipelineDraweeControllerBuilder` object from a given `DraweeView` by using reflection to access private fields and methods. It returns the builder object if successful, otherwise it returns null."
20,getTextViewBitmap(TextView),get text view bitmap text view ,Method,,me.ele.uetool.Element+getAttrs(),me.ele.uetool.Util+getTextViewDrawableBitmap(TextView) me.ele.uetool.Util+getTextViewDrawableBitmap(TextView) me.ele.uetool.Util+getTextViewImageSpanBitmap(TextView) me.ele.uetool.Util+getTextViewImageSpanBitmap(TextView),,278,6,9,,"public static List<Pair<String, Bitmap>> getTextViewBitmap(TextView textView) {
    List<Pair<String, Bitmap>> bitmaps = new ArrayList<>();
    bitmaps.addAll(getTextViewDrawableBitmap(textView));
    bitmaps.addAll(getTextViewImageSpanBitmap(textView));
    return bitmaps;
  }",False,False,"This method returns a list of pairs, where each pair consists of a string and a bitmap. It takes a TextView as input and retrieves the bitmaps associated with the drawables and image spans in the TextView.",True,"The given code is a method named ""getTextViewBitmap"" that takes a TextView as input and returns a list of pairs, where each pair consists of a string and a bitmap. The method combines the results of two other methods, ""getTextViewDrawableBitmap"" and ""getTextViewImageSpanBitmap"", to generate the list of pairs."
21,getTextViewDrawableBitmap(TextView),get text view drawable bitmap text view ,Method,getTextViewBitmap(TextView),,java.lang.Class+getDeclaredField(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.Class+getDeclaredField(String) java.lang.Class+forName(String) java.lang.Class+forName(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.Object+Object() me.ele.uetool.Util+getDrawableBitmap(Drawable) me.ele.uetool.Util+getDrawableBitmap(Drawable) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Class+getDeclaredField(String) java.lang.Class+forName(String) java.lang.Class+forName(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.Object+Object() me.ele.uetool.Util+getDrawableBitmap(Drawable) me.ele.uetool.Util+getDrawableBitmap(Drawable) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace(),,1092,22,10,,"private static List<Pair<String, Bitmap>> getTextViewDrawableBitmap(TextView textView) {
    List<Pair<String, Bitmap>> bitmaps = new ArrayList<>();
    try {
      Field mDrawablesField = TextView.class.getDeclaredField(""mDrawables"");
      mDrawablesField.setAccessible(true);
      Field mDrawableLeftInitialFiled = Class.forName(""android.widget.TextView$Drawables"")
          .getDeclaredField(""mDrawableLeftInitial"");
      mDrawableLeftInitialFiled.setAccessible(true);
      bitmaps.add(
          new Pair<>(""DrawableLeft"", getDrawableBitmap((Drawable) mDrawableLeftInitialFiled.get(
              mDrawablesField.get(textView)))));
      Field mDrawableRightInitialFiled = Class.forName(""android.widget.TextView$Drawables"")
          .getDeclaredField(""mDrawableRightInitial"");
      mDrawableRightInitialFiled.setAccessible(true);
      bitmaps.add(
          new Pair<>(""DrawableRight"", getDrawableBitmap((Drawable) mDrawableRightInitialFiled.get(
              mDrawablesField.get(textView)))));
    } catch (Exception e) {
      e.printStackTrace();
    }
    return bitmaps;
  }",False,False,"This method retrieves the initial left and right drawables of a given TextView and returns them as a list of pairs, where each pair consists of a string indicating the drawable position (""DrawableLeft"" or ""DrawableRight"") and the corresponding bitmap.",True,The code is a private static method that takes a TextView as input and returns a list of pairs containing the name of the drawable (DrawableLeft or DrawableRight) and its corresponding Bitmap image. It uses reflection to access the private fields of the TextView class and retrieve the initial drawables.
22,getTextViewImageSpanBitmap(TextView),get text view image span bitmap text view ,Method,getTextViewBitmap(TextView),,java.lang.Class+getDeclaredField(String) java.lang.Class+forName(String) java.lang.Class+forName(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Object+Object() me.ele.uetool.Util+getDrawableBitmap(Drawable) me.ele.uetool.Util+getDrawableBitmap(Drawable) java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace(),,785,21,10,,"private static List<Pair<String, Bitmap>> getTextViewImageSpanBitmap(TextView textView) {
    List<Pair<String, Bitmap>> bitmaps = new ArrayList<>();
    try {
      CharSequence text = textView.getText();
      if (text instanceof SpannedString) {
        Field mSpansField =
            Class.forName(""android.text.SpannableStringInternal"").getDeclaredField(""mSpans"");
        mSpansField.setAccessible(true);
        Object[] spans = (Object[]) mSpansField.get(text);
        for (Object span : spans) {
          if (span instanceof ImageSpan) {
            bitmaps.add(
                new Pair<>(""SpanBitmap"", getDrawableBitmap(((ImageSpan) span).getDrawable())));
          }
        }
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    return bitmaps;
  }",False,False,"This method retrieves a list of pairs, where each pair consists of a string ""SpanBitmap"" and a bitmap image. It does this by iterating through the spans in a given TextView and adding any ImageSpans found to the list, along with their corresponding bitmaps.",True,This code is a private static method that takes a TextView as input and returns a list of pairs containing a string identifier and a bitmap image. It retrieves the image spans from the text of the TextView and converts them into bitmaps using the getDrawableBitmap() method.
23,getImageViewBitmap(ImageView),get image view bitmap image view ,Method,,me.ele.uetool.Element+getAttrs(),me.ele.uetool.Util+getDrawableBitmap(Drawable) me.ele.uetool.Util+getDrawableBitmap(Drawable),,121,3,9,,"public static Bitmap getImageViewBitmap(ImageView imageView) {
    return getDrawableBitmap(imageView.getDrawable());
  }",False,False,The function of the given method is to retrieve the bitmap from the drawable of an ImageView and return it as a Bitmap object.,True,"The code defines a method named ""getImageViewBitmap"" that takes an ImageView as input and returns a Bitmap. It internally calls another method named ""getDrawableBitmap"" to convert the ImageView's drawable into a Bitmap and returns it."
24,getDrawableBitmap(Drawable),get drawable bitmap drawable ,Method,getBackground(View) getPlaceHolderBitmap(DraweeView) getImageViewBitmap(ImageView),,java.lang.Class+getDeclaredField(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Class+getDeclaredField(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.Class+getDeclaredField(String) java.lang.Class+forName(String) java.lang.Class+forName(String) java.lang.Class+getDeclaredField(String) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+setAccessible(boolean) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.reflect.Field+get(Object) java.lang.Throwable+printStackTrace() java.lang.Throwable+printStackTrace(),,1645,33,10,,"private static Bitmap getDrawableBitmap(Drawable drawable) {
    try {
      if (drawable instanceof BitmapDrawable) {
        return ((BitmapDrawable) drawable).getBitmap();
      } else if (drawable instanceof NinePatchDrawable) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
          Field mNinePatchFiled = NinePatchDrawable.class.getDeclaredField(""mNinePatch"");
          mNinePatchFiled.setAccessible(true);
          NinePatch ninePatch = (NinePatch) mNinePatchFiled.get(drawable);
          return ninePatch.getBitmap();
        }
      } else if (drawable instanceof ClipDrawable) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
          return ((BitmapDrawable) ((ClipDrawable) drawable).getDrawable()).getBitmap();
        }
      } else if (drawable instanceof StateListDrawable) {
        return ((BitmapDrawable) drawable.getCurrent()).getBitmap();
      } else if (drawable instanceof ScaleTypeDrawable) {
        return ((BitmapDrawable) drawable.getCurrent()).getBitmap();
      } else if (drawable instanceof VectorDrawableCompat) {
        Field mVectorStateField = VectorDrawableCompat.class.getDeclaredField(""mVectorState"");
        mVectorStateField.setAccessible(true);
        Field mCachedBitmapField = Class.forName(
            ""android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState"")
            .getDeclaredField(""mCachedBitmap"");
        mCachedBitmapField.setAccessible(true);
        return (Bitmap) mCachedBitmapField.get(mVectorStateField.get(drawable));
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    return null;
  }",False,False,"The function of the method is to convert a Drawable object into a Bitmap object. It checks the type of the Drawable and retrieves the corresponding Bitmap if possible. If the conversion fails or an exception occurs, it returns null.",True,"The code defines a private static method called ""getDrawableBitmap"" that takes a Drawable object as input and returns a Bitmap object. It checks the type of the Drawable and retrieves the corresponding Bitmap by accessing internal fields using reflection. If the Drawable type is not supported or an exception occurs, it returns null."
25,clipText(String),clip text clip text ,Method,,me.ele.uetool.function.ViewAttrDialog+TextViewHolder.onClick(View),,,339,7,9,,"public static void clipText(String clipText) {
    Context context = UETool.getApplication();
    ClipData clipData = ClipData.newPlainText("""", clipText);
    ((ClipboardManager) (context.getSystemService(Context.CLIPBOARD_SERVICE))).setPrimaryClip(
        clipData);
    Toast.makeText(context, ""‚Äö√†√∂‚àö√°‚Äö√Ñ√∂‚àö‚Ä†‚àö¬¥‚Äö√Ñ√∂‚àö¬¢¬¨√ü‚Äö√†√∂‚àö√°¬¨¬®‚àö√º‚Äö√†√∂‚àö√º‚Äö√†√∂‚àö√°‚Äö√†√∂‚Äö√Ñ‚Ä†‚Äö√Ñ√∂‚àö‚Ä†‚àö√°‚Äö√†√∂‚àö√°‚Äö√†√∂‚Äö√Ñ‚Ä†‚Äö√Ñ√∂‚àö‚Ä†‚àö¬™‚Äö√†√∂‚àö√°‚Äö√†√∂¬¨¬¢‚Äö√Ñ√∂‚àö√´¬¨¬¢‚Äö√†√∂‚àö√°‚Äö√†√∂‚Äö√Ñ‚Ä†‚Äö√†√∂¬¨‚àû‚Äö√†√∂‚àö¬ß‚Äö√†√∂≈ì√Ñ‚Äö√†√∂‚Äö√†√®"", Toast.LENGTH_SHORT).show();
  }",False,False,This method copies the given text to the clipboard and displays a short toast message in the application context.,True,"The code defines a method called `clipText` that takes a string parameter. It creates a new plain text clip data with the given text and sets it as the primary clip on the clipboard. Finally, it displays a short toast message with a specific text."
