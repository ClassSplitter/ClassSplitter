index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,mNextLoadEnable,m next load enable ,Field,,,,,40,1,2,,private boolean mNextLoadEnable = false;,False,False,,False,
2,mLoadingMoreEnable,m loading more enable ,Field,,,,,43,1,2,,private boolean mLoadingMoreEnable = false;,False,False,,False,
3,mFirstOnlyEnable,m first only enable ,Field,isFirstOnly(boolean),,,,40,1,2,,private boolean mFirstOnlyEnable = true;,False,False,,False,
4,mOpenAnimationEnable,m open animation enable ,Field,openLoadAnimation(int) openLoadAnimation(BaseAnimation) openLoadAnimation(),,,,45,1,2,,private boolean mOpenAnimationEnable = false;,False,False,,False,
5,mEmptyEnable,m empty enable ,Field,,,,,29,1,2,,private boolean mEmptyEnable;,False,False,,False,
6,mHeadAndEmptyEnable,m head and empty enable ,Field,,,,,36,1,2,,private boolean mHeadAndEmptyEnable;,False,False,,False,
7,mFootAndEmptyEnable,m foot and empty enable ,Field,,,,,36,1,2,,private boolean mFootAndEmptyEnable;,False,False,,False,
8,mInterpolator,m interpolator ,Field,,,,,62,1,2,,private Interpolator mInterpolator = new LinearInterpolator();,False,False,,False,
9,mDuration,m duration ,Field,,,,,28,1,2,,private int mDuration = 300;,False,False,,False,
10,mLastPosition,m last position ,Field,,,,,31,1,2,,private int mLastPosition = -1;,False,False,,False,
11,onRecyclerViewItemClickListener,on recycler view item click listener ,Field,setOnRecyclerViewItemClickListener(OnRecyclerViewItemClickListener),,,,72,1,2,,private OnRecyclerViewItemClickListener onRecyclerViewItemClickListener;,False,False,,False,
12,onRecyclerViewItemLongClickListener,on recycler view item long click listener ,Field,setOnRecyclerViewItemLongClickListener(OnRecyclerViewItemLongClickListener),,,,80,1,2,,private OnRecyclerViewItemLongClickListener onRecyclerViewItemLongClickListener;,False,False,,False,
13,mRequestLoadMoreListener,m request load more listener ,Field,setOnLoadMoreListener(RequestLoadMoreListener),,,,57,1,2,,private RequestLoadMoreListener mRequestLoadMoreListener;,False,False,,False,
14,mCustomAnimation,m custom animation ,Field,openLoadAnimation(BaseAnimation),,,,58,2,2,,"@AnimationType
    private BaseAnimation mCustomAnimation;",False,False,,False,
15,mSelectAnimation,m select animation ,Field,,,,,64,1,2,,private BaseAnimation mSelectAnimation = new AlphaInAnimation();,False,False,,False,
16,mHeaderView,m header view ,Field,addHeaderView(View),,,,25,1,2,,private View mHeaderView;,False,False,,False,
17,mFooterView,m footer view ,Field,addFooterView(View),,,,25,1,2,,private View mFooterView;,False,False,,False,
18,pageSize,page size ,Field,"openLoadMore(int,boolean) setPageSize(int) getPageSize()",,,,26,1,2,,private int pageSize = -1;,False,False,,False,
19,mContentView,m content view ,Field,,,,,26,1,2,,private View mContentView;,False,False,,False,
20,mEmptyView,m empty view view to show if there are no items to show ,Field,,,,,91,4,2,"/** 
 * View to show if there are no items to show.
 */
","/**
     * View to show if there are no items to show.
     */
    private View mEmptyView;",False,False,"/** 
 * View to show if there are no items to show.
 */
",False,"/** 
 * View to show if there are no items to show.
 */
"
21,TAG,tag ,Field,,,,,75,1,28,,protected static final String TAG = BaseQuickAdapter.class.getSimpleName();,False,False,,False,
22,mContext,m context ,Field,"onCreateViewHolder(ViewGroup,int)",,,,27,1,4,,protected Context mContext;,False,False,,False,
23,mLayoutResId,m layout res id ,Field,"BaseQuickAdapter(int,List<T>)",,,,27,1,4,,protected int mLayoutResId;,False,False,,False,
24,mLayoutInflater,m layout inflater ,Field,"onCreateViewHolder(ViewGroup,int)",,,,41,1,4,,protected LayoutInflater mLayoutInflater;,False,False,,False,
25,mData,m data ,Field,"BaseQuickAdapter(int,List<T>) setNewData(List<T>) addData(List<T>)",,,,24,1,4,,protected List<T> mData;,False,False,,False,
26,HEADER_VIEW,header view ,Field,,,,,52,1,28,,protected static final int HEADER_VIEW = 0x00000111;,False,False,,False,
27,LOADING_VIEW,loading view ,Field,,,,,53,1,28,,protected static final int LOADING_VIEW = 0x00000222;,False,False,,False,
28,FOOTER_VIEW,footer view ,Field,,,,,52,1,28,,protected static final int FOOTER_VIEW = 0x00000333;,False,False,,False,
29,EMPTY_VIEW,empty view ,Field,,,,,51,1,28,,protected static final int EMPTY_VIEW = 0x00000555;,False,False,,False,
30,mLoadingView,m loading view ,Field,setLoadingView(View),,,,26,1,2,,private View mLoadingView;,False,False,,False,
31,ALPHAIN,alphain use with link open load animation ,Field,,,,,104,4,25,"/** 
 * Use with  {@link #openLoadAnimation}
 */
","/**
     * Use with {@link #openLoadAnimation}
     */
    public static final int ALPHAIN = 0x00000001;",False,False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
",False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
"
32,SCALEIN,scalein use with link open load animation ,Field,,,,,104,4,25,"/** 
 * Use with  {@link #openLoadAnimation}
 */
","/**
     * Use with {@link #openLoadAnimation}
     */
    public static final int SCALEIN = 0x00000002;",False,False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
",False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
"
33,SLIDEIN_BOTTOM,slidein bottom use with link open load animation ,Field,,,,,111,4,25,"/** 
 * Use with  {@link #openLoadAnimation}
 */
","/**
     * Use with {@link #openLoadAnimation}
     */
    public static final int SLIDEIN_BOTTOM = 0x00000003;",False,False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
",False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
"
34,SLIDEIN_LEFT,slidein left use with link open load animation ,Field,,,,,109,4,25,"/** 
 * Use with  {@link #openLoadAnimation}
 */
","/**
     * Use with {@link #openLoadAnimation}
     */
    public static final int SLIDEIN_LEFT = 0x00000004;",False,False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
",False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
"
35,SLIDEIN_RIGHT,slidein right use with link open load animation ,Field,,,,,110,4,25,"/** 
 * Use with  {@link #openLoadAnimation}
 */
","/**
     * Use with {@link #openLoadAnimation}
     */
    public static final int SLIDEIN_RIGHT = 0x00000005;",False,False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
",False,"/** 
 * Use with  {@link #openLoadAnimation}
 */
"
36,NO_TOGGLE_VIEW,no toggle view ,Field,,,,,44,1,26,,private static final int NO_TOGGLE_VIEW = 0;,True,True,,False,
37,mToggleViewId,m toggle view id ,Field,,,,,43,1,2,,private int mToggleViewId = NO_TOGGLE_VIEW;,True,True,,False,
38,mItemTouchHelper,m item touch helper ,Field,,,,,41,1,2,,private ItemTouchHelper mItemTouchHelper;,True,True,,False,
39,itemDragEnabled,item drag enabled ,Field,,,,,40,1,2,,private boolean itemDragEnabled = false;,True,True,,False,
40,itemSwipeEnabled,item swipe enabled ,Field,,,,,41,1,2,,private boolean itemSwipeEnabled = false;,True,True,,False,
41,mOnItemDragListener,m on item drag listener ,Field,,,,,47,1,2,,private OnItemDragListener mOnItemDragListener;,True,True,,False,
42,mOnItemSwipeListener,m on item swipe listener ,Field,,,,,49,1,2,,private OnItemSwipeListener mOnItemSwipeListener;,True,True,,False,
43,mDragOnLongPress,m drag on long press ,Field,,,,,40,1,2,,private boolean mDragOnLongPress = true;,True,True,,False,
44,mOnToggleViewTouchListener,m on toggle view touch listener ,Field,,,,,56,1,2,,private View.OnTouchListener mOnToggleViewTouchListener;,True,True,,False,
45,mOnToggleViewLongClickListener,m on toggle view long click listener ,Field,,,,,64,1,2,,private View.OnLongClickListener mOnToggleViewLongClickListener;,True,True,,False,
46,ERROR_NOT_SAME_ITEMTOUCHHELPER,error not same itemtouchhelper ,Field,,,,,125,1,26,,"private static final String ERROR_NOT_SAME_ITEMTOUCHHELPER = ""Item drag and item swipe should pass the same ItemTouchHelper"";",True,True,,False,
47,"setOnLoadMoreListener(int,RequestLoadMoreListener)",set on load more listener page size request load more listener call the method will not enable the load more funcation and the params page size is invalid more infomation see link public void open load more int page size boolean enable link public void set on load more listener request load more listener request load more listener method param page size param request load more listener ,Method,,,com.chad.library.adapter.base.BaseQuickAdapter+setOnLoadMoreListener(RequestLoadMoreListener) com.chad.library.adapter.base.BaseQuickAdapter+setOnLoadMoreListener(RequestLoadMoreListener),,545,12,1,"/** 
 * call the method will not enable the loadMore funcation and the params pageSize is invalid more infomation see {@link  public void openLoadMore(int pageSize, boolean enable),@link  public void setOnLoadMoreListener(RequestLoadMoreListener requestLoadMoreListener)} method
 * @param pageSize
 * @param requestLoadMoreListener
 */
","/**
     * call the method will not enable the loadMore funcation and the params pageSize is invalid
     * more infomation see{@link  public void openLoadMore(int pageSize, boolean enable),@link  public void setOnLoadMoreListener(RequestLoadMoreListener requestLoadMoreListener)} method
     *
     * @param pageSize
     * @param requestLoadMoreListener
     */
    @Deprecated
    public void setOnLoadMoreListener(int pageSize, RequestLoadMoreListener requestLoadMoreListener) {

        setOnLoadMoreListener(requestLoadMoreListener);
    }",False,False,"This method is used to set a listener for load more functionality. It takes a page size and a load more listener as parameters, but it is deprecated and should not be used.",True,"This code is a deprecated method that sets a listener for load more functionality. It takes a page size and a request load more listener as parameters, but it is not recommended to use this method as it does not enable the load more functionality and the page size parameter is invalid."
48,setOnLoadMoreListener(RequestLoadMoreListener),set on load more listener request load more listener ,Method,"setOnLoadMoreListener(int,RequestLoadMoreListener)",com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+initAdapter(),,com.chad.library.adapter.base.BaseQuickAdapter<T>+mRequestLoadMoreListener com.chad.library.adapter.base.BaseQuickAdapter+mRequestLoadMoreListener,155,3,1,,"public void setOnLoadMoreListener(RequestLoadMoreListener requestLoadMoreListener) {
        this.mRequestLoadMoreListener = requestLoadMoreListener;
    }",False,False,"This method sets the listener for the ""load more"" event in a request.",True,"This code defines a method called ""setOnLoadMoreListener"" which takes a parameter of type ""RequestLoadMoreListener"". It assigns the value of the parameter to the instance variable ""mRequestLoadMoreListener"". This method is likely used to set a listener for a load more event in a class or object."
49,setDuration(int),set duration duration sets the duration of the animation param duration the length of the animation in milliseconds ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+mDuration,210,8,1,"/** 
 * Sets the duration of the animation.
 * @param duration The length of the animation, in milliseconds.
 */
","/**
     * Sets the duration of the animation.
     *
     * @param duration The length of the animation, in milliseconds.
     */
    public void setDuration(int duration) {
        mDuration = duration;
    }",False,False,"This method sets the duration of an animation by assigning the value of the parameter ""duration"" to the variable ""mDuration"".",True,"This code defines a method called ""setDuration"" that takes an integer parameter representing the length of an animation in milliseconds. The method sets the value of a variable called ""mDuration"" to the provided duration."
50,"openLoadMore(int,boolean)",open load more page size enable when adapter s data size than page size and enable is true the loading more function is enable or disable param page size param enable ,Method,,com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+run() com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+initAdapter(),,com.chad.library.adapter.base.BaseQuickAdapter<T>+pageSize com.chad.library.adapter.base.BaseQuickAdapter+pageSize com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable,310,11,1,"/** 
 * when adapter's data size than pageSize and enable is true,the loading more function is enable,or disable
 * @param pageSize
 * @param enable
 */
","/**
     * when adapter's data size than pageSize and enable is true,the loading more function is enable,or disable
     *
     * @param pageSize
     * @param enable
     */
    public void openLoadMore(int pageSize, boolean enable) {
        this.pageSize = pageSize;
        mNextLoadEnable = enable;

    }",False,False,This method sets the page size and enables or disables the loading more function based on the size of the adapter's data and the value of the enable parameter.,True,"The method ""openLoadMore"" is used to enable or disable the loading more function in an adapter. It takes two parameters: ""pageSize"" which represents the size of the data, and ""enable"" which determines whether the loading more function is enabled or disabled."
51,openLoadMore(boolean),open load more enable call the method before you should call set page size method to setting up the enable pager size value whether it will invalid enable the loading more data function if enable s value is true or disable param enable ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable,341,10,1,"/** 
 * call the method before you should call setPageSize() method to setting up the enablePagerSize value,whether it will  invalid enable the loading more data function if enable's value is true,or disable
 * @param enable
 */
","/**
     * call the method before you should call setPageSize() method to setting up the enablePagerSize value,whether it will  invalid
     * enable the loading more data function if enable's value is true,or disable
     *
     * @param enable
     */
    public void openLoadMore(boolean enable) {
        mNextLoadEnable = enable;

    }",False,False,"The function of the method is to enable or disable the loading more data function based on the value of the ""enable"" parameter.",True,"The given code is a method named ""openLoadMore"" that enables or disables the loading more data function based on the value of the ""enable"" parameter. It is recommended to call the ""setPageSize"" method before calling this method to ensure the correct behavior of the ""enable"" value."
52,setPageSize(int),set page size page size setting up the size to decide the loading more data funcation whether enable enable if the data size than page size or diable param page size ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter<T>+pageSize com.chad.library.adapter.base.BaseQuickAdapter+pageSize,264,9,1,"/** 
 * setting up the size to decide the loading more data funcation whether enable enable if the data size than pageSize,or diable
 * @param pageSize
 */
","/**
     * setting up the size to decide the loading more data funcation whether enable
     * enable if the data size than pageSize,or diable
     *
     * @param pageSize
     */
    public void setPageSize(int pageSize) {
        this.pageSize = pageSize;
    }",False,False,"This method sets the size of the page to determine whether the ""loading more data"" function should be enabled. If the data size is greater than the page size, the function is enabled; otherwise, it is disabled.",True,"This code defines a method called ""setPageSize"" that takes an integer parameter called ""pageSize"". The purpose of this method is to set the size of the data that determines whether the loading more data function should be enabled or disabled."
53,getPageSize(),get page size return the value of page size return ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter<T>+pageSize com.chad.library.adapter.base.BaseQuickAdapter+pageSize,136,8,1,"/** 
 * return the value of pageSize
 * @return
 */
","/**
     * return the value of pageSize
     *
     * @return
     */
    public int getPageSize() {
        return this.pageSize;
    }",False,False,This method returns the value of the pageSize variable.,True,"This code defines a method called ""getPageSize"" that returns the value of a variable called ""pageSize"". The method does not take any parameters and is expected to return an integer value."
54,setOnRecyclerViewItemClickListener(OnRecyclerViewItemClickListener),set on recycler view item click listener on recycler view item click listener register a callback to be invoked when an item in this adapter view has been clicked param on recycler view item click listener the callback that will be invoked ,Method,,com.chad.baserecyclerviewadapterhelper.HeaderAndFooterUseActivity+initAdapter() com.chad.baserecyclerviewadapterhelper.HomeActivity+onCreate(Bundle) com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+initAdapter() com.chad.baserecyclerviewadapterhelper.SectionUseActivity+onCreate(Bundle),,com.chad.library.adapter.base.BaseQuickAdapter<T>+onRecyclerViewItemClickListener com.chad.library.adapter.base.BaseQuickAdapter+onRecyclerViewItemClickListener,402,9,1,"/** 
 * Register a callback to be invoked when an item in this AdapterView has been clicked.
 * @param onRecyclerViewItemClickListener The callback that will be invoked.
 */
","/**
     * Register a callback to be invoked when an item in this AdapterView has
     * been clicked.
     *
     * @param onRecyclerViewItemClickListener The callback that will be invoked.
     */
    public void setOnRecyclerViewItemClickListener(OnRecyclerViewItemClickListener onRecyclerViewItemClickListener) {
        this.onRecyclerViewItemClickListener = onRecyclerViewItemClickListener;
    }",False,False,This method sets a callback for when an item in an AdapterView is clicked. The callback is passed as a parameter and stored in a variable.,True,"This code defines a method called ""setOnRecyclerViewItemClickListener"" that allows a callback function to be registered for when an item in an AdapterView (such as a RecyclerView) is clicked. The callback function will be invoked when the item is clicked."
55,OnRecyclerViewItemClickListener,on recycler view item click listener interface definition for a callback to be invoked when an item in this adapter view has been clicked ,MemberClass,,,"com.chad.library.adapter.base.BaseQuickAdapter.OnRecyclerViewItemClickListener+onItemClick(View,int)",,600,15,1,"/** 
 * Interface definition for a callback to be invoked when an item in this AdapterView has been clicked.
 */
","/**
     * Interface definition for a callback to be invoked when an item in this
     * AdapterView has been clicked.
     */
    public interface OnRecyclerViewItemClickListener {
        /**
         * Callback method to be invoked when an item in this AdapterView has
         * been clicked.
         *
         * @param view     The view within the AdapterView that was clicked (this
         *                 will be a view provided by the adapter)
         * @param position The position of the view in the adapter.
         */
        public void onItemClick(View view, int position);
    }",False,False,"/** 
 * Interface definition for a callback to be invoked when an item in this AdapterView has been clicked.
 */
",False,"/** 
 * Interface definition for a callback to be invoked when an item in this AdapterView has been clicked.
 */
"
56,setOnRecyclerViewItemLongClickListener(OnRecyclerViewItemLongClickListener),set on recycler view item long click listener on recycler view item long click listener register a callback to be invoked when an item in this adapter view has been clicked and held param on recycler view item long click listener the callback that will run ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter<T>+onRecyclerViewItemLongClickListener com.chad.library.adapter.base.BaseQuickAdapter+onRecyclerViewItemLongClickListener,426,9,1,"/** 
 * Register a callback to be invoked when an item in this AdapterView has been clicked and held
 * @param onRecyclerViewItemLongClickListener The callback that will run
 */
","/**
     * Register a callback to be invoked when an item in this AdapterView has
     * been clicked and held
     *
     * @param onRecyclerViewItemLongClickListener The callback that will run
     */
    public void setOnRecyclerViewItemLongClickListener(OnRecyclerViewItemLongClickListener onRecyclerViewItemLongClickListener) {
        this.onRecyclerViewItemLongClickListener = onRecyclerViewItemLongClickListener;
    }",False,False,This method sets a callback listener for when an item in an AdapterView is clicked and held. The provided callback will be executed when this event occurs.,True,"This code defines a method called ""setOnRecyclerViewItemLongClickListener"" that allows a callback function to be registered for when an item in an AdapterView is clicked and held. The provided callback function will be executed when this event occurs."
57,OnRecyclerViewItemLongClickListener,on recycler view item long click listener interface definition for a callback to be invoked when an item in this view has been clicked and held ,MemberClass,,,"com.chad.library.adapter.base.BaseQuickAdapter.OnRecyclerViewItemLongClickListener+onItemLongClick(View,int)",,619,15,1,"/** 
 * Interface definition for a callback to be invoked when an item in this view has been clicked and held
 */
","/**
     * Interface definition for a callback to be invoked when an item in this
     * view has been clicked and held
     */
    public interface OnRecyclerViewItemLongClickListener {
        /**
         * callback method to be invoked when an item in this view has been
         * click and held
         *
         * @param view     The view whihin the AbsListView that was clicked
         * @param position The position of the view int the adapter
         * @return true if the callback consumed the long click ,false otherwise
         */
        public boolean onItemLongClick(View view, int position);
    }",False,False,"/** 
 * Interface definition for a callback to be invoked when an item in this view has been clicked and held
 */
",False,"/** 
 * Interface definition for a callback to be invoked when an item in this view has been clicked and held
 */
"
58,mChildClickListener,m child click listener ,Field,setOnRecyclerViewItemChildClickListener(OnRecyclerViewItemChildClickListener),,,,65,1,2,,private OnRecyclerViewItemChildClickListener mChildClickListener;,False,False,,False,
59,setOnRecyclerViewItemChildClickListener(OnRecyclerViewItemChildClickListener),set on recycler view item child click listener child click listener register a callback to be invoked when child view in this adapter view has been clicked and held link on recycler view item child click listener param child click listener the callback that will run ,Method,,com.chad.baserecyclerviewadapterhelper.AnimationUseActivity+initAdapter() com.chad.baserecyclerviewadapterhelper.SectionUseActivity+onCreate(Bundle),,com.chad.library.adapter.base.BaseQuickAdapter<T>+mChildClickListener com.chad.library.adapter.base.BaseQuickAdapter+mChildClickListener,415,10,1,"/** 
 * Register a callback to be invoked when childView in this AdapterView has been clicked and held {@link OnRecyclerViewItemChildClickListener}
 * @param childClickListener The callback that will run
 */
","/**
     * Register a callback to be invoked when childView in this AdapterView has
     * been clicked and held
     * {@link OnRecyclerViewItemChildClickListener}
     *
     * @param childClickListener The callback that will run
     */
    public void setOnRecyclerViewItemChildClickListener(OnRecyclerViewItemChildClickListener childClickListener) {
        this.mChildClickListener = childClickListener;
    }",False,False,This method sets a callback listener for when a child view in an AdapterView (such as a RecyclerView) is clicked and held. The provided callback will be executed when this event occurs.,True,"This code defines a method called ""setOnRecyclerViewItemChildClickListener"" that allows a callback function to be registered for when a child view in an AdapterView is clicked and held. The callback function is of type ""OnRecyclerViewItemChildClickListener""."
60,OnRecyclerViewItemChildClickListener,on recycler view item child click listener ,MemberClass,,,"com.chad.library.adapter.base.BaseQuickAdapter.OnRecyclerViewItemChildClickListener+onItemChildClick(BaseQuickAdapter,View,int)",,143,3,1,,"public interface OnRecyclerViewItemChildClickListener {
        void onItemChildClick(BaseQuickAdapter adapter, View view, int position);
    }",False,False,,False,
61,OnItemChildClickListener,on item child click listener ,MemberClass,,,"com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildClickListener+onClick(View) com.chad.library.adapter.base.BaseQuickAdapter.OnRecyclerViewItemChildClickListener+onItemChildClick(BaseQuickAdapter,View,int) com.chad.library.adapter.base.BaseQuickAdapter.OnRecyclerViewItemChildClickListener+onItemChildClick(BaseQuickAdapter,View,int) com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount()",com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildClickListener+mViewHolder com.chad.library.adapter.base.BaseQuickAdapter+mChildClickListener com.chad.library.adapter.base.BaseQuickAdapter+mChildClickListener com.chad.library.adapter.base.BaseQuickAdapter.OnItemChildClickListener+mViewHolder,378,9,1,,"public class OnItemChildClickListener implements View.OnClickListener {
        public RecyclerView.ViewHolder mViewHolder;

        @Override
        public void onClick(View v) {
            if (mChildClickListener != null)
                mChildClickListener.onItemChildClick(BaseQuickAdapter.this, v, mViewHolder.getLayoutPosition() - getHeaderViewsCount());
        }
    }",False,False,,False,
62,"BaseQuickAdapter(int,List<T>)",base quick adapter layout res id data same as quick adapter quick adapter context int but with some initialization data param layout res id the layout resource id of each item param data a new list is created out of this one to avoid mutable list ,Method,,,java.util.ArrayList+ArrayList(),com.chad.library.adapter.base.BaseQuickAdapter<T>+mData com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter<T>+mLayoutResId com.chad.library.adapter.base.BaseQuickAdapter+mLayoutResId,480,13,1,"/** 
 * Same as QuickAdapter#QuickAdapter(Context,int) but with some initialization data.
 * @param layoutResId The layout resource id of each item.
 * @param data        A new list is created out of this one to avoid mutable list
 */
","/**
     * Same as QuickAdapter#QuickAdapter(Context,int) but with
     * some initialization data.
     *
     * @param layoutResId The layout resource id of each item.
     * @param data        A new list is created out of this one to avoid mutable list
     */
    public BaseQuickAdapter(int layoutResId, List<T> data) {
        this.mData = data == null ? new ArrayList<T>() : data;
        if (layoutResId != 0) {
            this.mLayoutResId = layoutResId;
        }
    }",False,False,"This method is a constructor for a BaseQuickAdapter class. It initializes the mData variable with the given data list, or an empty list if the data is null. It also sets the mLayoutResId variable if the given layoutResId is not 0.",False,"This code defines a constructor for a base adapter class that takes a layout resource id and a list of data as parameters. It initializes the adapter's data list with the provided data or an empty list if the data is null, and sets the layout resource id if it is not 0."
63,BaseQuickAdapter(List<T>),base quick adapter data ,Method,,,,,68,3,1,,"public BaseQuickAdapter(List<T> data) {
        this(0, data);
    }",False,False,This method is a constructor for the BaseQuickAdapter class. It takes a List of type T as a parameter and calls another constructor with a default value of 0 and the given data.,False,The code defines a constructor for a class called BaseQuickAdapter that takes a list of objects as input. It initializes the class with a default value of 0 and the provided list of data.
64,"BaseQuickAdapter(View,List<T>)",base quick adapter content view data ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+mContentView,122,4,1,,"public BaseQuickAdapter(View contentView, List<T> data) {
        this(0, data);
        mContentView = contentView;
    }",False,False,"This method is a constructor for a class called BaseQuickAdapter. It takes a View object and a List of objects as parameters, and initializes the class with a default value of 0 and assigns the View object to a member variable.",False,The code defines a constructor for a BaseQuickAdapter class that takes a View and a List of data as parameters. It initializes the class with a default value of 0 and assigns the contentView to the provided View.
65,remove(int),remove position remove the item associated with the specified position of adapter param position ,Method,,,java.util.List+remove(int) java.util.List+remove(int) com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount(),com.chad.library.adapter.base.BaseQuickAdapter+mData,253,10,1,"/** 
 * remove the item associated with the specified position of adapter
 * @param position
 */
","/**
     * remove the item associated with the specified position of adapter
     *
     * @param position
     */
    public void remove(int position) {
        mData.remove(position);
        notifyItemRemoved(position + getHeaderViewsCount());

    }",False,False,This method removes an item from the adapter's data at the specified position and notifies the adapter that the item has been removed.,True,"This code defines a method called ""remove"" that removes an item from an adapter at the specified position. It then notifies the adapter that the item has been removed."
66,"add(int,T)",add position item insert a item associated with the specified position of adapter param position param item ,Method,,,"java.util.List+add(int,E) java.util.List+add(int,E)",com.chad.library.adapter.base.BaseQuickAdapter+mData,255,10,1,"/** 
 * insert  a item associated with the specified position of adapter
 * @param position
 * @param item
 */
","/**
     * insert  a item associated with the specified position of adapter
     *
     * @param position
     * @param item
     */
    public void add(int position, T item) {
        mData.add(position, item);
        notifyItemInserted(position);
    }",False,False,This method adds an item to a specified position in an adapter and notifies the adapter that an item has been inserted.,True,"The code defines a method called ""add"" that inserts an item at a specified position in an adapter. It takes two parameters: the position where the item should be inserted and the item itself. The method adds the item to the adapter's data list and notifies the adapter of the inserted item."
67,setNewData(List<T>),set new data data setting up a new instance to data param data ,Method,,com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+run(),,com.chad.library.adapter.base.BaseQuickAdapter<T>+mData com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mRequestLoadMoreListener com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable com.chad.library.adapter.base.BaseQuickAdapter+mFooterView com.chad.library.adapter.base.BaseQuickAdapter+mLastPosition,341,14,1,"/** 
 * setting up a new instance to data;
 * @param data
 */
","/**
     * setting up a new instance to data;
     *
     * @param data
     */
    public void setNewData(List<T> data) {
        this.mData = data;
        if (mRequestLoadMoreListener != null) {
            mNextLoadEnable = true;
            mFooterView = null;
        }
        mLastPosition = -1;
        notifyDataSetChanged();
    }",False,False,This method sets a new instance of data for the object. It also checks if there is a load more listener and updates the load enable status accordingly. It resets the last position and notifies any observers of the data change.,True,"The method ""setNewData"" is used to update the data of a list. It takes a list of type T as a parameter and assigns it to the mData variable. If a request load more listener is set, it enables the next load, resets the footer view, and updates the last position. Finally, it notifies any observers of the data set change."
68,addData(List<T>),add data data additional data param data ,Method,,,java.util.List+addAll(Collection) java.util.List+addAll(Collection),com.chad.library.adapter.base.BaseQuickAdapter<T>+mData com.chad.library.adapter.base.BaseQuickAdapter+mData,172,9,1,"/** 
 * additional data;
 * @param data
 */
","/**
     * additional data;
     *
     * @param data
     */
    public void addData(List<T> data) {
        this.mData.addAll(data);
        notifyDataSetChanged();
    }",False,False,This method adds additional data to the existing data list and notifies any observers of the change.,True,"The code defines a method called ""addData"" that takes a list of objects as input. It adds the input data to an existing list called ""mData"" and then notifies any observers of the change."
69,setLoadingView(View),set loading view loading view set a loading view param loading view ,Method,,com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+onClick(View),,com.chad.library.adapter.base.BaseQuickAdapter<T>+mLoadingView com.chad.library.adapter.base.BaseQuickAdapter+mLoadingView,167,8,1,"/** 
 * set a loadingView
 * @param loadingView
 */
","/**
     * set a loadingView
     *
     * @param loadingView
     */
    public void setLoadingView(View loadingView) {
        this.mLoadingView = loadingView;
    }",False,False,This method sets a loading view for a specific object.,True,The code defines a method called `setLoadingView` that takes a `View` object as a parameter. This method is used to set the loading view for a particular object.
70,getData(),get data get the data of list return ,Method,,com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+run() com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+initAdapter(),,com.chad.library.adapter.base.BaseQuickAdapter+mData,120,8,1,"/** 
 * Get the data of list
 * @return
 */
","/**
     * Get the data of list
     *
     * @return
     */
    public List<T> getData() {
        return mData;
    }",False,False,This method serves to retrieve the data of a list.,True,"This code defines a method named ""getData"" that returns a list of objects of type T. The method does not take any parameters and simply returns the mData list."
71,getItem(int),get item position get the data item associated with the specified position in the data set param position position of the item whose data we want within the adapter sdata set return the data at the specified position ,Method,,"com.chad.baserecyclerviewadapterhelper.AnimationUseActivity+onItemChildClick(BaseQuickAdapter,View,int)",java.util.List+get(int) java.util.List+get(int),com.chad.library.adapter.base.BaseQuickAdapter+mData,346,10,1,"/** 
 * Get the data item associated with the specified position in the data set.
 * @param position Position of the item whose data we want within the adapter'sdata set.
 * @return The data at the specified position.
 */
","/**
     * Get the data item associated with the specified position in the data set.
     *
     * @param position Position of the item whose data we want within the adapter's
     *                 data set.
     * @return The data at the specified position.
     */
    public T getItem(int position) {
        return mData.get(position);
    }",False,False,This method retrieves the data item at a specified position in the data set. It takes in a position as a parameter and returns the data at that position.,True,This code defines a method called `getItem` that retrieves the data item at a specified position in the adapter's data set. It takes an integer parameter representing the position and returns the data at that position.
72,getHeaderViewsCount(),get header views count if set head view will be return 1 if not will be return 0 return ,Method,"OnItemChildClickListener.onClick(View) remove(int) getItemCount() getItemCount() getItemViewType(int) getItemViewType(int) onBindViewHolder(RecyclerView.ViewHolder,int) onBindViewHolder(RecyclerView.ViewHolder,int) onBindViewHolder(RecyclerView.ViewHolder,int) getViewHolderPosition(RecyclerView.ViewHolder)",,,com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView,185,8,1,"/** 
 * if setHeadView will be return 1 if not will be return 0
 * @return
 */
","/**
     * if setHeadView will be return 1 if not will be return 0
     *
     * @return
     */
    public int getHeaderViewsCount() {
        return mHeaderView == null ? 0 : 1;
    }",False,False,"The function of the method is to return the number of header views. It returns 1 if a header view is set, and 0 if no header view is set.",True,"This code defines a method called ""getHeaderViewsCount"" which returns the number of header views in a list. If a header view is set, the method will return 1, otherwise it will return 0."
73,getFooterViewsCount(),get footer views count if m footer view will be return 1 or not will be return 0 return ,Method,getItemCount(),,,com.chad.library.adapter.base.BaseQuickAdapter+mFooterView,185,8,1,"/** 
 * if mFooterView will be return 1 or not will be return 0
 * @return
 */
","/**
     * if mFooterView will be return 1 or not will be return 0
     *
     * @return
     */
    public int getFooterViewsCount() {
        return mFooterView == null ? 0 : 1;
    }",False,False,"This method returns 1 if mFooterView is not null, otherwise it returns 0.",True,"This code defines a method called ""getFooterViewsCount"" that returns the number of footer views in a list. If there is a footer view, the method returns 1, otherwise it returns 0."
74,getmEmptyViewCount(),getm empty view count if m empty view will be return 1 or not will be return 0 return ,Method,getItemCount() getItemCount() getItemCount(),,,com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView,182,8,1,"/** 
 * if mEmptyView will be return 1 or not will be return 0
 * @return
 */
","/**
     * if mEmptyView will be return 1 or not will be return 0
     *
     * @return
     */
    public int getmEmptyViewCount() {
        return mEmptyView == null ? 0 : 1;
    }",False,False,"The function of this method is to check if the mEmptyView is null or not. If it is null, it returns 0. Otherwise, it returns 1.",False,"This code defines a method called ""getmEmptyViewCount"" which returns an integer value. It checks if the variable ""mEmptyView"" is null, and if so, it returns 0. Otherwise, it returns 1. The method is used to determine if the ""mEmptyView"" is present or not."
75,getItemCount(),get item count returns the number of item that will be created return ,Method,getItemViewType(int),,com.chad.library.adapter.base.BaseQuickAdapter+isLoadMore() com.chad.library.adapter.base.BaseQuickAdapter+isLoadMore() java.util.List+size() java.util.List+size() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getFooterViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getFooterViewsCount() java.util.List+size() java.util.List+size() com.chad.library.adapter.base.BaseQuickAdapter+getmEmptyViewCount() com.chad.library.adapter.base.BaseQuickAdapter+getmEmptyViewCount() com.chad.library.adapter.base.BaseQuickAdapter+getmEmptyViewCount() com.chad.library.adapter.base.BaseQuickAdapter+getmEmptyViewCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getmEmptyViewCount() com.chad.library.adapter.base.BaseQuickAdapter+getmEmptyViewCount(),com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mFootAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mFootAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mEmptyEnable,992,30,1,"/** 
 * returns the number of item that will be created
 * @return
 */
","/**
     * returns the number of item that will be created
     *
     * @return
     */
    @Override
    public int getItemCount() {
        int i = isLoadMore() ? 1 : 0;
        int count = mData.size() + i + getHeaderViewsCount() + getFooterViewsCount();
        if (mData.size() == 0 && mEmptyView != null) {
            /**
             *  setEmptyView(false) and add emptyView
             */
            if (count == 0 && (!mHeadAndEmptyEnable || !mFootAndEmptyEnable)) {
                count += getmEmptyViewCount();
                /**
                 * {@link #setEmptyView(true, true, View)}
                 */
            } else if (mHeadAndEmptyEnable || mFootAndEmptyEnable) {
                count += getmEmptyViewCount();
            }

            if ((mHeadAndEmptyEnable && getHeaderViewsCount() == 1 && count == 1) || count == 0) {
                mEmptyEnable = true;
                count += getmEmptyViewCount();
            }

        }
        return count;
    }",False,False,"This method returns the total number of items that will be created in a list, including the data items, header views, footer views, and empty views. It takes into account various conditions such as whether there is a ""load more"" item, whether the list is empty, and whether empty views are enabled.",True,"This code is a method that calculates the number of items that will be created in a list. It takes into account the data size, whether a load more option is enabled, and the presence of header and footer views. It also handles the case when the data is empty and an empty view is set."
76,getItemViewType(int),get item view type position get the type of view that will be created by link get item view int view group for the specified item param position the position of the item within the adapter s data set whose view type wewant return an integer representing the type of view two views should share the same type if onecan be converted to the other in link get item view int view group note integers must be in the range 0 to link get item count 1 ,Method,,,java.util.List+size() java.util.List+size() java.util.List+size() java.util.List+size() com.chad.library.adapter.base.BaseQuickAdapter+getItemCount() com.chad.library.adapter.base.BaseQuickAdapter+getItemCount() java.util.List+size() java.util.List+size() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getDefItemViewType(int) com.chad.library.adapter.base.BaseQuickAdapter+getDefItemViewType(int) com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount(),com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView com.chad.library.adapter.base.BaseQuickAdapter+HEADER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mFootAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+mFooterView com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mFooterView com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mFootAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mFootAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mFooterView com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable com.chad.library.adapter.base.BaseQuickAdapter+LOADING_VIEW com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW,2843,66,1,"/** 
 * Get the type of View that will be created by  {@link #getItemView(int,ViewGroup)} for the specified item.
 * @param position The position of the item within the adapter's data set whose view type wewant.
 * @return An integer representing the type of View. Two views should share the same type if onecan be converted to the other in  {@link #getItemView(int,ViewGroup)}. Note: Integers must be in the range 0 to  {@link #getItemCount()} - 1.
 */
","/**
     * Get the type of View that will be created by {@link #getItemView(int, ViewGroup)} for the specified item.
     *
     * @param position The position of the item within the adapter's data set whose view type we
     *                 want.
     * @return An integer representing the type of View. Two views should share the same type if one
     * can be converted to the other in {@link #getItemView(int, ViewGroup)}. Note: Integers must be in the
     * range 0 to {@link #getItemCount()} - 1.
     */
    @Override
    public int getItemViewType(int position) {
        /**
         * if set headView and positon =0
         */
        if (mHeaderView != null && position == 0) {
            return HEADER_VIEW;
        }
        /**
         * if user has no data and add emptyView and position <2{(headview +emptyView)}
         */
        if (mData.size() == 0 && mEmptyEnable && mEmptyView != null && position <= 2) {
            /**
             * if set {@link #setEmptyView(boolean, boolean, View)}  position = 1
             */
            if ((mHeadAndEmptyEnable || mFootAndEmptyEnable) && position == 1) {
                /**
                 * if user want to show headview and footview and emptyView but not add headview
                 */
                if (mHeaderView == null && mEmptyView != null && mFooterView != null) {
                    return FOOTER_VIEW;
                    /**
                     * add headview
                     */
                } else if (mHeaderView != null && mEmptyView != null) {
                    return EMPTY_VIEW;
                }
            } else if (position == 0) {
                /**
                 * has no emptyView just add emptyview
                 */
                if (mHeaderView == null) {
                    return EMPTY_VIEW;
                } else if (mFooterView != null)

                    return EMPTY_VIEW;


            } else if (position == 2 && (mFootAndEmptyEnable || mHeadAndEmptyEnable) && mHeaderView != null && mEmptyView != null) {
                return FOOTER_VIEW;

            } /**
             * user forget to set {@link #setEmptyView(boolean, boolean, View)}  but add footview and headview and emptyview
             */
            else if ((!mFootAndEmptyEnable || !mHeadAndEmptyEnable) && position == 1 && mFooterView != null) {
                return FOOTER_VIEW;
            }
        } else if (mData.size() == 0 && mEmptyView != null && getItemCount() == (mHeadAndEmptyEnable ? 2 : 1) && mEmptyEnable) {
            return EMPTY_VIEW;
        } else if (position == mData.size() + getHeaderViewsCount()) {
            if (mNextLoadEnable)
                return LOADING_VIEW;
            else
                return FOOTER_VIEW;
        }
        return getDefItemViewType(position - getHeaderViewsCount());
    }",False,False,"The function of this method is to determine the type of view that will be created for a specific item in an adapter. It checks various conditions, such as the presence of a header view, empty view, or footer view, and returns the appropriate view type based on these conditions.",True,"This code is a method that determines the type of view that will be created for a specific item in an adapter. It checks various conditions, such as the presence of a header or empty view, and returns an integer representing the type of view."
77,getDefItemViewType(int),get def item view type position ,Method,getItemViewType(int),,,,102,3,4,,"protected int getDefItemViewType(int position) {
        return super.getItemViewType(position);
    }",False,False,This method returns the item view type of a specific position in a list or grid. It calls the getItemViewType method of the superclass to get the view type.,False,"The code defines a protected method named ""getDefItemViewType"" that returns an integer value. It overrides the getItemViewType method from the superclass and simply calls the superclass method with the given position argument."
78,"onCreateViewHolder(ViewGroup,int)",on create view holder parent view type ,Method,,,"com.chad.library.adapter.base.BaseQuickAdapter+getLoadingView(ViewGroup) com.chad.library.adapter.base.BaseQuickAdapter+getLoadingView(ViewGroup) com.chad.library.adapter.base.BaseViewHolder+BaseViewHolder(View) com.chad.library.adapter.base.BaseViewHolder+BaseViewHolder(View) com.chad.library.adapter.base.BaseViewHolder+BaseViewHolder(View) com.chad.library.adapter.base.BaseQuickAdapter+onCreateDefViewHolder(ViewGroup,int) com.chad.library.adapter.base.BaseQuickAdapter+onCreateDefViewHolder(ViewGroup,int) com.chad.library.adapter.base.BaseQuickAdapter+initItemClickListener(BaseViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+initItemClickListener(BaseViewHolder)",com.chad.library.adapter.base.BaseQuickAdapter<T>+mContext com.chad.library.adapter.base.BaseQuickAdapter+mContext com.chad.library.adapter.base.BaseQuickAdapter<T>+mLayoutInflater com.chad.library.adapter.base.BaseQuickAdapter+mLayoutInflater com.chad.library.adapter.base.BaseQuickAdapter+mContext com.chad.library.adapter.base.BaseQuickAdapter+LOADING_VIEW com.chad.library.adapter.base.BaseQuickAdapter+HEADER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mFooterView,933,25,1,,"@Override
    public BaseViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        BaseViewHolder baseViewHolder = null;
        this.mContext = parent.getContext();
        this.mLayoutInflater = LayoutInflater.from(mContext);
        switch (viewType) {
            case LOADING_VIEW:
                baseViewHolder = getLoadingView(parent);
                break;
            case HEADER_VIEW:
                baseViewHolder = new BaseViewHolder(mHeaderView);
                break;
            case EMPTY_VIEW:
                baseViewHolder = new BaseViewHolder(mEmptyView);
                break;
            case FOOTER_VIEW:
                baseViewHolder = new BaseViewHolder(mFooterView);
                break;
            default:
                baseViewHolder = onCreateDefViewHolder(parent, viewType);
                initItemClickListener(baseViewHolder);
        }
        return baseViewHolder;

    }",False,False,"This method is used to create and return a BaseViewHolder object based on the viewType. It sets the mContext and mLayoutInflater variables, and handles different view types by creating the appropriate BaseViewHolder object. Finally, it initializes the item click listener and returns the created BaseViewHolder object.",True,This code is an implementation of the `onCreateViewHolder` method in an adapter class. It creates and returns a `BaseViewHolder` object based on the `viewType` parameter. The method also initializes the item click listener for the created view holder.
79,getLoadingView(ViewGroup),get loading view parent ,Method,"onCreateViewHolder(ViewGroup,int)",,"com.chad.library.adapter.base.BaseQuickAdapter+createBaseViewHolder(ViewGroup,int) com.chad.library.adapter.base.BaseQuickAdapter+createBaseViewHolder(ViewGroup,int) com.chad.library.adapter.base.BaseViewHolder+BaseViewHolder(View)",com.chad.library.adapter.base.BaseQuickAdapter+mLoadingView com.chad.library.adapter.base.BaseQuickAdapter+mLoadingView,229,6,2,,"private BaseViewHolder getLoadingView(ViewGroup parent) {
        if (mLoadingView == null) {
            return createBaseViewHolder(parent, R.layout.def_loading);
        }
        return new BaseViewHolder(mLoadingView);
    }",False,False,"This method returns a BaseViewHolder object that represents a loading view. If mLoadingView is null, it creates a new BaseViewHolder using the parent ViewGroup and a default loading layout. Otherwise, it creates a new BaseViewHolder using the existing mLoadingView.",True,"The code defines a private method called ""getLoadingView"" that takes a ViewGroup as a parameter. It checks if a loading view is already created, and if not, it creates a new one using a layout resource. It then returns a BaseViewHolder object representing the loading view."
80,onViewAttachedToWindow(RecyclerView.ViewHolder),on view attached to window holder called when a view created by this adapter has been attached to a window simple to solve item will layout using all link set full span recycler view view holder param holder ,Method,,,com.chad.library.adapter.base.BaseQuickAdapter+setFullSpan(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+setFullSpan(ViewHolder),com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+HEADER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+LOADING_VIEW,554,15,1,"/** 
 * Called when a view created by this adapter has been attached to a window. simple to solve item will layout using all {@link #setFullSpan(RecyclerView.ViewHolder)}
 * @param holder
 */
","/**
     * Called when a view created by this adapter has been attached to a window.
     * simple to solve item will layout using all
     * {@link #setFullSpan(RecyclerView.ViewHolder)}
     *
     * @param holder
     */
    @Override
    public void onViewAttachedToWindow(RecyclerView.ViewHolder holder) {
        super.onViewAttachedToWindow(holder);
        int type = holder.getItemViewType();
        if (type == EMPTY_VIEW || type == HEADER_VIEW || type == FOOTER_VIEW || type == LOADING_VIEW) {
            setFullSpan(holder);
        }
    }",False,False,"The function of this method is to determine if a view created by the adapter has been attached to a window, and if so, it checks the type of the view and sets its layout to use all available space if it is an empty, header, footer, or loading view.",True,"This code is a method that is called when a view created by an adapter is attached to a window. It checks the type of the view and if it is an empty, header, footer, or loading view, it sets the view to occupy the full span of the RecyclerView."
81,setFullSpan(RecyclerView.ViewHolder),set full span holder when set to true the item will layout using all span area that means if orientation is vertical the view will have full width if orientation is horizontal the view will have full height if the hold view use staggered grid layout manager they should using all span area param holder true if this item should traverse all spans ,Method,,,,,742,14,4,"/** 
 * When set to true, the item will layout using all span area. That means, if orientation is vertical, the view will have full width; if orientation is horizontal, the view will have full height. if the hold view use StaggeredGridLayoutManager they should using all span area
 * @param holder True if this item should traverse all spans.
 */
","/**
     * When set to true, the item will layout using all span area. That means, if orientation
     * is vertical, the view will have full width; if orientation is horizontal, the view will
     * have full height.
     * if the hold view use StaggeredGridLayoutManager they should using all span area
     *
     * @param holder True if this item should traverse all spans.
     */
    protected void setFullSpan(RecyclerView.ViewHolder holder) {
        if (holder.itemView.getLayoutParams() instanceof StaggeredGridLayoutManager.LayoutParams) {
            StaggeredGridLayoutManager.LayoutParams params = (StaggeredGridLayoutManager.LayoutParams) holder.itemView.getLayoutParams();
            params.setFullSpan(true);
        }
    }",False,False,"This method sets the ""full span"" property of a RecyclerView item. If the item's layout manager is a StaggeredGridLayoutManager, the item will occupy all available spans in the layout.",False,"This code defines a method called ""setFullSpan"" that takes a RecyclerView.ViewHolder as a parameter. It checks if the ViewHolder's item view has a layout parameter of type StaggeredGridLayoutManager.LayoutParams, and if so, it sets the ""full span"" property to true, which means the item will occupy all available span area in the layout."
82,onAttachedToRecyclerView(RecyclerView),on attached to recycler view recycler view ,Method,,,+getSpanSize(int),,768,15,1,,"@Override
    public void onAttachedToRecyclerView(RecyclerView recyclerView) {
        super.onAttachedToRecyclerView(recyclerView);
        RecyclerView.LayoutManager manager = recyclerView.getLayoutManager();
        if (manager instanceof GridLayoutManager) {
            final GridLayoutManager gridManager = ((GridLayoutManager) manager);
            gridManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {
                @Override
                public int getSpanSize(int position) {
                    int type = getItemViewType(position);
                    return (type == EMPTY_VIEW || type == HEADER_VIEW || type == FOOTER_VIEW || type == LOADING_VIEW) ? gridManager.getSpanCount() : 1;
                }
            });
        }
    }",False,False,This method is used to set the span size lookup for a GridLayoutManager in a RecyclerView. It determines the number of spans a particular item should occupy based on its position and view type.,True,"This code is an implementation of the `onAttachedToRecyclerView` method in a RecyclerView adapter. It checks if the RecyclerView's layout manager is a GridLayoutManager and if so, sets a SpanSizeLookup to determine the span size of each item in the grid based on its view type."
83,"onBindViewHolder(RecyclerView.ViewHolder,int)",on bind view holder holder positions to bind different types of holder and solve different the bind events param holder param positions see get def item view type int ,Method,,,"com.chad.library.adapter.base.BaseQuickAdapter+convert(BaseViewHolder,T) com.chad.library.adapter.base.BaseQuickAdapter+convert(BaseViewHolder,T) java.util.List+get(int) java.util.List+get(int) com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+addAnimation(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+addAnimation(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+addLoadMore(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+addLoadMore(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+convert(BaseViewHolder,T) com.chad.library.adapter.base.BaseQuickAdapter+convert(BaseViewHolder,T) java.util.List+get(int) java.util.List+get(int) com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+onBindDefViewHolder(BaseViewHolder,T) com.chad.library.adapter.base.BaseQuickAdapter+onBindDefViewHolder(BaseViewHolder,T) java.util.List+get(int) java.util.List+get(int) com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseViewHolder+getView(int) com.chad.library.adapter.base.BaseViewHolder+getView(int)",com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+LOADING_VIEW com.chad.library.adapter.base.BaseQuickAdapter+HEADER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mItemTouchHelper com.chad.library.adapter.base.BaseQuickAdapter+itemDragEnabled com.chad.library.adapter.base.BaseQuickAdapter+LOADING_VIEW com.chad.library.adapter.base.BaseQuickAdapter+HEADER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+EMPTY_VIEW com.chad.library.adapter.base.BaseQuickAdapter+FOOTER_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mToggleViewId com.chad.library.adapter.base.BaseQuickAdapter+NO_TOGGLE_VIEW com.chad.library.adapter.base.BaseQuickAdapter+mToggleViewId com.chad.library.adapter.base.BaseQuickAdapter+mDragOnLongPress com.chad.library.adapter.base.BaseQuickAdapter+mOnToggleViewLongClickListener com.chad.library.adapter.base.BaseQuickAdapter+mOnToggleViewTouchListener com.chad.library.adapter.base.BaseQuickAdapter+mOnToggleViewLongClickListener,2058,49,1,"/** 
 * To bind different types of holder and solve different the bind events
 * @param holder
 * @param positions
 * @see #getDefItemViewType(int)
 */
","/**
     * To bind different types of holder and solve different the bind events
     *
     * @param holder
     * @param positions
     * @see #getDefItemViewType(int)
     */
    @Override
    public void onBindViewHolder(final RecyclerView.ViewHolder holder, int positions) {
        int viewType = holder.getItemViewType();

        switch (viewType) {
            case 0:
                convert((BaseViewHolder) holder, mData.get(holder.getLayoutPosition() - getHeaderViewsCount()));
                addAnimation(holder);
                break;
            case LOADING_VIEW:
                addLoadMore(holder);
                break;
            case HEADER_VIEW:
                break;
            case EMPTY_VIEW:
                break;
            case FOOTER_VIEW:
                break;
            default:
                convert((BaseViewHolder) holder, mData.get(holder.getLayoutPosition() - getHeaderViewsCount()));
                onBindDefViewHolder((BaseViewHolder) holder, mData.get(holder.getLayoutPosition() - getHeaderViewsCount()));
                break;
        }

        if (mItemTouchHelper != null && itemDragEnabled && viewType != LOADING_VIEW && viewType != HEADER_VIEW
                && viewType != EMPTY_VIEW && viewType != FOOTER_VIEW) {
            if (mToggleViewId != NO_TOGGLE_VIEW) {
                View toggleView = ((BaseViewHolder) holder).getView(mToggleViewId);
                if (toggleView != null) {
                    toggleView.setTag(R.id.BaseQuickAdapter_viewholder_support, holder);
                    if (mDragOnLongPress) {
                        toggleView.setOnLongClickListener(mOnToggleViewLongClickListener);
                    } else {
                        toggleView.setOnTouchListener(mOnToggleViewTouchListener);
                    }
                }
            } else {
                holder.itemView.setTag(R.id.BaseQuickAdapter_viewholder_support, holder);
                holder.itemView.setOnLongClickListener(mOnToggleViewLongClickListener);
            }
        }
    }",False,False,"The function of this method is to bind different types of holders and handle different bind events in a RecyclerView. It determines the type of holder and performs specific actions based on the type, such as converting data, adding animations, or adding load more functionality. It also handles item touch events and sets listeners for toggle views.",True,"The `onBindViewHolder` method is responsible for binding different types of holders in a RecyclerView. It determines the type of holder and performs specific actions based on the type, such as adding animations, loading more data, or handling toggle views for item dragging."
84,"onCreateDefViewHolder(ViewGroup,int)",on create def view holder parent view type ,Method,"onCreateViewHolder(ViewGroup,int)",,"com.chad.library.adapter.base.BaseQuickAdapter+createBaseViewHolder(ViewGroup,int) com.chad.library.adapter.base.BaseQuickAdapter+createBaseViewHolder(ViewGroup,int)",com.chad.library.adapter.base.BaseQuickAdapter+mLayoutResId,145,3,4,,"protected BaseViewHolder onCreateDefViewHolder(ViewGroup parent, int viewType) {
        return createBaseViewHolder(parent, mLayoutResId);
    }",False,False,"The function of the method ""onCreateDefViewHolder"" is to create and return a BaseViewHolder object by calling the method ""createBaseViewHolder"" with the provided parent ViewGroup and viewType.",False,The code defines a protected method called `onCreateDefViewHolder` that takes a `ViewGroup` and an integer as parameters. It returns a `BaseViewHolder` object by calling another method `createBaseViewHolder` with the `parent` and `mLayoutResId` as arguments.
85,"createBaseViewHolder(ViewGroup,int)",create base view holder parent layout res id ,Method,"getLoadingView(ViewGroup) onCreateDefViewHolder(ViewGroup,int)","com.chad.library.adapter.base.BaseMultiItemQuickAdapter+onCreateDefViewHolder(ViewGroup,int)","com.chad.library.adapter.base.BaseViewHolder+BaseViewHolder(View) com.chad.library.adapter.base.BaseQuickAdapter+getItemView(int,ViewGroup) com.chad.library.adapter.base.BaseQuickAdapter+getItemView(int,ViewGroup) com.chad.library.adapter.base.BaseViewHolder+BaseViewHolder(View)",com.chad.library.adapter.base.BaseQuickAdapter+mContentView com.chad.library.adapter.base.BaseQuickAdapter+mContentView,256,6,4,,"protected BaseViewHolder createBaseViewHolder(ViewGroup parent, int layoutResId) {
        if (mContentView == null) {
            return new BaseViewHolder(getItemView(layoutResId, parent));
        }
        return new BaseViewHolder(mContentView);
    }",False,False,"This method creates a new instance of the BaseViewHolder class. It takes a ViewGroup and a layout resource ID as parameters. If mContentView is null, it creates a new BaseViewHolder using the getItemView method. Otherwise, it creates a new BaseViewHolder using mContentView.",False,"The method ""createBaseViewHolder"" is a protected method that returns a new instance of the ""BaseViewHolder"" class. It takes two parameters, a ViewGroup and a layout resource ID. If the ""mContentView"" variable is null, it creates a new ""BaseViewHolder"" using the layout resource ID and the parent ViewGroup. Otherwise, it creates a new ""BaseViewHolder"" using the existing ""mContentView""."
86,addHeaderView(View),add header view header easy to show a simple head view param header ,Method,,com.chad.baserecyclerviewadapterhelper.HeaderAndFooterUseActivity+onCreate(Bundle),,com.chad.library.adapter.base.BaseQuickAdapter<T>+mHeaderView com.chad.library.adapter.base.BaseQuickAdapter+mHeaderView,200,9,1,"/** 
 * easy to show a simple headView
 * @param header
 */
","/**
     * easy to show a simple headView
     *
     * @param header
     */
    public void addHeaderView(View header) {
        this.mHeaderView = header;
        this.notifyDataSetChanged();
    }",False,False,This method adds a header view to a list or grid view and updates the view to reflect the changes.,True,"The code defines a method called ""addHeaderView"" that takes a View object as a parameter. It sets the given view as the header view and notifies any attached observers of the data set change."
87,addFooterView(View),add footer view footer easy to show a simple footer view param footer ,Method,,com.chad.baserecyclerviewadapterhelper.HeaderAndFooterUseActivity+onCreate(Bundle) com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+run(),,com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable com.chad.library.adapter.base.BaseQuickAdapter<T>+mFooterView com.chad.library.adapter.base.BaseQuickAdapter+mFooterView,235,10,1,"/** 
 * easy to show a simple footerView
 * @param footer
 */
","/**
     * easy to show a simple footerView
     *
     * @param footer
     */
    public void addFooterView(View footer) {
        mNextLoadEnable = false;
        this.mFooterView = footer;
        this.notifyDataSetChanged();
    }",False,False,"This method is used to add a footer view to a list or grid view. It disables the next load feature, sets the footer view, and notifies the adapter of the data set change.",True,"The given code is a method called ""addFooterView"" that takes a View object as a parameter. It sets a boolean variable to false, assigns the given View object to a member variable, and then calls the notifyDataSetChanged() method. This method is used to add a footer view to a list or adapter."
88,setEmptyView(View),set empty view empty view sets the view to show if the adapter is empty ,Method,,com.chad.baserecyclerviewadapterhelper.EmptyViewUseActivity+initAdapter(),"com.chad.library.adapter.base.BaseQuickAdapter+setEmptyView(boolean,boolean,View) com.chad.library.adapter.base.BaseQuickAdapter+setEmptyView(boolean,boolean,View)",,164,6,1,"/** 
 * Sets the view to show if the adapter is empty
 */
","/**
     * Sets the view to show if the adapter is empty
     */
    public void setEmptyView(View emptyView) {
        setEmptyView(false, false, emptyView);
    }",False,False,The function of this method is to set a view to be shown if the adapter is empty.,True,"The method ""setEmptyView"" is used to set a view that will be displayed if the adapter is empty. It takes a parameter ""emptyView"" which is the view to be shown. This method is a simplified version of another overloaded method ""setEmptyView"" with additional parameters."
89,"setEmptyView(boolean,View)",set empty view is head and empty empty view param is head and empty false will not show head view if the data is empty true will show empty view and head view param empty view ,Method,,,"com.chad.library.adapter.base.BaseQuickAdapter+setEmptyView(boolean,boolean,View) com.chad.library.adapter.base.BaseQuickAdapter+setEmptyView(boolean,boolean,View)",,285,7,1,"/** 
 * @param isHeadAndEmpty false will not show headView if the data is empty true will show emptyView and headView
 * @param emptyView
 */
","/**
     * @param isHeadAndEmpty false will not show headView if the data is empty true will show emptyView and headView
     * @param emptyView
     */
    public void setEmptyView(boolean isHeadAndEmpty, View emptyView) {
        setEmptyView(isHeadAndEmpty, false, emptyView);
    }",False,False,"The function of this method is to set an empty view in a list or recycler view. The method takes two parameters: a boolean value to determine whether to show the head view if the data is empty, and a view to be displayed as the empty view.",True,"This code is a method that sets an empty view for a given condition. It takes a boolean parameter to determine whether to show a head view along with the empty view, and a View parameter for the empty view itself."
90,"setEmptyView(boolean,boolean,View)",set empty view is head and empty is foot and empty empty view set empty view show if adapter is empty and want to show headview and footview param is head and empty param is foot and empty param empty view ,Method,"setEmptyView(View) setEmptyView(boolean,View)",,,com.chad.library.adapter.base.BaseQuickAdapter+mHeadAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mFootAndEmptyEnable com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView com.chad.library.adapter.base.BaseQuickAdapter+mEmptyEnable,439,13,1,"/** 
 * set emptyView show if adapter is empty and want to show headview and footview
 * @param isHeadAndEmpty
 * @param isFootAndEmpty
 * @param emptyView
 */
","/**
     * set emptyView show if adapter is empty and want to show headview and footview
     *
     * @param isHeadAndEmpty
     * @param isFootAndEmpty
     * @param emptyView
     */
    public void setEmptyView(boolean isHeadAndEmpty, boolean isFootAndEmpty, View emptyView) {
        mHeadAndEmptyEnable = isHeadAndEmpty;
        mFootAndEmptyEnable = isFootAndEmpty;
        mEmptyView = emptyView;
        mEmptyEnable = true;
    }",False,False,This method sets the empty view to be shown if the adapter is empty and if the head view and foot view are also empty.,True,"This code defines a method called ""setEmptyView"" that allows the user to specify whether to show an empty view when the adapter is empty, and whether to show a head view and a foot view when the adapter is empty. The method also takes a view parameter for the empty view to be displayed."
91,getEmptyView(),get empty view when the current adapter is empty the base quick adapter can display a special view called the empty view the empty view is used to provide feedback to the user that no data is available in this adapter view return the view to show if the adapter is empty ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+mEmptyView,370,10,1,"/** 
 * When the current adapter is empty, the BaseQuickAdapter can display a special view called the empty view. The empty view is used to provide feedback to the user that no data is available in this AdapterView.
 * @return The view to show if the adapter is empty.
 */
","/**
     * When the current adapter is empty, the BaseQuickAdapter can display a special view
     * called the empty view. The empty view is used to provide feedback to the user
     * that no data is available in this AdapterView.
     *
     * @return The view to show if the adapter is empty.
     */
    public View getEmptyView() {
        return mEmptyView;
    }",False,False,"The method ""getEmptyView"" returns the view that is displayed when the adapter is empty, providing feedback to the user that no data is available in the AdapterView.",True,"This code defines a method called ""getEmptyView()"" which returns the empty view used by the BaseQuickAdapter when there is no data available in the adapter. The empty view is a special view that provides feedback to the user about the lack of data in the AdapterView."
92,isNextLoad(boolean),is next load is next load see more link public void notify data changed after load more boolean is next load param is next load ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable com.chad.library.adapter.base.BaseQuickAdapter+mLoadingMoreEnable,309,12,1,"/** 
 * see more  {@link  public void notifyDataChangedAfterLoadMore(boolean isNextLoad)}
 * @param isNextLoad
 */
","/**
     * see more {@link  public void notifyDataChangedAfterLoadMore(boolean isNextLoad)}
     *
     * @param isNextLoad
     */
    @Deprecated
    public void isNextLoad(boolean isNextLoad) {
        mNextLoadEnable = isNextLoad;
        mLoadingMoreEnable = false;
        notifyDataSetChanged();

    }",False,False,"This method is used to set the value of mNextLoadEnable and mLoadingMoreEnable to the provided boolean value, and then call notifyDataSetChanged().",True,This code is a deprecated method that sets a flag to enable or disable loading more data. It also disables the loading more feature and notifies the adapter to update the data.
93,notifyDataChangedAfterLoadMore(boolean),notify data changed after load more is next load param is next load trueif true when loading more data can show loading view ,Method,"notifyDataChangedAfterLoadMore(List<T>,boolean)",com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+run(),,com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable com.chad.library.adapter.base.BaseQuickAdapter+mLoadingMoreEnable,300,10,1,"/** 
 * @param isNextLoad trueif true when loading more data can show loadingView
 */
","/**
     * @param isNextLoad true
     *                   if true when loading more data can show loadingView
     */
    public void notifyDataChangedAfterLoadMore(boolean isNextLoad) {
        mNextLoadEnable = isNextLoad;
        mLoadingMoreEnable = false;
        notifyDataSetChanged();

    }",False,False,"This method is used to notify that the data has changed after loading more data. It takes a boolean parameter ""isNextLoad"" to determine if the loading view should be shown when loading more data. It updates the relevant variables and calls notifyDataSetChanged().",True,This method is used to notify the adapter that the data has changed after loading more data. It takes a boolean parameter to determine if the loading view should be shown. The method updates the state variables accordingly and calls notifyDataSetChanged() to update the adapter.
94,"notifyDataChangedAfterLoadMore(List<T>,boolean)",notify data changed after load more data is next load add more data param data param is next load ,Method,,com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+run(),java.util.List+addAll(Collection) java.util.List+addAll(Collection) com.chad.library.adapter.base.BaseQuickAdapter+notifyDataChangedAfterLoadMore(boolean) com.chad.library.adapter.base.BaseQuickAdapter+notifyDataChangedAfterLoadMore(boolean),com.chad.library.adapter.base.BaseQuickAdapter+mData,253,11,1,"/** 
 * add more data
 * @param data
 * @param isNextLoad
 */
","/**
     * add more data
     *
     * @param data
     * @param isNextLoad
     */
    public void notifyDataChangedAfterLoadMore(List<T> data, boolean isNextLoad) {
        mData.addAll(data);
        notifyDataChangedAfterLoadMore(isNextLoad);

    }",False,False,This method adds more data to the existing data list and notifies that the data has changed after loading more.,True,This method adds more data to the existing data list and notifies the adapter that the data has changed. It takes a list of data and a boolean flag indicating whether there is more data to load.
95,addLoadMore(RecyclerView.ViewHolder),add load more holder ,Method,,,com.chad.library.adapter.base.BaseQuickAdapter+isLoadMore() com.chad.library.adapter.base.BaseQuickAdapter+isLoadMore() com.chad.library.adapter.base.BaseQuickAdapter.RequestLoadMoreListener+onLoadMoreRequested() com.chad.library.adapter.base.BaseQuickAdapter.RequestLoadMoreListener+onLoadMoreRequested(),com.chad.library.adapter.base.BaseQuickAdapter+mLoadingMoreEnable com.chad.library.adapter.base.BaseQuickAdapter+mLoadingMoreEnable com.chad.library.adapter.base.BaseQuickAdapter+mRequestLoadMoreListener,224,6,2,,"private void addLoadMore(RecyclerView.ViewHolder holder) {
        if (isLoadMore() && !mLoadingMoreEnable) {
            mLoadingMoreEnable = true;
            mRequestLoadMoreListener.onLoadMoreRequested();
        }
    }",False,False,"This method is used to add a ""load more"" functionality to a RecyclerView. It checks if the ""load more"" feature is enabled and if it is not already loading more data, then it triggers the onLoadMoreRequested() method.",True,"The `addLoadMore` method checks if the load more feature is enabled and not currently loading, then sets the loading flag to true and calls the `onLoadMoreRequested` method from the listener. This method is typically used to trigger a load more action in a RecyclerView when the user reaches the end of the list."
96,initItemClickListener(BaseViewHolder),init item click listener base view holder init the base view holder to register on recycler view item click listener and on recycler view item long click listener param base view holder ,Method,"onCreateViewHolder(ViewGroup,int)",,+onClick(View),com.chad.library.adapter.base.BaseQuickAdapter+onRecyclerViewItemClickListener,1046,23,2,"/** 
 * init the baseViewHolder to register onRecyclerViewItemClickListener and onRecyclerViewItemLongClickListener
 * @param baseViewHolder
 */
","/**
     * init the baseViewHolder to register onRecyclerViewItemClickListener and onRecyclerViewItemLongClickListener
     *
     * @param baseViewHolder
     */
    private void initItemClickListener(final BaseViewHolder baseViewHolder) {
        if (onRecyclerViewItemClickListener != null) {
            baseViewHolder.itemView.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    onRecyclerViewItemClickListener.onItemClick(v, baseViewHolder.getLayoutPosition() - getHeaderViewsCount());
                }
            });
        }
        if (onRecyclerViewItemLongClickListener != null) {
            baseViewHolder.itemView.setOnLongClickListener(new View.OnLongClickListener() {
                @Override
                public boolean onLongClick(View v) {
                    return onRecyclerViewItemLongClickListener.onItemLongClick(v, baseViewHolder.getLayoutPosition() - getHeaderViewsCount());
                }
            });
        }
    }",False,False,The function of this method is to initialize the baseViewHolder by registering the onRecyclerViewItemClickListener and onRecyclerViewItemLongClickListener.,True,"This code initializes a baseViewHolder by registering an onClickListener and an onLongClickListener. The onClickListener calls the onItemClick method of the onRecyclerViewItemClickListener, passing the clicked view and the position of the item. The onLongClickListener calls the onItemLongClick method of the onRecyclerViewItemLongClickListener, passing the clicked view and the position of the item, and returns a boolean value."
97,addAnimation(RecyclerView.ViewHolder),add animation holder add animation when you want to show time param holder ,Method,,,"com.chad.library.adapter.base.animation.BaseAnimation+getAnimators(View) com.chad.library.adapter.base.animation.BaseAnimation+getAnimators(View) com.chad.library.adapter.base.BaseQuickAdapter+startAnim(Animator,int) com.chad.library.adapter.base.BaseQuickAdapter+startAnim(Animator,int)",com.chad.library.adapter.base.BaseQuickAdapter+mOpenAnimationEnable com.chad.library.adapter.base.BaseQuickAdapter+mFirstOnlyEnable com.chad.library.adapter.base.BaseQuickAdapter+mLastPosition com.chad.library.adapter.base.BaseQuickAdapter+mCustomAnimation com.chad.library.adapter.base.BaseQuickAdapter+mCustomAnimation com.chad.library.adapter.base.BaseQuickAdapter+mSelectAnimation com.chad.library.adapter.base.BaseQuickAdapter+mLastPosition,762,21,2,"/** 
 * add animation when you want to show time
 * @param holder
 */
","/**
     * add animation when you want to show time
     *
     * @param holder
     */
    private void addAnimation(RecyclerView.ViewHolder holder) {
        if (mOpenAnimationEnable) {
            if (!mFirstOnlyEnable || holder.getLayoutPosition() > mLastPosition) {
                BaseAnimation animation = null;
                if (mCustomAnimation != null) {
                    animation = mCustomAnimation;
                } else {
                    animation = mSelectAnimation;
                }
                for (Animator anim : animation.getAnimators(holder.itemView)) {
                    startAnim(anim, holder.getLayoutPosition());
                }
                mLastPosition = holder.getLayoutPosition();
            }
        }
    }",False,False,"The function of this method is to add animation to a RecyclerView.ViewHolder when showing time. It checks if animation is enabled, if it should only be applied once, and if the current position is greater than the last position. It then retrieves the appropriate animation and starts it on the ViewHolder's item view. Finally, it updates the last position.",True,This code adds animation to a RecyclerView.ViewHolder when showing time. It checks if animation is enabled and if it should only be applied once. It then retrieves the appropriate animation and starts it on the ViewHolder's itemView.
98,"startAnim(Animator,int)",start anim anim index set anim to start when loading param anim param index ,Method,addAnimation(RecyclerView.ViewHolder),,,com.chad.library.adapter.base.BaseQuickAdapter+mDuration com.chad.library.adapter.base.BaseQuickAdapter+mInterpolator,248,10,4,"/** 
 * set anim to start when loading
 * @param anim
 * @param index
 */
","/**
     * set anim to start when loading
     *
     * @param anim
     * @param index
     */
    protected void startAnim(Animator anim, int index) {
        anim.setDuration(mDuration).start();
        anim.setInterpolator(mInterpolator);
    }",False,False,This method starts an animation with a specified duration and interpolator. It takes an Animator object and an index as parameters.,True,"The ""startAnim"" method takes an Animator object and an index as parameters. It sets the duration of the animation to a specified value and starts the animation. It also sets the interpolator for the animation."
99,isLoadMore(),is load more determine whether it is loaded more return ,Method,getItemCount() addLoadMore(RecyclerView.ViewHolder),,java.util.List+size() java.util.List+size(),com.chad.library.adapter.base.BaseQuickAdapter+mNextLoadEnable com.chad.library.adapter.base.BaseQuickAdapter+pageSize com.chad.library.adapter.base.BaseQuickAdapter+mRequestLoadMoreListener com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+pageSize,231,8,2,"/** 
 * Determine whether it is loaded more
 * @return
 */
","/**
     * Determine whether it is loaded more
     *
     * @return
     */
    private boolean isLoadMore() {
        return mNextLoadEnable && pageSize != -1 && mRequestLoadMoreListener != null && mData.size() >= pageSize;
    }",False,False,"The function of this method is to determine whether it should load more data. It checks if the next load is enabled, if the page size is not -1, if there is a load more listener, and if the data size is greater than or equal to the page size.",True,"This code defines a private method called ""isLoadMore()"" that returns a boolean value. It checks if certain conditions are met, such as the next load being enabled, the page size not being -1, a load more listener being set, and the data size being greater than or equal to the page size. If all conditions are met, it returns true, indicating that more data can be loaded."
100,"getItemView(int,ViewGroup)",get item view layout res id parent param layout res id id for an xml layout resource to load param parent optional view to be the parent of the generated hierarchy or else simply an object thatprovides a set of layout params values for root of the returned hierarchy return view will be return ,Method,,"com.chad.baserecyclerviewadapterhelper.adapter.MultipleItemAdapter+onCreateDefViewHolder(ViewGroup,int) com.chad.library.adapter.base.BaseSectionQuickAdapter+onCreateDefViewHolder(ViewGroup,int)",,com.chad.library.adapter.base.BaseQuickAdapter+mLayoutInflater,491,10,4,"/** 
 * @param layoutResId ID for an XML layout resource to load
 * @param parent      Optional view to be the parent of the generated hierarchy or else simply an object thatprovides a set of LayoutParams values for root of the returned hierarchy
 * @return view will be return
 */
","/**
     * @param layoutResId ID for an XML layout resource to load
     * @param parent      Optional view to be the parent of the generated hierarchy or else simply an object that
     *                    provides a set of LayoutParams values for root of the returned
     *                    hierarchy
     * @return view will be return
     */
    protected View getItemView(int layoutResId, ViewGroup parent) {
        return mLayoutInflater.inflate(layoutResId, parent, false);
    }",False,False,This method is used to inflate an XML layout resource and return the corresponding view. It takes the layout resource ID and an optional parent view as parameters.,False,The `getItemView` method takes an XML layout resource ID and a parent view group as parameters. It then inflates the layout resource and returns the resulting view.
101,"onBindDefViewHolder(BaseViewHolder,T)",on bind def view holder holder item see convert base view holder object deprecated this method is deprecated link convert base view holder object depending on your use case ,Method,"onBindViewHolder(RecyclerView.ViewHolder,int)",,,,274,8,4,"/** 
 * @see #convert(BaseViewHolder,Object) ()
 * @deprecated This method is deprecated{@link #convert(BaseViewHolder,Object)} depending on your use case.
 */
","/**
     * @see #convert(BaseViewHolder, Object) ()
     * @deprecated This method is deprecated
     * {@link #convert(BaseViewHolder, Object)} depending on your use case.
     */
    @Deprecated
    protected void onBindDefViewHolder(BaseViewHolder holder, T item) {
    }",False,False,"The method ""onBindDefViewHolder"" is a deprecated method that serves as a placeholder for binding data to a default view holder. It is recommended to use the ""convert"" method instead, depending on the use case.",True,"The code contains a deprecated method called ""onBindDefViewHolder"" which takes a BaseViewHolder and an object as parameters. The method is no longer recommended for use and suggests using the ""convert"" method instead."
102,RequestLoadMoreListener,request load more listener ,MemberClass,,,com.chad.library.adapter.base.BaseQuickAdapter.RequestLoadMoreListener+onLoadMoreRequested(),,85,4,1,,"public interface RequestLoadMoreListener {

        void onLoadMoreRequested();
    }",False,False,,False,
103,openLoadAnimation(int),open load animation animation type set the view animation type param animation type one of link alphain link scalein link slidein bottom link slidein left link slidein right ,Method,,,com.chad.library.adapter.base.animation.AlphaInAnimation+AlphaInAnimation() com.chad.library.adapter.base.animation.ScaleInAnimation+ScaleInAnimation() com.chad.library.adapter.base.animation.SlideInBottomAnimation+SlideInBottomAnimation() com.chad.library.adapter.base.animation.SlideInLeftAnimation+SlideInLeftAnimation() com.chad.library.adapter.base.animation.SlideInRightAnimation+SlideInRightAnimation(),com.chad.library.adapter.base.BaseQuickAdapter<T>+mOpenAnimationEnable com.chad.library.adapter.base.BaseQuickAdapter+mOpenAnimationEnable com.chad.library.adapter.base.BaseQuickAdapter+mCustomAnimation com.chad.library.adapter.base.BaseQuickAdapter+ALPHAIN com.chad.library.adapter.base.BaseQuickAdapter+mSelectAnimation com.chad.library.adapter.base.BaseQuickAdapter+SCALEIN com.chad.library.adapter.base.BaseQuickAdapter+mSelectAnimation com.chad.library.adapter.base.BaseQuickAdapter+SLIDEIN_BOTTOM com.chad.library.adapter.base.BaseQuickAdapter+mSelectAnimation com.chad.library.adapter.base.BaseQuickAdapter+SLIDEIN_LEFT com.chad.library.adapter.base.BaseQuickAdapter+mSelectAnimation com.chad.library.adapter.base.BaseQuickAdapter+SLIDEIN_RIGHT com.chad.library.adapter.base.BaseQuickAdapter+mSelectAnimation,1008,28,1,"/** 
 * Set the view animation type.
 * @param animationType One of {@link #ALPHAIN},  {@link #SCALEIN},  {@link #SLIDEIN_BOTTOM},  {@link #SLIDEIN_LEFT},  {@link #SLIDEIN_RIGHT}.
 */
","/**
     * Set the view animation type.
     *
     * @param animationType One of {@link #ALPHAIN}, {@link #SCALEIN}, {@link #SLIDEIN_BOTTOM}, {@link #SLIDEIN_LEFT}, {@link #SLIDEIN_RIGHT}.
     */
    public void openLoadAnimation(@AnimationType int animationType) {
        this.mOpenAnimationEnable = true;
        mCustomAnimation = null;
        switch (animationType) {
            case ALPHAIN:
                mSelectAnimation = new AlphaInAnimation();
                break;
            case SCALEIN:
                mSelectAnimation = new ScaleInAnimation();
                break;
            case SLIDEIN_BOTTOM:
                mSelectAnimation = new SlideInBottomAnimation();
                break;
            case SLIDEIN_LEFT:
                mSelectAnimation = new SlideInLeftAnimation();
                break;
            case SLIDEIN_RIGHT:
                mSelectAnimation = new SlideInRightAnimation();
                break;
            default:
                break;
        }
    }",False,False,"This method sets the view animation type for a specific view. The animation type can be one of the predefined types: ALPHAIN, SCALEIN, SLIDEIN_BOTTOM, SLIDEIN_LEFT, or SLIDEIN_RIGHT.",False,"This code defines a method called `openLoadAnimation` that sets the animation type for a view. The animation type can be one of several options, such as alpha in, scale in, slide in from bottom, left, or right. The method assigns the appropriate animation object based on the selected animation type."
104,openLoadAnimation(BaseAnimation),open load animation animation set custom object animator param animation object animator ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter<T>+mOpenAnimationEnable com.chad.library.adapter.base.BaseQuickAdapter+mOpenAnimationEnable com.chad.library.adapter.base.BaseQuickAdapter<T>+mCustomAnimation com.chad.library.adapter.base.BaseQuickAdapter+mCustomAnimation,242,9,1,"/** 
 * Set Custom ObjectAnimator
 * @param animation ObjectAnimator
 */
","/**
     * Set Custom ObjectAnimator
     *
     * @param animation ObjectAnimator
     */
    public void openLoadAnimation(BaseAnimation animation) {
        this.mOpenAnimationEnable = true;
        this.mCustomAnimation = animation;
    }",False,False,This method sets a custom ObjectAnimator for opening load animation. It enables the animation and assigns the provided ObjectAnimator to the mCustomAnimation variable.,False,"This code defines a method called ""openLoadAnimation"" that takes an ObjectAnimator as a parameter. It sets a boolean flag to enable a custom animation and assigns the provided animation to a member variable."
105,openLoadAnimation(),open load animation to open the animation when loading ,Method,,com.chad.baserecyclerviewadapterhelper.AnimationUseActivity+initAdapter() com.chad.baserecyclerviewadapterhelper.HeaderAndFooterUseActivity+initAdapter() com.chad.baserecyclerviewadapterhelper.HomeActivity+onCreate(Bundle) com.chad.baserecyclerviewadapterhelper.PullToRefreshUseActivity+initAdapter(),,com.chad.library.adapter.base.BaseQuickAdapter<T>+mOpenAnimationEnable com.chad.library.adapter.base.BaseQuickAdapter+mOpenAnimationEnable,139,6,1,"/** 
 * To open the animation when loading
 */
","/**
     * To open the animation when loading
     */
    public void openLoadAnimation() {
        this.mOpenAnimationEnable = true;
    }",False,False,This method serves to enable the open animation when loading.,False,"The given code defines a method called ""openLoadAnimation()"" which enables the animation when loading. It sets a boolean variable ""mOpenAnimationEnable"" to true, indicating that the animation should be enabled."
106,isFirstOnly(boolean),is first only first only link add animation recycler view view holder param first only true just show anim when first loading false show anim when load the data every time ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter<T>+mFirstOnlyEnable com.chad.library.adapter.base.BaseQuickAdapter+mFirstOnlyEnable,279,8,1,"/** 
 * {@link #addAnimation(RecyclerView.ViewHolder)}
 * @param firstOnly true just show anim when first loading false show anim when load the data every time
 */
","/**
     * {@link #addAnimation(RecyclerView.ViewHolder)}
     *
     * @param firstOnly true just show anim when first loading false show anim when load the data every time
     */
    public void isFirstOnly(boolean firstOnly) {
        this.mFirstOnlyEnable = firstOnly;
    }",False,False,This method sets a boolean value to determine whether to show animation only when first loading or every time the data is loaded.,False,The code defines a method called `isFirstOnly` which takes a boolean parameter `firstOnly`. This method is used to control whether animations should be shown only when the data is first loaded or every time the data is loaded. The method updates the value of a boolean variable `mFirstOnlyEnable` accordingly.
107,"convert(BaseViewHolder,T)",convert helper item implement this method and use the helper to adapt the view to the given item param helper a fully initialized helper param item the item that needs to be displayed ,Method,"onBindViewHolder(RecyclerView.ViewHolder,int) onBindViewHolder(RecyclerView.ViewHolder,int)",,,,278,7,1028,"/** 
 * Implement this method and use the helper to adapt the view to the given item.
 * @param helper A fully initialized helper.
 * @param item   The item that needs to be displayed.
 */
","/**
     * Implement this method and use the helper to adapt the view to the given item.
     *
     * @param helper A fully initialized helper.
     * @param item   The item that needs to be displayed.
     */
    protected abstract void convert(BaseViewHolder helper, T item);",False,False,"The method ""convert"" is an abstract method that takes in a BaseViewHolder object and an item of type T. It is used to adapt the view to the given item.",True,"The code contains an abstract method called ""convert"" that takes a helper object and an item as parameters. This method is meant to be implemented by subclasses and is used to adapt the view to the given item."
108,getItemId(int),get item id position get the row id associated with the specified position in the list param position the position of the item within the adapter s data set whose row id we want return the id of the item at the specified position ,Method,,,,,340,10,1,"/** 
 * Get the row id associated with the specified position in the list.
 * @param position The position of the item within the adapter's data set whose row id we want.
 * @return The id of the item at the specified position.
 */
","/**
     * Get the row id associated with the specified position in the list.
     *
     * @param position The position of the item within the adapter's data set whose row id we want.
     * @return The id of the item at the specified position.
     */
    @Override
    public long getItemId(int position) {
        return position;
    }",False,False,This method returns the id of the item at the specified position in the list.,False,This code is a method that returns the id of an item at a specified position in a list. It takes the position as a parameter and returns the position itself as the id.
109,setToggleViewId(int),set toggle view id toggle view id set the toggle view s id which will trigger drag event if the toggle view id is not set drag event will be triggered when the item is long pressed param toggle view id the toggle view s id ,Method,"enableDragItem(ItemTouchHelper,int,boolean)",,,com.chad.library.adapter.base.BaseQuickAdapter+mToggleViewId,326,9,1,"/** 
 * Set the toggle view's id which will trigger drag event. If the toggle view id is not set, drag event will be triggered when the item is long pressed.
 * @param toggleViewId the toggle view's id
 */
","/**
     * Set the toggle view's id which will trigger drag event.
     * If the toggle view id is not set, drag event will be triggered when the item is long pressed.
     *
     * @param toggleViewId the toggle view's id
     */
    public void setToggleViewId(int toggleViewId) {
        mToggleViewId = toggleViewId;
    }",True,True,"This method sets the id of the toggle view that will trigger a drag event. If the toggle view id is not set, the drag event will be triggered when the item is long pressed.",True,"This method sets the id of the toggle view that will trigger a drag event. If the toggle view id is not set, the drag event will be triggered when the item is long pressed."
110,setToggleDragOnLongPress(boolean),set toggle drag on long press long press set the drag event should be trigger on long press work when the toggle view id has been set param long press by default is true ,Method,"enableDragItem(ItemTouchHelper,int,boolean)",,+onLongClick(View),com.chad.library.adapter.base.BaseQuickAdapter+mDragOnLongPress com.chad.library.adapter.base.BaseQuickAdapter+mDragOnLongPress com.chad.library.adapter.base.BaseQuickAdapter+mOnToggleViewTouchListener com.chad.library.adapter.base.BaseQuickAdapter+mOnToggleViewLongClickListener,1580,37,1,"/** 
 * Set the drag event should be trigger on long press. Work when the toggleViewId has been set.
 * @param longPress by default is true.
 */
","/**
     * Set the drag event should be trigger on long press.
     * Work when the toggleViewId has been set.
     *
     * @param longPress by default is true.
     */
    public void setToggleDragOnLongPress(boolean longPress) {
        mDragOnLongPress = longPress;
        if (mDragOnLongPress) {
            mOnToggleViewTouchListener = null;
            mOnToggleViewLongClickListener = new View.OnLongClickListener() {
                @Override
                public boolean onLongClick(View v) {
                    if (mItemTouchHelper != null && itemDragEnabled) {
                        mItemTouchHelper.startDrag((RecyclerView.ViewHolder) v.getTag(R.id.BaseQuickAdapter_viewholder_support));
                    }
                    return true;
                }
            };
        } else {
            mOnToggleViewTouchListener = new View.OnTouchListener() {
                @Override
                public boolean onTouch(View v, MotionEvent event) {
                    if (MotionEventCompat.getActionMasked(event) == MotionEvent.ACTION_DOWN
                            && !mDragOnLongPress) {
                        if (mItemTouchHelper != null && itemDragEnabled) {
                            mItemTouchHelper.startDrag((RecyclerView.ViewHolder) v.getTag(R.id.BaseQuickAdapter_viewholder_support));
                        }
                        return true;
                    } else {
                        return false;
                    }
                }
            };
            mOnToggleViewLongClickListener = null;
        }
    }",True,True,"This method sets whether the drag event should be triggered on long press. If the toggleViewId has been set, it works accordingly.",True,"This code defines a method called `setToggleDragOnLongPress` which sets whether a drag event should be triggered on a long press. If `longPress` is true, a long click listener is set to start dragging the view when long pressed. If `longPress` is false, a touch listener is set to start dragging the view when touched, but only if the long press is not enabled."
111,enableDragItem(ItemTouchHelper),enable drag item item touch helper enable drag items use item view as the toggle view when long pressed param item touch helper link item touch helper ,Method,,,"com.chad.library.adapter.base.BaseQuickAdapter+enableDragItem(ItemTouchHelper,int,boolean) com.chad.library.adapter.base.BaseQuickAdapter+enableDragItem(ItemTouchHelper,int,boolean)",com.chad.library.adapter.base.BaseQuickAdapter+NO_TOGGLE_VIEW,299,9,1,"/** 
 * Enable drag items. Use itemView as the toggleView when long pressed.
 * @param itemTouchHelper {@link ItemTouchHelper}
 */
","/**
     * Enable drag items.
     * Use itemView as the toggleView when long pressed.
     *
     * @param itemTouchHelper {@link ItemTouchHelper}
     */
    public void enableDragItem(@NonNull ItemTouchHelper itemTouchHelper) {
        enableDragItem(itemTouchHelper, NO_TOGGLE_VIEW, true);
    }",True,True,This method enables drag functionality for items. It uses the provided ItemTouchHelper to handle the drag events. The itemView is used as the toggleView when a long press occurs.,True,The `enableDragItem` method enables the dragging functionality for items in a list. It takes an `ItemTouchHelper` object as a parameter and uses the default toggle view when long pressed. The method also sets the dragging to be enabled by default.
112,"enableDragItem(ItemTouchHelper,int,boolean)",enable drag item item touch helper toggle view id drag on long press enable drag items use the specified view as toggle param item touch helper link item touch helper param toggle view id the toggle view s id param drag on long press if true the drag event will be trigger on long press otherwise on touch down ,Method,enableDragItem(ItemTouchHelper),,com.chad.library.adapter.base.BaseQuickAdapter+setToggleViewId(int) com.chad.library.adapter.base.BaseQuickAdapter+setToggleViewId(int) com.chad.library.adapter.base.BaseQuickAdapter+setToggleDragOnLongPress(boolean) com.chad.library.adapter.base.BaseQuickAdapter+setToggleDragOnLongPress(boolean),com.chad.library.adapter.base.BaseQuickAdapter+itemDragEnabled com.chad.library.adapter.base.BaseQuickAdapter+mItemTouchHelper,583,13,1,"/** 
 * Enable drag items. Use the specified view as toggle.
 * @param itemTouchHelper {@link ItemTouchHelper}
 * @param toggleViewId    The toggle view's id.
 * @param dragOnLongPress If true the drag event will be trigger on long press, otherwise on touch down.
 */
","/**
     * Enable drag items. Use the specified view as toggle.
     *
     * @param itemTouchHelper {@link ItemTouchHelper}
     * @param toggleViewId    The toggle view's id.
     * @param dragOnLongPress If true the drag event will be trigger on long press, otherwise on touch down.
     */
    public void enableDragItem(@NonNull ItemTouchHelper itemTouchHelper, int toggleViewId, boolean dragOnLongPress) {
        itemDragEnabled = true;
        mItemTouchHelper = itemTouchHelper;
        setToggleViewId(toggleViewId);
        setToggleDragOnLongPress(dragOnLongPress);
    }",True,True,"This method enables drag functionality for items. It takes an ItemTouchHelper object, a toggle view's id, and a boolean indicating whether the drag event should be triggered on long press or touch down.",True,"This method enables the dragging of items by setting the necessary parameters. It takes an ItemTouchHelper object, a toggle view ID, and a boolean value to determine whether the drag event should be triggered on long press or touch down."
113,disableDragItem(),disable drag item disable drag items ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+itemDragEnabled com.chad.library.adapter.base.BaseQuickAdapter+mItemTouchHelper,146,7,1,"/** 
 * Disable drag items.
 */
","/**
     * Disable drag items.
     */
    public void disableDragItem() {
        itemDragEnabled = false;
        mItemTouchHelper = null;
    }",True,True,"This method disables the ability to drag items by setting the ""itemDragEnabled"" variable to false and setting the ""mItemTouchHelper"" variable to null.",True,"The code defines a method called ""disableDragItem"" which sets a boolean variable ""itemDragEnabled"" to false and sets a reference variable ""mItemTouchHelper"" to null. This method is used to disable the dragging functionality of items."
114,isItemDraggable(),is item draggable ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+itemDragEnabled,72,3,1,,"public boolean isItemDraggable() {
        return itemDragEnabled;
    }",True,True,"The method ""isItemDraggable"" returns a boolean value indicating whether the item is draggable or not.",True,"The code defines a method named ""isItemDraggable"" which returns a boolean value. It checks if the item drag is enabled and returns true if it is, otherwise false."
115,enableSwipeItem(),enable swipe item enable swipe items you should attach link item touch helper which construct with link item drag and swipe callback to the recycler when you enable this ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+itemSwipeEnabled,261,7,1,"/** 
 * <p>Enable swipe items.</p> You should attach  {@link ItemTouchHelper} which construct with {@link ItemDragAndSwipeCallback} to the Recycler when you enable this.
 */
","/**
     * <p>Enable swipe items.</p>
     * You should attach {@link ItemTouchHelper} which construct with {@link ItemDragAndSwipeCallback} to the Recycler when you enable this.
     */
    public void enableSwipeItem() {
        itemSwipeEnabled = true;
    }",False,True,"This method enables swipe functionality for items in a RecyclerView. It sets the ""itemSwipeEnabled"" flag to true, indicating that swipe is enabled.",True,"This code defines a method called ""enableSwipeItem"" that sets a boolean variable ""itemSwipeEnabled"" to true. It is used to enable swipe functionality for items in a RecyclerView, and it is recommended to use it in conjunction with ItemTouchHelper and ItemDragAndSwipeCallback."
116,disableSwipeItem(),disable swipe item ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+itemSwipeEnabled,72,3,1,,"public void disableSwipeItem() {
        itemSwipeEnabled = false;
    }",True,True,This method disables the ability to swipe an item.,True,"The code defines a method called ""disableSwipeItem"" that sets a boolean variable ""itemSwipeEnabled"" to false, effectively disabling the ability to swipe an item. This method can be used to prevent swiping functionality in a user interface."
117,isItemSwipeEnable(),is item swipe enable ,Method,,com.chad.library.adapter.base.callback.ItemDragAndSwipeCallback+isItemViewSwipeEnabled(),,com.chad.library.adapter.base.BaseQuickAdapter+itemSwipeEnabled,75,3,1,,"public boolean isItemSwipeEnable() {
        return itemSwipeEnabled;
    }",True,True,This method serves to determine whether the item swipe feature is enabled or not. It returns a boolean value indicating the status of the item swipe feature.,True,"The code defines a method named ""isItemSwipeEnable"" which returns a boolean value indicating whether item swipe is enabled or not. The method retrieves the value of the ""itemSwipeEnabled"" variable and returns it."
118,setOnItemDragListener(OnItemDragListener),set on item drag listener on item drag listener param on item drag listener register a callback to be invoked when drag event happen ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+mOnItemDragListener,237,6,1,"/** 
 * @param onItemDragListener Register a callback to be invoked when drag event happen.
 */
","/**
     * @param onItemDragListener Register a callback to be invoked when drag event happen.
     */
    public void setOnItemDragListener(OnItemDragListener onItemDragListener) {
        mOnItemDragListener = onItemDragListener;
    }",True,True,This method sets a callback listener for when a drag event occurs on an item.,True,"This code defines a method called ""setOnItemDragListener"" that takes an instance of the ""OnItemDragListener"" interface as a parameter. This method is used to register a callback that will be invoked when a drag event occurs."
119,getViewHolderPosition(RecyclerView.ViewHolder),get view holder position view holder ,Method,,,com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount() com.chad.library.adapter.base.BaseQuickAdapter+getHeaderViewsCount(),,148,3,1,,"public int getViewHolderPosition(RecyclerView.ViewHolder viewHolder) {
        return viewHolder.getAdapterPosition() - getHeaderViewsCount();
    }",False,True,"This method returns the position of a ViewHolder in a RecyclerView, taking into account any header views that may be present.",True,"The given code defines a method named ""getViewHolderPosition"" that takes a RecyclerView.ViewHolder object as input and returns the position of the ViewHolder in the RecyclerView, excluding any header views. The position is calculated by subtracting the number of header views from the adapter position of the ViewHolder."
120,onItemDragStart(RecyclerView.ViewHolder),on item drag start view holder ,Method,,,"com.chad.library.adapter.base.listener.OnItemDragListener+onItemDragStart(ViewHolder,int) com.chad.library.adapter.base.listener.OnItemDragListener+onItemDragStart(ViewHolder,int) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder)",com.chad.library.adapter.base.BaseQuickAdapter+mOnItemDragListener com.chad.library.adapter.base.BaseQuickAdapter+itemDragEnabled com.chad.library.adapter.base.BaseQuickAdapter+mOnItemDragListener,239,5,1,,"public void onItemDragStart(RecyclerView.ViewHolder viewHolder) {
        if (mOnItemDragListener != null && itemDragEnabled) {
            mOnItemDragListener.onItemDragStart(viewHolder, getViewHolderPosition(viewHolder));
        }
    }",True,True,This method is used to handle the event when an item in a RecyclerView is dragged. It calls the onItemDragStart method of the listener if it is not null and item dragging is enabled.,True,"The given code is a method called ""onItemDragStart"" that is triggered when an item in a RecyclerView is being dragged. It checks if there is an ""OnItemDragListener"" set and if item dragging is enabled, then it calls the ""onItemDragStart"" method of the listener with the ViewHolder and its position as parameters."
121,"onItemDragMoving(RecyclerView.ViewHolder,RecyclerView.ViewHolder)",on item drag moving source target ,Method,,,"com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) java.util.Collections+swap(List,int,int) java.util.Collections+swap(List,int,int) java.util.Collections+swap(List,int,int) java.util.Collections+swap(List,int,int) com.chad.library.adapter.base.listener.OnItemDragListener+onItemDragMoving(ViewHolder,int,ViewHolder,int) com.chad.library.adapter.base.listener.OnItemDragListener+onItemDragMoving(ViewHolder,int,ViewHolder,int)",com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mData com.chad.library.adapter.base.BaseQuickAdapter+mOnItemDragListener com.chad.library.adapter.base.BaseQuickAdapter+itemDragEnabled com.chad.library.adapter.base.BaseQuickAdapter+mOnItemDragListener,705,19,1,,"public void onItemDragMoving(RecyclerView.ViewHolder source, RecyclerView.ViewHolder target) {
        int from = getViewHolderPosition(source);
        int to = getViewHolderPosition(target);

        if (from < to) {
            for (int i = from; i < to; i++) {
                Collections.swap(mData, i, i + 1);
            }
        } else {
            for (int i = from; i > to; i--) {
                Collections.swap(mData, i, i - 1);
            }
        }
        notifyItemMoved(source.getAdapterPosition(), target.getAdapterPosition());

        if (mOnItemDragListener != null && itemDragEnabled) {
            mOnItemDragListener.onItemDragMoving(source, from, target, to);
        }
    }",True,True,This method is used to handle the movement of items in a RecyclerView when they are being dragged. It swaps the positions of the items in the data list and notifies the adapter of the item movement. It also calls a listener method to notify about the item movement.,True,"This code is a method that handles the movement of items in a RecyclerView during a drag operation. It swaps the positions of the dragged item and the target item in the data list, updates the adapter positions, and notifies the listener if available."
122,onItemDragEnd(RecyclerView.ViewHolder),on item drag end view holder ,Method,,,"com.chad.library.adapter.base.listener.OnItemDragListener+onItemDragEnd(ViewHolder,int) com.chad.library.adapter.base.listener.OnItemDragListener+onItemDragEnd(ViewHolder,int) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder)",com.chad.library.adapter.base.BaseQuickAdapter+mOnItemDragListener com.chad.library.adapter.base.BaseQuickAdapter+itemDragEnabled com.chad.library.adapter.base.BaseQuickAdapter+mOnItemDragListener,235,5,1,,"public void onItemDragEnd(RecyclerView.ViewHolder viewHolder) {
        if (mOnItemDragListener != null && itemDragEnabled) {
            mOnItemDragListener.onItemDragEnd(viewHolder, getViewHolderPosition(viewHolder));
        }
    }",True,True,This method is used to handle the event when an item is dragged and then released in a RecyclerView. It calls the onItemDragEnd method of the listener if it is not null and item dragging is enabled.,True,"The given code is a method called ""onItemDragEnd"" that is triggered when an item is finished being dragged in a RecyclerView. It checks if there is an ""OnItemDragListener"" set and if item dragging is enabled, then it calls the ""onItemDragEnd"" method of the listener with the ViewHolder and its position as parameters."
123,setOnItemSwipeListener(OnItemSwipeListener),set on item swipe listener listener ,Method,,,,com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener,113,3,1,,"public void setOnItemSwipeListener(OnItemSwipeListener listener) {
        mOnItemSwipeListener = listener;
    }",True,True,This method sets the listener for item swipe events.,True,"The code defines a method called ""setOnItemSwipeListener"" which takes an object of type ""OnItemSwipeListener"" as a parameter. This method assigns the passed listener object to a member variable called ""mOnItemSwipeListener""."
124,onItemSwipeStart(RecyclerView.ViewHolder),on item swipe start view holder ,Method,,,"com.chad.library.adapter.base.listener.OnItemSwipeListener+onItemSwipeStart(ViewHolder,int) com.chad.library.adapter.base.listener.OnItemSwipeListener+onItemSwipeStart(ViewHolder,int) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder)",com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener com.chad.library.adapter.base.BaseQuickAdapter+itemSwipeEnabled com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener,244,5,1,,"public void onItemSwipeStart(RecyclerView.ViewHolder viewHolder) {
        if (mOnItemSwipeListener != null && itemSwipeEnabled) {
            mOnItemSwipeListener.onItemSwipeStart(viewHolder, getViewHolderPosition(viewHolder));
        }
    }",True,True,This method is used to notify the listener when an item in a RecyclerView is being swiped. It checks if the listener is not null and if item swiping is enabled before calling the listener's onItemSwipeStart method.,True,"The given code is a method named ""onItemSwipeStart"" that is called when an item in a RecyclerView is being swiped. It checks if there is a listener set and if item swiping is enabled, then it calls the listener's ""onItemSwipeStart"" method with the ViewHolder and its position as parameters."
125,onItemSwipeClear(RecyclerView.ViewHolder),on item swipe clear view holder ,Method,,,"com.chad.library.adapter.base.listener.OnItemSwipeListener+clearView(ViewHolder,int) com.chad.library.adapter.base.listener.OnItemSwipeListener+clearView(ViewHolder,int) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder)",com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener com.chad.library.adapter.base.BaseQuickAdapter+itemSwipeEnabled com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener,237,5,1,,"public void onItemSwipeClear(RecyclerView.ViewHolder viewHolder) {
        if (mOnItemSwipeListener != null && itemSwipeEnabled) {
            mOnItemSwipeListener.clearView(viewHolder, getViewHolderPosition(viewHolder));
        }
    }",True,True,This method is used to handle the event when an item is swiped and cleared from a RecyclerView. It calls the clearView() method of the OnItemSwipeListener if it is not null and itemSwipeEnabled is true.,True,"The code defines a method called ""onItemSwipeClear"" that is responsible for handling the event when an item is swiped and cleared from a RecyclerView. If the item swipe listener is not null and item swipe is enabled, the method calls the ""clearView"" function of the listener, passing the ViewHolder and its position as arguments."
126,onItemSwiped(RecyclerView.ViewHolder),on item swiped view holder ,Method,,,"com.chad.library.adapter.base.listener.OnItemSwipeListener+onItemSwiped(ViewHolder,int) com.chad.library.adapter.base.listener.OnItemSwipeListener+onItemSwiped(ViewHolder,int) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) com.chad.library.adapter.base.BaseQuickAdapter+getViewHolderPosition(ViewHolder) java.util.List+remove(int) java.util.List+remove(int)",com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener com.chad.library.adapter.base.BaseQuickAdapter+itemSwipeEnabled com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener com.chad.library.adapter.base.BaseQuickAdapter+mData,378,10,1,,"public void onItemSwiped(RecyclerView.ViewHolder viewHolder) {
        if (mOnItemSwipeListener != null && itemSwipeEnabled) {
            mOnItemSwipeListener.onItemSwiped(viewHolder, getViewHolderPosition(viewHolder));
        }

        int pos = getViewHolderPosition(viewHolder);

        mData.remove(pos);
        notifyItemRemoved(viewHolder.getAdapterPosition());
    }",True,True,This method is used to handle the event when an item is swiped in a RecyclerView. It calls the onItemSwiped listener if it is set and item swipe is enabled. It then removes the swiped item from the data list and notifies the adapter of the item removal.,True,"This code is a method called ""onItemSwiped"" that is triggered when an item in a RecyclerView is swiped. It checks if there is a listener and if item swiping is enabled, then it calls the listener's ""onItemSwiped"" method with the swiped item's ViewHolder and position. It then removes the item from the data list and notifies the adapter of the removal."
127,"onItemSwiping(Canvas,RecyclerView.ViewHolder,float,float,boolean)",on item swiping canvas view holder d x d y is currently active ,Method,,,"com.chad.library.adapter.base.listener.OnItemSwipeListener+onItemSwipeMoving(Canvas,ViewHolder,float,float,boolean) com.chad.library.adapter.base.listener.OnItemSwipeListener+onItemSwipeMoving(Canvas,ViewHolder,float,float,boolean)",com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener com.chad.library.adapter.base.BaseQuickAdapter+itemSwipeEnabled com.chad.library.adapter.base.BaseQuickAdapter+mOnItemSwipeListener,304,5,1,,"public void onItemSwiping(Canvas canvas, RecyclerView.ViewHolder viewHolder, float dX, float dY, boolean isCurrentlyActive) {
        if (mOnItemSwipeListener != null && itemSwipeEnabled) {
            mOnItemSwipeListener.onItemSwipeMoving(canvas, viewHolder, dX, dY, isCurrentlyActive);
        }
    }",True,True,This method is used to handle the swiping action on an item in a RecyclerView. It calls the onItemSwipeMoving method of the mOnItemSwipeListener if it is not null and itemSwipeEnabled is true.,True,"This code defines a method called ""onItemSwiping"" that takes in a canvas, a RecyclerView.ViewHolder, and some other parameters. It checks if an item swipe listener is set and if item swipe is enabled, and if so, it calls the ""onItemSwipeMoving"" method of the listener with the provided parameters."
