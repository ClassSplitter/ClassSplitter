index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,NO_CONDITIONS,Field,,,,,76,1,26,,private static final WhereCondition[] NO_CONDITIONS = new WhereCondition[0];,False
2,mSession,Field,,,,,34,1,18,,private final DaoSession mSession;,False
3,AbstractSampleProvider(DaoSession),Method,,,,nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+mSession,88,3,4,,"protected AbstractSampleProvider(DaoSession session) {
        mSession = session;
    }",False
4,getSession(),Method,,nodomain.freeyourgadget.gadgetbridge.devices.miband.MiBandSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.pebble.HealthSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.pebble.MisfitSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.pebble.MorpheuzSampleProvider+getSampleDao(),,nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+mSession,63,3,1,,"public DaoSession getSession() {
        return mSession;
    }",False
5,"getAllActivitySamples(int,int)",Method,,,"nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int)",nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+TYPE_ALL,172,3,1,,"public List<T> getAllActivitySamples(int timestamp_from, int timestamp_to) {
        return getGBActivitySamples(timestamp_from, timestamp_to, ActivityKind.TYPE_ALL);
    }",False
6,"getActivitySamples(int,int)",Method,,,"nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int)",nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+TYPE_ACTIVITY,174,3,1,,"public List<T> getActivitySamples(int timestamp_from, int timestamp_to) {
        return getGBActivitySamples(timestamp_from, timestamp_to, ActivityKind.TYPE_ACTIVITY);
    }",False
7,"getSleepSamples(int,int)",Method,,,"nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int)",nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+TYPE_SLEEP,168,3,1,,"public List<T> getSleepSamples(int timestamp_from, int timestamp_to) {
        return getGBActivitySamples(timestamp_from, timestamp_to, ActivityKind.TYPE_SLEEP);
    }",False
8,close(),Method,,,,,66,4,1,,"@Override
    public void close() {
        // TESTING: NOOP
    }",True
9,getHelper(),Method,,,,,103,5,1,,"@Override
    public SQLiteOpenHelper getHelper() {
        // TESTING: NOOP
        return null;
    }",True
10,release(),Method,,,,,68,4,1,,"@Override
    public void release() {
        // TESTING: NOOP
    }",True
11,"getAllActivitySamples(int,int,SampleProvider)",Method,,,"nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int)",nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+TYPE_ALL,215,4,1,,"@Override
    public List<ActivitySample> getAllActivitySamples(int tsFrom, int tsTo, SampleProvider provider) {
        return (List<ActivitySample>) getGBActivitySamples(tsFrom, tsTo, ActivityKind.TYPE_ALL);
    }",True
12,"getActivitySamples(int,int,SampleProvider)",Method,,,"nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int)",nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+TYPE_ACTIVITY,217,4,1,,"@Override
    public List<ActivitySample> getActivitySamples(int tsFrom, int tsTo, SampleProvider provider) {
        return (List<ActivitySample>) getGBActivitySamples(tsFrom, tsTo, ActivityKind.TYPE_ACTIVITY);
    }",True
13,"getSleepSamples(int,int,SampleProvider)",Method,,,"nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getGBActivitySamples(int,int,int)",nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+TYPE_SLEEP,211,4,1,,"@Override
    public List<ActivitySample> getSleepSamples(int tsFrom, int tsTo, SampleProvider provider) {
        return (List<ActivitySample>) getGBActivitySamples(tsFrom, tsTo, ActivityKind.TYPE_SLEEP);
    }",True
14,addGBActivitySample(AbstractActivitySample),Method,,,nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao(),,143,4,1,,"@Override
    public void addGBActivitySample(AbstractActivitySample activitySample) {
        getSampleDao().insert((T) activitySample);
    }",False
15,addGBActivitySamples(AbstractActivitySample[]),Method,,,nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao(),,154,4,1,,"@Override
    public void addGBActivitySamples(AbstractActivitySample[] activitySamples) {
        getSampleDao().insertInTx((T[]) activitySamples);
    }",False
16,getWritableDatabase(),Method,,,,,111,5,1,,"@Override
    public SQLiteDatabase getWritableDatabase() {
        // TESTING: NOOP
        return null;
    }",True
17,"changeStoredSamplesType(int,int,int,SampleProvider)",Method,,,,,129,4,1,,"@Override
    public void changeStoredSamplesType(int timestampFrom, int timestampTo, int kind, SampleProvider provider) {

    }",True
18,"changeStoredSamplesType(int,int,int,int,SampleProvider)",Method,,,,,145,4,1,,"@Override
    public void changeStoredSamplesType(int timestampFrom, int timestampTo, int fromKind, int toKind, SampleProvider provider) {

    }",True
19,fetchLatestTimestamp(SampleProvider),Method,,,,,96,4,1,,"@Override
    public int fetchLatestTimestamp(SampleProvider provider) {
        return 0;
    }",True
20,"changeStoredSamplesType(int,int,int)",Method,,,,,116,3,1,,"public void changeStoredSamplesType(int timestampFrom, int timestampTo, int kind) {
        // TODO: implement
    }",True
21,"changeStoredSamplesType(int,int,int,int)",Method,,,,,132,3,1,,"public void changeStoredSamplesType(int timestampFrom, int timestampTo, int fromKind, int toKind) {
        // TODO: implement
    }",True
22,"getGBActivitySamples(int,int,int)",Method,"getAllActivitySamples(int,int) getActivitySamples(int,int) getSleepSamples(int,int) getAllActivitySamples(int,int,SampleProvider) getActivitySamples(int,int,SampleProvider) getSleepSamples(int,int,SampleProvider)",,"nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getClauseForActivityType(QueryBuilder,int) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getClauseForActivityType(QueryBuilder,int)",,405,6,4,,"protected List<T> getGBActivitySamples(int timestamp_from, int timestamp_to, int activityType) {
        QueryBuilder<T> qb = getSampleDao().queryBuilder();
        qb.where(MiBandActivitySampleDao.Properties.Timestamp.ge(timestamp_from))
            .where(MiBandActivitySampleDao.Properties.Timestamp.le(timestamp_to), getClauseForActivityType(qb, activityType));
        return qb.build().list();
    }",False
23,"getClauseForActivityType(QueryBuilder,int)",Method,"getGBActivitySamples(int,int,int)",,"nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+mapToDBActivityTypes(int,SampleProvider) nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+mapToDBActivityTypes(int,SampleProvider) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getActivityTypeConditions(QueryBuilder,int[]) nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getActivityTypeConditions(QueryBuilder,int[])",nodomain.freeyourgadget.gadgetbridge.model.ActivityKind+TYPE_ALL nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+NO_CONDITIONS,438,9,2,,"private WhereCondition[] getClauseForActivityType(QueryBuilder qb, int activityTypes) {
        if (activityTypes == ActivityKind.TYPE_ALL) {
            return NO_CONDITIONS;
        }

        int[] dbActivityTypes = ActivityKind.mapToDBActivityTypes(activityTypes, this);
        WhereCondition activityTypeCondition = getActivityTypeConditions(qb, dbActivityTypes);
        return new WhereCondition[] { activityTypeCondition };
    }",False
24,"getActivityTypeConditions(QueryBuilder,int[])",Method,"getClauseForActivityType(QueryBuilder,int)",,,,1218,23,2,,"private WhereCondition getActivityTypeConditions(QueryBuilder qb, int[] dbActivityTypes) {
        // What a crappy QueryBuilder API ;-( QueryBuilder.or(WhereCondition[]) with a runtime array length
        // check would have worked just fine.
        if (dbActivityTypes.length == 0) {
            return null;
        }
        if (dbActivityTypes.length == 1) {
            return MiBandActivitySampleDao.Properties.RawKind.eq(dbActivityTypes[0]);
        }
        if (dbActivityTypes.length == 2) {
            return qb.or(MiBandActivitySampleDao.Properties.RawKind.eq(dbActivityTypes[0]),
                MiBandActivitySampleDao.Properties.RawKind.eq(dbActivityTypes[1]));
        }
        final int offset = 2;
        int len = dbActivityTypes.length - offset;
        WhereCondition[] trailingConditions = new WhereCondition[len];
        for (int i = 0; i < len; i++) {
            trailingConditions[i] = MiBandActivitySampleDao.Properties.RawKind.eq(dbActivityTypes[i + offset]);
        }
        return qb.or(MiBandActivitySampleDao.Properties.RawKind.eq(dbActivityTypes[0]),
                MiBandActivitySampleDao.Properties.RawKind.eq(dbActivityTypes[1]),
                trailingConditions);
    }",False
25,fetchLatestTimestamp(),Method,,,nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao() nodomain.freeyourgadget.gadgetbridge.devices.AbstractSampleProvider+getSampleDao() java.util.List+size() java.util.List+size() nodomain.freeyourgadget.gadgetbridge.model.TimeStamped+getTimestamp() java.util.List+get(int) java.util.List+get(int) nodomain.freeyourgadget.gadgetbridge.model.TimeStamped+getTimestamp(),,340,10,1,,"public int fetchLatestTimestamp() {
        QueryBuilder<T> qb = getSampleDao().queryBuilder();
        qb.orderDesc(MiBandActivitySampleDao.Properties.Timestamp);
        qb.limit(1);
        List<T> list = qb.build().list();
        if (list.size() >= 1) {
            return list.get(0).getTimestamp();
        }
        return -1;
    }",False
26,getSampleDao(),Method,"addGBActivitySample(AbstractActivitySample) addGBActivitySamples(AbstractActivitySample[]) getGBActivitySamples(int,int,int) fetchLatestTimestamp()",,,,51,1,1028,,"protected abstract AbstractDao<T,?> getSampleDao();",False
