index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,NULL_BYTES,null bytes ,Field,,,,,230,3,26,,"private static final byte[] NULL_BYTES = ""null"".getBytes(StandardCharsets.ISO_8859_1),
            TRUE_BYTES = ""true"".getBytes(StandardCharsets.ISO_8859_1),
            FALSE_BYTES = ""false"".getBytes(StandardCharsets.ISO_8859_1);",False,False,,False,
2,TRUE_BYTES,true bytes ,Field,,,,,230,3,26,,"private static final byte[] NULL_BYTES = ""null"".getBytes(StandardCharsets.ISO_8859_1),
            TRUE_BYTES = ""true"".getBytes(StandardCharsets.ISO_8859_1),
            FALSE_BYTES = ""false"".getBytes(StandardCharsets.ISO_8859_1);",False,False,,False,
3,FALSE_BYTES,false bytes ,Field,,,,,230,3,26,,"private static final byte[] NULL_BYTES = ""null"".getBytes(StandardCharsets.ISO_8859_1),
            TRUE_BYTES = ""true"".getBytes(StandardCharsets.ISO_8859_1),
            FALSE_BYTES = ""false"".getBytes(StandardCharsets.ISO_8859_1);",False,False,,False,
4,,null code null json value ,Field,,,,,111,4,25,"/** 
 * {@code null} JSON value.
 */
","/**
     * {@code null} JSON value.
     */
    public static final ValueJson NULL = new ValueJson(NULL_BYTES);",False,False,"/** 
 * {@code null} JSON value.
 */
",False,"/** 
 * {@code null} JSON value.
 */
"
5,TRUE,true code true json value ,Field,,,,,111,4,25,"/** 
 * {@code true} JSON value.
 */
","/**
     * {@code true} JSON value.
     */
    public static final ValueJson TRUE = new ValueJson(TRUE_BYTES);",False,False,"/** 
 * {@code true} JSON value.
 */
",False,"/** 
 * {@code true} JSON value.
 */
"
6,FALSE,false code false json value ,Field,,,,,114,4,25,"/** 
 * {@code false} JSON value.
 */
","/**
     * {@code false} JSON value.
     */
    public static final ValueJson FALSE = new ValueJson(FALSE_BYTES);",False,False,"/** 
 * {@code false} JSON value.
 */
",False,"/** 
 * {@code false} JSON value.
 */
"
7,ZERO,zero code 0 json value ,Field,,,,,116,4,25,"/** 
 * {@code 0} JSON value.
 */
","/**
     * {@code 0} JSON value.
     */
    public static final ValueJson ZERO = new ValueJson(new byte[] { '0' });",False,False,"/** 
 * {@code 0} JSON value.
 */
",False,"/** 
 * {@code 0} JSON value.
 */
"
8,value,value ,Field,"ValueJson(byte[]) equals(Object) compareTypeSafe(Value,CompareMode,CastDataProvider)",,,,27,1,18,,private final byte[] value;,True,True,,False,
9,hash,hash the hash code ,Field,,,,,55,4,2,"/** 
 * The hash code.
 */
","/**
     * The hash code.
     */
    private int hash;",True,True,"/** 
 * The hash code.
 */
",False,"/** 
 * The hash code.
 */
"
10,ValueJson(byte[]),value json value ,Method,,,,org.h2.value.ValueJson+value org.h2.value.ValueJson+value,67,3,2,,"private ValueJson(byte[] value) {
        this.value = value;
    }",False,False,"This method is a private constructor that takes a byte array as a parameter and assigns it to the instance variable ""value"".",True,"The code defines a private constructor for a class called ValueJson, which takes a byte array as a parameter. The constructor assigns the value of the byte array to a variable called ""value""."
11,"getSQL(StringBuilder,int)",get sql builder sql flags ,Method,,,"org.h2.util.json.JSONBytesSource+parse(byte[],JSONTarget<R>) org.h2.util.json.JSONBytesSource+parse(byte[],JSONTarget<R>) org.h2.util.json.JSONStringTarget+JSONStringTarget(boolean) java.lang.StringBuilder+append(char) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(char)",org.h2.value.ValueJson+value,227,5,1,,"@Override
    public StringBuilder getSQL(StringBuilder builder, int sqlFlags) {
        String s = JSONBytesSource.parse(value, new JSONStringTarget(true));
        return builder.append(""JSON '"").append(s).append('\'');
    }",False,False,This method returns a StringBuilder object that contains a SQL statement with a JSON string appended to it. The JSON string is obtained by parsing a value using a JSONBytesSource and JSONStringTarget.,False,"This code is an implementation of the `getSQL` method, which returns a `StringBuilder` object containing a SQL statement. The method converts a given value into a JSON string using `JSONBytesSource.parse` method and appends it to the `builder` object with a specific format."
12,getType(),get type ,Method,,,,org.h2.value.TypeInfo+TYPE_JSON,82,4,1,,"@Override
    public TypeInfo getType() {
        return TypeInfo.TYPE_JSON;
    }",False,False,"The function of the method is to return the type of information, which is ""TYPE_JSON"", as an instance of the TypeInfo class.",False,"The code snippet defines an overridden method called ""getType()"" that returns an object of type ""TypeInfo"". The method always returns a constant value ""TYPE_JSON"", indicating that the type of the object is JSON."
13,getValueType(),get value type ,Method,,,,org.h2.value.Value+JSON,74,4,1,,"@Override
    public int getValueType() {
        return Value.JSON;
    }",False,False,"The function of the method is to return the value type, which is specified as JSON, as an integer.",False,
14,getString(),get string ,Method,,,"java.lang.String+String(byte[],Charset)",org.h2.value.ValueJson+value java.nio.charset.StandardCharsets+UTF_8,105,4,1,,"@Override
    public String getString() {
        return new String(value, StandardCharsets.UTF_8);
    }",False,False,This method returns a string representation of the value using the UTF-8 character encoding.,False,"The code snippet defines a method named ""getString"" that returns a string representation of the ""value"" variable. The string is created using the UTF-8 character encoding."
15,getBytes(),get bytes ,Method,,,java.lang.Object+clone() java.lang.Object+clone(),org.h2.value.ValueJson+value,76,4,1,,"@Override
    public byte[] getBytes() {
        return value.clone();
    }",True,True,"This method returns a copy of the byte array ""value"".",False,"The code snippet defines a method named ""getBytes"" that returns a copy of a byte array called ""value"". This method is annotated with ""@Override"" indicating that it overrides a method from a superclass or interface."
16,getBytesNoCopy(),get bytes no copy ,Method,,,,org.h2.value.ValueJson+value,74,4,1,,"@Override
    public byte[] getBytesNoCopy() {
        return value;
    }",False,True,The function of the method is to return a byte array without making a copy of it.,False,"The `getBytesNoCopy()` method is an overridden method that returns a byte array. It returns the value of the byte array without creating a copy of it, which can be useful for performance optimization or memory efficiency."
17,getObject(),get object ,Method,,,,org.h2.value.ValueJson+value,69,4,1,,"@Override
    public Object getObject() {
        return value;
    }",True,True,This method serves as an override for the getObject() method. It returns the value of an object.,False,"The code snippet defines a method named ""getObject"" that returns an object. The method is annotated with ""@Override"" indicating that it overrides a method from a superclass or interface. The method simply returns the value of a variable named ""value""."
18,getItemType(),get item type returns json item type return json item type ,Method,,org.h2.expression.condition.IsJsonPredicate+getValue(Session),,org.h2.value.ValueJson+value,335,15,1,"/** 
 * Returns JSON item type.
 * @return JSON item type
 */
","/**
     * Returns JSON item type.
     *
     * @return JSON item type
     */
    public JSONItemType getItemType() {
        switch (value[0]) {
        case '[':
            return JSONItemType.ARRAY;
        case '{':
            return JSONItemType.OBJECT;
        default:
            return JSONItemType.SCALAR;
        }
    }",False,False,"This method returns the type of a JSON item. It checks the first character of the value and returns ARRAY if it is '[', OBJECT if it is '{', and SCALAR for any other character.",False,"This code defines a method called `getItemType()` that returns the type of a JSON item. It checks the first character of the JSON value and returns `ARRAY` if it is `[`, `OBJECT` if it is `{`, and `SCALAR` for any other character."
19,getMemory(),get memory ,Method,,,,org.h2.value.ValueJson+value,78,4,1,,"@Override
    public int getMemory() {
        return value.length + 24;
    }",True,True,This method returns the memory size of an object by adding the length of the value array to 24.,False,"The code snippet represents a method named ""getMemory"" that returns the total memory used by an object. It calculates the memory by adding the length of the ""value"" array to a constant value of 24."
20,hashCode(),hash code ,Method,,,org.h2.util.Utils+getByteArrayHash(byte[]) org.h2.util.Utils+getByteArrayHash(byte[]),org.h2.value.ValueJson+hash org.h2.value.ValueJson+hash org.h2.value.ValueJson+value org.h2.value.ValueJson+hash,149,7,1,,"@Override
    public int hashCode() {
        if (hash == 0) {
            hash = Utils.getByteArrayHash(value);
        }
        return hash;
    }",True,True,"This method overrides the default hashCode() method. It calculates and returns the hash code of the object's value. If the hash code has not been calculated yet, it uses a utility method to calculate it and stores it for future use.",False,This code overrides the default `hashCode()` method and calculates the hash value for a given `value` using a utility method `Utils.getByteArrayHash()`. The calculated hash value is stored in a variable `hash` and returned.
21,equals(Object),equals other ,Method,,,"java.util.Arrays+equals(byte[],byte[]) java.util.Arrays+equals(byte[],byte[])",org.h2.value.ValueJson+value org.h2.value.ValueJson+value org.h2.value.ValueJson+value,151,4,1,,"@Override
    public boolean equals(Object other) {
        return other instanceof ValueJson && Arrays.equals(value, ((ValueJson) other).value);
    }",False,True,This method overrides the equals() method to check if the given object is an instance of ValueJson and if the value arrays of both objects are equal. It returns a boolean value indicating the result of the comparison.,False,"The code defines an overridden equals() method that checks if the given object is an instance of ValueJson class and if the value arrays of both objects are equal. It returns true if both conditions are met, indicating that the objects are equal."
22,"compareTypeSafe(Value,CompareMode,CastDataProvider)",compare type safe v mode provider ,Method,,,"org.h2.util.Bits+compareNotNullUnsigned(byte[],byte[]) org.h2.util.Bits+compareNotNullUnsigned(byte[],byte[])",org.h2.value.ValueJson+value org.h2.value.ValueJson+value org.h2.value.ValueJson+value,176,4,1,,"@Override
    public int compareTypeSafe(Value v, CompareMode mode, CastDataProvider provider) {
        return Bits.compareNotNullUnsigned(value, ((ValueJson) v).value);
    }",True,True,The function of the given method is to compare two values of type ValueJson in a type-safe manner using the provided CompareMode and CastDataProvider. It returns an integer value based on the comparison result.,False,"The given code snippet is a method that compares two values of type `ValueJson` in a type-safe manner. It uses the `Bits.compareNotNullUnsigned` method to compare the `value` field of the current object with the `value` field of the passed `Value` object, and returns the result of the comparison."
23,fromJson(String),from json s returns json value with the specified content param s json representation will be normalized return json value throws db exception on invalid jso n ,Method,,"org.h2.expression.Format+getValue(Value) org.h2.value.DataType+readValue(SessionInterface,ResultSet,int,int) org.h2.value.DataType+readValue(SessionInterface,ResultSet,int,int)","org.h2.util.json.JSONStringSource+normalize(String) org.h2.util.json.JSONStringSource+normalize(String) org.h2.message.DbException+get(int,String) org.h2.message.DbException+get(int,String) org.h2.value.ValueJson+getInternal(byte[]) org.h2.value.ValueJson+getInternal(byte[])",org.h2.api.ErrorCode+DATA_CONVERSION_ERROR_1,534,18,9,"/** 
 * Returns JSON value with the specified content.
 * @param s JSON representation, will be normalized
 * @return JSON value
 * @throws DbException on invalid JSON
 */
","/**
     * Returns JSON value with the specified content.
     *
     * @param s
     *            JSON representation, will be normalized
     * @return JSON value
     * @throws DbException
     *             on invalid JSON
     */
    public static ValueJson fromJson(String s) {
        byte[] bytes;
        try {
            bytes = JSONStringSource.normalize(s);
        } catch (RuntimeException ex) {
            throw DbException.get(ErrorCode.DATA_CONVERSION_ERROR_1, s);
        }
        return getInternal(bytes);
    }",False,False,"This method takes a JSON representation as input, normalizes it, and returns a JSON value. It throws an exception if the input is invalid.",True,"The method ""fromJson"" takes a JSON representation as a string, normalizes it, and returns a JSON value. If the JSON representation is invalid, it throws a DbException with an error code and the original string."
24,fromJson(byte[]),from json bytes returns json value with the specified content param bytes json representation will be normalized return json value throws db exception on invalid jso n ,Method,,"org.h2.value.DataType+readValue(SessionInterface,ResultSet,int,int) org.h2.value.Transfer+readValue() org.h2.value.Value+convertToJson()","org.h2.util.json.JSONBytesSource+normalize(byte[]) org.h2.util.json.JSONBytesSource+normalize(byte[]) org.h2.message.DbException+get(int,String) org.h2.message.DbException+get(int,String) org.h2.util.StringUtils+convertBytesToHex(byte[]) org.h2.util.StringUtils+convertBytesToHex(byte[]) org.h2.value.ValueJson+getInternal(byte[]) org.h2.value.ValueJson+getInternal(byte[])",org.h2.api.ErrorCode+DATA_CONVERSION_ERROR_1,558,17,9,"/** 
 * Returns JSON value with the specified content.
 * @param bytes JSON representation, will be normalized
 * @return JSON value
 * @throws DbException on invalid JSON
 */
","/**
     * Returns JSON value with the specified content.
     *
     * @param bytes
     *            JSON representation, will be normalized
     * @return JSON value
     * @throws DbException
     *             on invalid JSON
     */
    public static ValueJson fromJson(byte[] bytes) {
        try {
            bytes = JSONBytesSource.normalize(bytes);
        } catch (RuntimeException ex) {
            throw DbException.get(ErrorCode.DATA_CONVERSION_ERROR_1, StringUtils.convertBytesToHex(bytes));
        }
        return getInternal(bytes);
    }",False,False,"This method takes a byte array representing a JSON value, normalizes it, and returns a JSON value. If the byte array is invalid JSON, it throws a DbException.",True,This code defines a static method called `fromJson` that takes a byte array representing a JSON value and returns a `ValueJson` object. The method normalizes the byte array and throws a `DbException` if the JSON is invalid.
25,get(boolean),get bool returns json value with the specified boolean content param bool boolean value return json value ,Method,,org.h2.value.Value+convertToJson(),,org.h2.value.ValueJson+TRUE org.h2.value.ValueJson+FALSE,247,10,9,"/** 
 * Returns JSON value with the specified boolean content.
 * @param bool boolean value
 * @return JSON value
 */
","/**
     * Returns JSON value with the specified boolean content.
     *
     * @param bool
     *            boolean value
     * @return JSON value
     */
    public static ValueJson get(boolean bool) {
        return bool ? TRUE : FALSE;
    }",False,False,"This method returns a JSON value based on the specified boolean content. If the boolean is true, it returns the JSON value TRUE. Otherwise, it returns the JSON value FALSE.",True,"This code defines a static method called ""get"" that takes a boolean value as input and returns a JSON value. The method returns a predefined JSON value based on the input boolean value, either TRUE or FALSE."
26,get(int),get number returns json value with the specified numeric content param number integer value return json value ,Method,,org.h2.value.Value+convertToJson(),org.h2.value.ValueJson+getNumber(String) org.h2.value.ValueJson+getNumber(String) java.lang.Integer+toString(int) java.lang.Integer+toString(int),org.h2.value.ValueJson+ZERO,284,10,9,"/** 
 * Returns JSON value with the specified numeric content.
 * @param number integer value
 * @return JSON value
 */
","/**
     * Returns JSON value with the specified numeric content.
     *
     * @param number
     *            integer value
     * @return JSON value
     */
    public static ValueJson get(int number) {
        return number != 0 ? getNumber(Integer.toString(number)) : ZERO;
    }",False,False,This method returns a JSON value with the specified numeric content. It takes an integer value as a parameter and returns a JSON value.,True,"The code is a method named ""get"" that returns a JSON value with the specified numeric content. It takes an integer value as a parameter and returns a JSON value based on the condition that the number is not equal to zero. If the number is not zero, it calls another method to convert the integer to a string and returns the resulting JSON value. Otherwise, it returns a predefined JSON value named ""ZERO""."
27,get(long),get number returns json value with the specified numeric content param number long value return json value ,Method,,org.h2.value.Value+convertToJson(),org.h2.value.ValueJson+getNumber(String) org.h2.value.ValueJson+getNumber(String) java.lang.Long+toString(long) java.lang.Long+toString(long),org.h2.value.ValueJson+ZERO,280,10,9,"/** 
 * Returns JSON value with the specified numeric content.
 * @param number long value
 * @return JSON value
 */
","/**
     * Returns JSON value with the specified numeric content.
     *
     * @param number
     *            long value
     * @return JSON value
     */
    public static ValueJson get(long number) {
        return number != 0L ? getNumber(Long.toString(number)) : ZERO;
    }",False,False,"This method returns a JSON value with the specified numeric content. It takes a long value as input and returns a JSON value. If the input number is not zero, it converts the number to a string and returns a JSON value representing that number. Otherwise, it returns a JSON value representing zero.",True,"This code is a method named ""get"" that returns a JSON value based on the specified numeric content. It takes a long value as a parameter and returns a JSON value. If the number is not equal to zero, it converts the long value to a string and returns a JSON value representing that number, otherwise it returns a JSON value representing zero."
28,get(BigDecimal),get number returns json value with the specified numeric content param number big decimal value return json value ,Method,,org.h2.value.Value+convertToJson(),"java.math.BigDecimal+signum() java.math.BigDecimal+signum() java.math.BigDecimal+scale() java.math.BigDecimal+scale() java.math.BigDecimal+toString() java.math.BigDecimal+toString() java.lang.String+indexOf(int) java.lang.String+indexOf(int) java.lang.String+charAt(int) java.lang.String+charAt(int) java.lang.String+length() java.lang.String+length() java.lang.StringBuilder+toString() java.lang.StringBuilder+append(CharSequence,int,int) java.lang.StringBuilder+append(CharSequence,int,int) java.lang.StringBuilder+StringBuilder(int) java.lang.StringBuilder+append(CharSequence,int,int) java.lang.StringBuilder+append(CharSequence,int,int) java.lang.StringBuilder+toString() org.h2.value.ValueJson+getNumber(String) org.h2.value.ValueJson+getNumber(String)",org.h2.value.ValueJson+ZERO,627,19,9,"/** 
 * Returns JSON value with the specified numeric content.
 * @param number big decimal value
 * @return JSON value
 */
","/**
     * Returns JSON value with the specified numeric content.
     *
     * @param number
     *            big decimal value
     * @return JSON value
     */
    public static ValueJson get(BigDecimal number) {
        if (number.signum() == 0 && number.scale() == 0) {
            return ZERO;
        }
        String s = number.toString();
        int index = s.indexOf('E');
        if (index >= 0 && s.charAt(++index) == '+') {
            int length = s.length();
            s = new StringBuilder(length - 1).append(s, 0, index).append(s, index + 1, length).toString();
        }
        return getNumber(s);
    }",False,False,"This method returns a JSON value with the specified numeric content. It checks if the number is zero and returns a predefined value if it is. It then converts the number to a string and checks if it contains an exponent. If it does, it removes the exponent and returns the resulting number. Otherwise, it returns the original number.",True,"This code is a method named ""get"" that takes a BigDecimal number as input and returns a JSON value. It checks if the number is zero and returns a predefined JSON value for zero. It then converts the number to a string, removes the exponent notation if present, and returns the JSON value for the resulting string."
29,get(String),get string returns json value with the specified string content param string string value return json value ,Method,,org.h2.value.Value+convertToJson(),"org.h2.value.ValueJson+ValueJson(byte[]) java.io.ByteArrayOutputStream+toByteArray() org.h2.util.json.JSONByteArrayTarget+encodeString(ByteArrayOutputStream,String) org.h2.util.json.JSONByteArrayTarget+encodeString(ByteArrayOutputStream,String) java.io.ByteArrayOutputStream+ByteArrayOutputStream(int) java.lang.String+length() java.lang.String+length() java.io.ByteArrayOutputStream+toByteArray()",,366,11,9,"/** 
 * Returns JSON value with the specified string content.
 * @param string string value
 * @return JSON value
 */
","/**
     * Returns JSON value with the specified string content.
     *
     * @param string
     *            string value
     * @return JSON value
     */
    public static ValueJson get(String string) {
        return new ValueJson(JSONByteArrayTarget.encodeString( //
                new ByteArrayOutputStream(string.length() + 2), string).toByteArray());
    }",False,False,The function of this method is to return a JSON value with the specified string content. It takes a string as input and encodes it into a JSON value using a JSONByteArrayTarget. The encoded value is then converted to a byte array and returned.,True,"The given code is a method named ""get"" that takes a string as input and returns a JSON value. It encodes the string using JSONByteArrayTarget and returns the encoded value as a new instance of ValueJson."
30,getInternal(byte[]),get internal bytes returns json value with the specified content param bytes normalized json representation return json value ,Method,fromJson(String) fromJson(byte[]),"org.h2.expression.aggregate.Aggregate+getAggregatedValue(Session,Object) org.h2.expression.function.Function+jsonObjectFinish(ByteArrayOutputStream,int) org.h2.expression.function.Function+jsonArray(Session,Expression[]) org.h2.value.Value+convertToJson()","java.util.Arrays+equals(byte[],byte[]) java.util.Arrays+equals(byte[],byte[]) java.util.Arrays+equals(byte[],byte[]) java.util.Arrays+equals(byte[],byte[]) java.util.Arrays+equals(byte[],byte[]) java.util.Arrays+equals(byte[],byte[]) org.h2.value.ValueJson+ValueJson(byte[])",org.h2.value.ValueJson+ZERO org.h2.value.ValueJson+TRUE_BYTES org.h2.value.ValueJson+TRUE org.h2.value.ValueJson+NULL_BYTES org.h2.value.ValueJson+NULL org.h2.value.ValueJson+FALSE_BYTES org.h2.value.ValueJson+FALSE,771,29,9,"/** 
 * Returns JSON value with the specified content.
 * @param bytes normalized JSON representation
 * @return JSON value
 */
","/**
     * Returns JSON value with the specified content.
     *
     * @param bytes
     *            normalized JSON representation
     * @return JSON value
     */
    public static ValueJson getInternal(byte[] bytes) {
        int l = bytes.length;
        switch (l) {
        case 1:
            if (bytes[0] == '0') {
                return ZERO;
            }
            break;
        case 4:
            if (Arrays.equals(TRUE_BYTES, bytes)) {
                return TRUE;
            } else if (Arrays.equals(NULL_BYTES, bytes)) {
                return NULL;
            }
            break;
        case 5:
            if (Arrays.equals(FALSE_BYTES, bytes)) {
                return FALSE;
            }
        }
        return new ValueJson(bytes);
    }",False,False,"The function takes a byte array as input and returns a JSON value. It checks the length of the byte array and performs different actions based on the length and content of the array. If the length is 1 and the byte is '0', it returns a predefined JSON value ZERO. If the length is 4 and the byte array matches predefined TRUE_BYTES or NULL_BYTES, it returns TRUE or NULL respectively. If the length is 5 and the byte array matches predefined FALSE_BYTES, it returns FALSE. Otherwise, it creates a new JSON value using the input byte array.",True,"This code defines a method called `getInternal` that takes a byte array as input and returns a JSON value. It checks the length of the byte array and performs different actions based on the length, such as returning predefined JSON values or creating a new JSON value if none of the predefined conditions are met."
31,getNumber(String),get number s ,Method,get(int) get(long) get(BigDecimal),,org.h2.value.ValueJson+ValueJson(byte[]) java.lang.String+getBytes(Charset) java.lang.String+getBytes(Charset),java.nio.charset.StandardCharsets+ISO_8859_1,123,3,10,,"private static ValueJson getNumber(String s) {
        return new ValueJson(s.getBytes(StandardCharsets.ISO_8859_1));
    }",False,False,The function of the method is to convert a given string into a ValueJson object by encoding it into bytes using the ISO_8859_1 character set.,False,"The given code snippet defines a private static method named ""getNumber"" that takes a string as input. It creates a new instance of the ""ValueJson"" class by converting the input string to bytes using the ISO_8859_1 character encoding and returns the created object."
