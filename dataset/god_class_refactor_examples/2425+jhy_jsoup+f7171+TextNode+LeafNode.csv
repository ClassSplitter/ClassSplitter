index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,TEXT_KEY,text key ,Field,,,,,46,1,26,,"private static final String TEXT_KEY = ""text"";",False,False,,False,
2,text,text ,Field,"TextNode(String,String) text(String)",,,,12,1,0,,String text;,False,False,,False,
3,"TextNode(String,String)",text node text base uri create a new text node representing the supplied unencoded text param text raw text param base uri base uri see create from encoded string string ,Method,,,,org.jsoup.nodes.Node+baseUri org.jsoup.nodes.Node+baseUri org.jsoup.nodes.TextNode+text org.jsoup.nodes.TextNode+text,299,11,1,"/** 
 * Create a new TextNode representing the supplied (unencoded) text).
 * @param text raw text
 * @param baseUri base uri
 * @see #createFromEncoded(String,String)
 */
","/**
     Create a new TextNode representing the supplied (unencoded) text).

     @param text raw text
     @param baseUri base uri
     @see #createFromEncoded(String, String)
     */
    public TextNode(String text, String baseUri) {
        this.baseUri = baseUri;
        this.text = text;
    }",False,False,The function of this method is to create a new TextNode object with the given raw text and base URI.,True,The code defines a constructor for a TextNode class that takes in a raw text and a base URI as parameters. It sets the base URI and assigns the raw text to the text variable of the TextNode object. This constructor is used to create a new TextNode representing the supplied unencoded text.
4,nodeName(),node name ,Method,,,,,56,3,1,,"public String nodeName() {
        return ""#text"";
    }",False,False,"The function of the method is to return the string ""#text"".",False,"The given code snippet defines a method named `nodeName()` that returns a string value of ""#text"". This method is likely part of a larger program or class and is used to retrieve the name of a node, specifically a text node."
5,text(),text get the text content of this text node return unencoded normalised text see text node get whole text ,Method,,"org.jsoup.examples.HtmlToPlainText+FormattingVisitor.head(Node,int) org.jsoup.nodes.ElementTest+testGetTextNodes() org.jsoup.nodes.ElementTest+testGetTextNodes() org.jsoup.nodes.ElementTest+testGetTextNodes() org.jsoup.nodes.NodeTest+unwrap() org.jsoup.nodes.NodeTest+childNodesCopy() org.jsoup.nodes.TextNodeTest+testTextBean() org.jsoup.nodes.TextNodeTest+testTextBean() org.jsoup.nodes.TextNodeTest+testTextBean() org.jsoup.parser.XmlTreeBuilderTest+xmlFragment()",org.jsoup.nodes.TextNode+normaliseWhitespace(String) org.jsoup.nodes.TextNode+normaliseWhitespace(String) org.jsoup.nodes.TextNode+getWholeText() org.jsoup.nodes.TextNode+getWholeText(),,222,8,1,"/** 
 * Get the text content of this text node.
 * @return Unencoded, normalised text.
 * @see TextNode#getWholeText()
 */
","/**
     * Get the text content of this text node.
     * @return Unencoded, normalised text.
     * @see TextNode#getWholeText()
     */
    public String text() {
        return normaliseWhitespace(getWholeText());
    }",False,False,"The function of this method is to return the unencoded, normalized text content of a text node by calling the getWholeText() method and passing the result to the normaliseWhitespace() method.",False,"The code defines a method called ""text()"" that returns the unencoded and normalized text content of a text node. It utilizes the ""getWholeText()"" method to retrieve the entire text content and then applies the ""normaliseWhitespace()"" function to remove any extra whitespace."
6,text(String),text text set the text content of this text node param text unencoded text return this for chaining ,Method,splitText(int),org.jsoup.nodes.ElementTest+testManipulateTextNodes() org.jsoup.nodes.ElementTest+testManipulateTextNodes() org.jsoup.nodes.NodeTest+childNodesCopy() org.jsoup.nodes.TextNodeTest+testTextBean() org.jsoup.nodes.TextNodeTest+testSplitText(),"org.jsoup.nodes.Attributes+put(String,String) org.jsoup.nodes.Attributes+put(String,String)",org.jsoup.nodes.TextNode+text org.jsoup.nodes.TextNode+text org.jsoup.nodes.Node+attributes org.jsoup.nodes.Node+attributes org.jsoup.nodes.TextNode+TEXT_KEY,295,11,1,"/** 
 * Set the text content of this text node.
 * @param text unencoded text
 * @return this, for chaining
 */
","/**
     * Set the text content of this text node.
     * @param text unencoded text
     * @return this, for chaining
     */
    public TextNode text(String text) {
        this.text = text;
        if (attributes != null)
            attributes.put(TEXT_KEY, text);
        return this;
    }",False,False,This method sets the text content of a text node and returns the updated text node. It also updates the attributes of the text node if they exist.,False,"This code defines a method called ""text"" in a class called ""TextNode"". The method sets the text content of the text node and returns the updated text node. It also updates the attributes of the text node if they exist."
7,getWholeText(),get whole text get the unencoded text of this text node including any newlines and spaces present in the original return text ,Method,"text() isBlank() splitText(int) splitText(int) outerHtmlHead(Appendable,int,Document.OutputSettings)","org.jsoup.helper.W3CDom+W3CBuilder.head(org.jsoup.nodes.Node,int) org.jsoup.nodes.Element+appendNormalisedText(StringBuilder,TextNode) org.jsoup.safety.Cleaner+CleaningVisitor.head(Node,int) org.jsoup.nodes.ElementTest+getElementsByTagName() org.jsoup.nodes.ElementTest+getElementsByTagName() org.jsoup.nodes.ElementTest+testNormalizesNbspInText() org.jsoup.nodes.TextNodeTest+testSplitText() org.jsoup.nodes.TextNodeTest+testSplitText() org.jsoup.parser.HtmlParserTest+parsesComments() org.jsoup.parser.HtmlParserTest+parsesUnterminatedComments()",org.jsoup.nodes.Attributes+get(String) org.jsoup.nodes.Attributes+get(String),org.jsoup.nodes.Node+attributes org.jsoup.nodes.TextNode+text org.jsoup.nodes.Node+attributes org.jsoup.nodes.TextNode+TEXT_KEY,247,7,1,"/** 
 * Get the (unencoded) text of this text node, including any newlines and spaces present in the original.
 * @return text
 */
","/**
     Get the (unencoded) text of this text node, including any newlines and spaces present in the original.
     @return text
     */
    public String getWholeText() {
        return attributes == null ? text : attributes.get(TEXT_KEY);
    }",False,False,"This method returns the unencoded text of a text node, including any newlines and spaces present in the original. It checks if the attributes are null and returns the text if they are, otherwise it returns the text from the attributes.",False,"The `getWholeText()` method returns the unencoded text of a text node, including any newlines and spaces present in the original. It checks if the attributes are null and returns the text if they are, otherwise it retrieves the text from the attributes using a specific key."
8,isBlank(),is blank test if this text node is blank that is empty or only whitespace including newlines return true if this document is empty or only whitespace false if it contains any text content ,Method,"outerHtmlHead(Appendable,int,Document.OutputSettings) outerHtmlHead(Appendable,int,Document.OutputSettings)",org.jsoup.nodes.Document+normaliseTextNodes(Element) org.jsoup.nodes.Element+hasText() org.jsoup.nodes.TextNodeTest+testBlank() org.jsoup.nodes.TextNodeTest+testBlank() org.jsoup.nodes.TextNodeTest+testBlank() org.jsoup.nodes.TextNodeTest+testBlank() org.jsoup.nodes.TextNodeTest+testBlank(),org.jsoup.helper.StringUtil+isBlank(String) org.jsoup.helper.StringUtil+isBlank(String) org.jsoup.nodes.TextNode+getWholeText() org.jsoup.nodes.TextNode+getWholeText(),,298,7,1,"/** 
 * Test if this text node is blank -- that is, empty or only whitespace (including newlines).
 * @return true if this document is empty or only whitespace, false if it contains any text content.
 */
","/**
     Test if this text node is blank -- that is, empty or only whitespace (including newlines).
     @return true if this document is empty or only whitespace, false if it contains any text content.
     */
    public boolean isBlank() {
        return StringUtil.isBlank(getWholeText());
    }",False,False,"The function of this method is to check if a text node is blank, meaning it is either empty or contains only whitespace characters (including newlines). It returns true if the text node is blank, and false if it contains any text content.",False,"The code defines a method called ""isBlank()"" that checks if a text node is empty or contains only whitespace characters. It returns true if the text node is empty or contains only whitespace, and false if it contains any actual text content. The method utilizes the ""StringUtil.isBlank()"" function to perform the check."
9,splitText(int),split text offset split this text node into two nodes at the specified string offset after splitting this node will contain the original text up to the offset and will have a new text node sibling containing the text after the offset param offset string offset point to split node at return the newly created text node containing the text after the offset ,Method,,org.jsoup.nodes.ElementTest+testManipulateTextNodes() org.jsoup.nodes.TextNodeTest+testSplitText() org.jsoup.nodes.TextNodeTest+testSplitAnEmbolden(),"org.jsoup.helper.Validate+isTrue(boolean,String) org.jsoup.helper.Validate+isTrue(boolean,String) org.jsoup.helper.Validate+isTrue(boolean,String) org.jsoup.helper.Validate+isTrue(boolean,String) java.lang.String+length() java.lang.String+length() java.lang.String+substring(int,int) org.jsoup.nodes.TextNode+getWholeText() org.jsoup.nodes.TextNode+getWholeText() java.lang.String+substring(int,int) java.lang.String+substring(int) org.jsoup.nodes.TextNode+getWholeText() org.jsoup.nodes.TextNode+getWholeText() java.lang.String+substring(int) org.jsoup.nodes.TextNode+text(String) org.jsoup.nodes.TextNode+text(String) org.jsoup.nodes.TextNode+TextNode(String,String) org.jsoup.nodes.Node+baseUri() org.jsoup.nodes.Node+baseUri() org.jsoup.nodes.Node+parent() org.jsoup.nodes.Node+parent() org.jsoup.nodes.Node+addChildren(int,Node[]) org.jsoup.nodes.Node+parent() org.jsoup.nodes.Node+parent() org.jsoup.nodes.Node+addChildren(int,Node[]) org.jsoup.nodes.Node+siblingIndex() org.jsoup.nodes.Node+siblingIndex()",org.jsoup.nodes.TextNode+text,941,19,1,"/** 
 * Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset.
 * @param offset string offset point to split node at.
 * @return the newly created text node containing the text after the offset.
 */
","/**
     * Split this text node into two nodes at the specified string offset. After splitting, this node will contain the
     * original text up to the offset, and will have a new text node sibling containing the text after the offset.
     * @param offset string offset point to split node at.
     * @return the newly created text node containing the text after the offset.
     */
    public TextNode splitText(int offset) {
        Validate.isTrue(offset >= 0, ""Split offset must be not be negative"");
        Validate.isTrue(offset < text.length(), ""Split offset must not be greater than current text length"");

        String head = getWholeText().substring(0, offset);
        String tail = getWholeText().substring(offset);
        text(head);
        TextNode tailNode = new TextNode(tail, this.baseUri());
        if (parent() != null)
            parent().addChildren(siblingIndex()+1, tailNode);

        return tailNode;
    }",False,False,"The function of this method is to split a text node into two nodes at a specified string offset. The original node will contain the text up to the offset, and a new text node sibling will be created to contain the text after the offset. The method returns the newly created text node.",False,"This code defines a method called `splitText` in the `TextNode` class. It splits the text node into two nodes at the specified offset, with the original node containing the text up to the offset and a new node containing the text after the offset. The method also adds the new node as a sibling to the original node."
10,"outerHtmlHead(Appendable,int,Document.OutputSettings)",outer html head accum depth out ,Method,,,"org.jsoup.nodes.Document.OutputSettings+prettyPrint() org.jsoup.nodes.Document.OutputSettings+prettyPrint() org.jsoup.nodes.Node+siblingIndex() org.jsoup.nodes.Node+siblingIndex() org.jsoup.parser.Tag+formatAsBlock() org.jsoup.nodes.Element+tag() org.jsoup.nodes.Element+tag() org.jsoup.parser.Tag+formatAsBlock() org.jsoup.nodes.TextNode+isBlank() org.jsoup.nodes.TextNode+isBlank() org.jsoup.nodes.Document.OutputSettings+outline() org.jsoup.nodes.Document.OutputSettings+outline() java.util.List+size() org.jsoup.nodes.Node+siblingNodes() org.jsoup.nodes.Node+siblingNodes() java.util.List+size() org.jsoup.nodes.TextNode+isBlank() org.jsoup.nodes.TextNode+isBlank() org.jsoup.nodes.Node+indent(Appendable,int,OutputSettings) org.jsoup.nodes.Node+indent(Appendable,int,OutputSettings) org.jsoup.nodes.Document.OutputSettings+prettyPrint() org.jsoup.nodes.Document.OutputSettings+prettyPrint() org.jsoup.nodes.Node+parent() org.jsoup.nodes.Node+parent() org.jsoup.nodes.Element+preserveWhitespace(Node) org.jsoup.nodes.Element+preserveWhitespace(Node) org.jsoup.nodes.Node+parent() org.jsoup.nodes.Node+parent() org.jsoup.nodes.Entities+escape(Appendable,String,OutputSettings,boolean,boolean,boolean) org.jsoup.nodes.Entities+escape(Appendable,String,OutputSettings,boolean,boolean,boolean) org.jsoup.nodes.TextNode+getWholeText() org.jsoup.nodes.TextNode+getWholeText()",org.jsoup.nodes.Node+parentNode org.jsoup.nodes.Node+parentNode,580,8,0,,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
        if (out.prettyPrint() && ((siblingIndex() == 0 && parentNode instanceof Element && ((Element) parentNode).tag().formatAsBlock() && !isBlank()) || (out.outline() && siblingNodes().size()>0 && !isBlank()) ))
            indent(accum, depth, out);

        boolean normaliseWhite = out.prettyPrint() && parent() instanceof Element
                && !Element.preserveWhitespace(parent());
        Entities.escape(accum, getWholeText(), out, false, normaliseWhite, false);
    }",False,False,"The function of the given method is to generate the outer HTML head of an element, including indentation and escaping of text content.",False,"The given code is a method called `outerHtmlHead` that is used to generate the HTML head section of a document. It takes an `Appendable` object, an integer `depth`, and an `OutputSettings` object as parameters. The method checks for certain conditions and then escapes the text content of the element before appending it to the `Appendable` object."
11,"outerHtmlTail(Appendable,int,Document.OutputSettings)",outer html tail accum depth out ,Method,,,,,79,1,0,,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}",False,False,"This method appends the closing tag and the outer HTML of an element to the given Appendable object, considering the specified depth and output settings.",False,"The code contains a method named `outerHtmlTail` that takes three parameters: `accum`, `depth`, and `out`. It is responsible for appending the outer HTML representation of an element to the `accum` object, considering the specified `depth` and `out` settings."
12,toString(),to string ,Method,,,org.jsoup.nodes.Node+outerHtml() org.jsoup.nodes.Node+outerHtml(),,74,4,1,,"@Override
    public String toString() {
        return outerHtml();
    }",False,False,This method overrides the default toString() method and returns the outer HTML representation of an object as a string.,False,The code overrides the `toString()` method and returns the result of the `outerHtml()` method. This allows the object to be represented as a string using the HTML content of the object.
13,"createFromEncoded(String,String)",create from encoded encoded text base uri create a new text node from html encoded aka escaped data param encoded text text containing encoded html e g amp lt param base uri base uri return text node containing unencoded data e g lt ,Method,,,"org.jsoup.nodes.Entities+unescape(String) org.jsoup.nodes.Entities+unescape(String) org.jsoup.nodes.TextNode+TextNode(String,String)",,429,10,9,"/** 
 * Create a new TextNode from HTML encoded (aka escaped) data.
 * @param encodedText Text containing encoded HTML (e.g. &amp;lt;)
 * @param baseUri Base uri
 * @return TextNode containing unencoded data (e.g. &lt;)
 */
","/**
     * Create a new TextNode from HTML encoded (aka escaped) data.
     * @param encodedText Text containing encoded HTML (e.g. &amp;lt;)
     * @param baseUri Base uri
     * @return TextNode containing unencoded data (e.g. &lt;)
     */
    public static TextNode createFromEncoded(String encodedText, String baseUri) {
        String text = Entities.unescape(encodedText);
        return new TextNode(text, baseUri);
    }",False,False,This method creates a new TextNode object by decoding HTML-encoded text and setting the base URI.,False,"The code defines a static method called ""createFromEncoded"" that takes in a string of HTML encoded text and a base URI. It returns a new TextNode object with the unencoded text. The method uses the Entities.unescape() function to decode the HTML entities in the input text before creating the TextNode."
14,normaliseWhitespace(String),normalise whitespace text ,Method,text(),,org.jsoup.helper.StringUtil+normaliseWhitespace(String) org.jsoup.helper.StringUtil+normaliseWhitespace(String),,128,4,8,,"static String normaliseWhitespace(String text) {
        text = StringUtil.normaliseWhitespace(text);
        return text;
    }",False,False,The function of the method is to normalize the whitespace in a given text by calling the StringUtil.normaliseWhitespace() method and returning the normalized text.,True,"The code defines a static method called ""normaliseWhitespace"" that takes a string as input and returns the same string after normalizing its whitespace. The method internally uses another method called ""StringUtil.normaliseWhitespace"" to perform the normalization."
15,stripLeadingWhitespace(String),strip leading whitespace text ,Method,,,"java.lang.String+replaceFirst(String,String) java.lang.String+replaceFirst(String,String)",,104,3,8,,"static String stripLeadingWhitespace(String text) {
        return text.replaceFirst(""^\\s+"", """");
    }",False,False,This method removes leading whitespace from a given text by using the replaceFirst method to replace any whitespace at the beginning of the text with an empty string.,True,"The code defines a static method called ""stripLeadingWhitespace"" that takes a string as input and removes any leading whitespace characters from it. It uses the ""replaceFirst"" method to replace the first occurrence of one or more whitespace characters at the beginning of the string with an empty string."
16,lastCharIsWhitespace(StringBuilder),last char is whitespace sb ,Method,,"org.jsoup.nodes.Element+head(Node,int) org.jsoup.nodes.Element+appendNormalisedText(StringBuilder,TextNode) org.jsoup.nodes.Element+appendWhitespaceIfBr(Element,StringBuilder)",java.lang.StringBuilder+length() java.lang.StringBuilder+length() java.lang.StringBuilder+charAt(int) java.lang.StringBuilder+charAt(int) java.lang.StringBuilder+length() java.lang.StringBuilder+length(),,131,3,8,,"static boolean lastCharIsWhitespace(StringBuilder sb) {
        return sb.length() != 0 && sb.charAt(sb.length() - 1) == ' ';
    }",False,False,"This method checks if the last character of a StringBuilder object is a whitespace character. It returns true if the last character is a whitespace, and false otherwise.",True,"The given code defines a static method named ""lastCharIsWhitespace"" that takes a StringBuilder object as input. It checks if the StringBuilder is not empty and if the last character of the StringBuilder is a whitespace character (' '), returning a boolean value accordingly."
17,ensureAttributes(),ensure attributes ,Method,"attr(String) attributes() attr(String,String) hasAttr(String) removeAttr(String) absUrl(String)",,"org.jsoup.nodes.Attributes+Attributes() org.jsoup.nodes.Attributes+put(String,String) org.jsoup.nodes.Attributes+put(String,String)",org.jsoup.nodes.Node+attributes org.jsoup.nodes.Node+attributes org.jsoup.nodes.Node+attributes org.jsoup.nodes.TextNode+TEXT_KEY org.jsoup.nodes.TextNode+text,170,6,2,,"private void ensureAttributes() {
        if (attributes == null) {
            attributes = new Attributes();
            attributes.put(TEXT_KEY, text);
        }
    }",False,True,"This method ensures that the ""attributes"" object is not null. If it is null, it creates a new ""Attributes"" object and assigns it to ""attributes"". It also puts the value of ""text"" into the ""attributes"" object.",True,"The `ensureAttributes()` method checks if the `attributes` object is null, and if so, initializes it and adds a `text` value to it. This method ensures that the `attributes` object is properly set up with the necessary values before further operations are performed on it."
18,attr(String),attr attribute key ,Method,,,org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.Node+attr(String),,130,5,1,,"@Override
    public String attr(String attributeKey) {
        ensureAttributes();
        return super.attr(attributeKey);
    }",True,True,"This method overrides the ""attr"" method from the superclass. It ensures that the attributes are initialized and then calls the ""attr"" method from the superclass, returning its result.",True,"The code is overriding the ""attr"" method from a superclass. It ensures that the attributes are initialized before calling the superclass method, and then returns the result of the superclass method."
19,attributes(),attributes ,Method,,,org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.Node+attributes(),,115,5,1,,"@Override
    public Attributes attributes() {
        ensureAttributes();
        return super.attributes();
    }",True,True,"The method ""attributes()"" overrides a superclass method and ensures that the attributes are initialized before returning them. It returns the attributes of the superclass.",False,This code overrides the `attributes()` method and ensures that the attributes are initialized before returning them. It then returns the attributes obtained from the superclass.
20,"attr(String,String)",attr attribute key attribute value ,Method,,org.jsoup.nodes.TextNodeTest+testTextBean(),"org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.Node+attr(String,String)",,167,5,1,,"@Override
    public Node attr(String attributeKey, String attributeValue) {
        ensureAttributes();
        return super.attr(attributeKey, attributeValue);
    }",True,True,"This method overrides the ""attr"" method from the superclass. It ensures that the attributes are initialized and then calls the superclass's ""attr"" method with the provided attribute key and value.",True,"The code is overriding the ""attr"" method from a superclass. It ensures that the attributes are initialized and then calls the ""attr"" method from the superclass, passing the attribute key and value as parameters."
21,hasAttr(String),has attr attribute key ,Method,,,org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.Node+hasAttr(String),,137,5,1,,"@Override
    public boolean hasAttr(String attributeKey) {
        ensureAttributes();
        return super.hasAttr(attributeKey);
    }",True,True,"This method is used to check if a specific attribute exists. It calls the ""ensureAttributes"" method to make sure that the attributes are loaded, and then calls the ""hasAttr"" method of the superclass to check if the attribute exists.",False,This code is an overridden method that checks if a given attribute key exists. It ensures that the attributes are initialized before performing the check and returns a boolean value indicating the presence of the attribute key.
22,removeAttr(String),remove attr attribute key ,Method,,,org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.Node+removeAttr(String),,140,5,1,,"@Override
    public Node removeAttr(String attributeKey) {
        ensureAttributes();
        return super.removeAttr(attributeKey);
    }",True,True,"This method overrides the removeAttr method from the superclass. It ensures that the attributes are initialized and then calls the removeAttr method from the superclass, passing the attribute key as a parameter. It returns the result of the superclass method.",False,This code overrides the `removeAttr` method in a class and ensures that the attributes are initialized before removing a specific attribute. It then calls the `removeAttr` method from the superclass and returns the result.
23,absUrl(String),abs url attribute key ,Method,,,org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.TextNode+ensureAttributes() org.jsoup.nodes.Node+absUrl(String),,134,5,1,,"@Override
    public String absUrl(String attributeKey) {
        ensureAttributes();
        return super.absUrl(attributeKey);
    }",False,True,"This method overrides the absUrl method from the superclass. It ensures that the attributes are initialized and then calls the absUrl method from the superclass, returning the result.",False,"The code is overriding the `absUrl` method from a superclass. It ensures that the attributes are initialized and then calls the `absUrl` method from the superclass, returning the result."
