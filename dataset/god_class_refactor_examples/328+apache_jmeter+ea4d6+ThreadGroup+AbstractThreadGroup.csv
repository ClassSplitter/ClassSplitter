index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,serialVersionUID,serial version uid ,Field,,,,,50,1,26,,private static final long serialVersionUID = 233L;,False,False,,False,
2,NUM_THREADS,num threads number of threads in the thread group ,Field,,,,,116,2,25,"/** 
 * Number of threads in the thread group 
 */
","/** Number of threads in the thread group */
    public final static String NUM_THREADS = ""ThreadGroup.num_threads"";",True,True,"/** 
 * Number of threads in the thread group 
 */
",False,"/** 
 * Number of threads in the thread group 
 */
"
3,RAMP_TIME,ramp time ramp up time ,Field,,,,,87,2,25,"/** 
 * Ramp-up time 
 */
","/** Ramp-up time */
    public final static String RAMP_TIME = ""ThreadGroup.ramp_time"";",False,False,"/** 
 * Ramp-up time 
 */
",False,"/** 
 * Ramp-up time 
 */
"
4,MAIN_CONTROLLER,main controller ,Field,,,,,75,1,25,,"public final static String MAIN_CONTROLLER = ""ThreadGroup.main_controller"";",True,True,,False,
5,SCHEDULER,scheduler whether scheduler is being used ,Field,,,,,106,2,25,"/** 
 * Whether scheduler is being used 
 */
","/** Whether scheduler is being used */
    public final static String SCHEDULER = ""ThreadGroup.scheduler"";",False,False,"/** 
 * Whether scheduler is being used 
 */
",False,"/** 
 * Whether scheduler is being used 
 */
"
6,START_TIME,start time scheduler absolute start time ,Field,,,,,106,2,25,"/** 
 * Scheduler absolute start time 
 */
","/** Scheduler absolute start time */
    public final static String START_TIME = ""ThreadGroup.start_time"";",False,False,"/** 
 * Scheduler absolute start time 
 */
",False,"/** 
 * Scheduler absolute start time 
 */
"
7,END_TIME,end time scheduler absolute end time ,Field,,,,,100,2,25,"/** 
 * Scheduler absolute end time 
 */
","/** Scheduler absolute end time */
    public final static String END_TIME = ""ThreadGroup.end_time"";",False,False,"/** 
 * Scheduler absolute end time 
 */
",False,"/** 
 * Scheduler absolute end time 
 */
"
8,DURATION,duration scheduler duration overrides end time ,Field,,,,,111,2,25,"/** 
 * Scheduler duration, overrides end time 
 */
","/** Scheduler duration, overrides end time */
    public final static String DURATION = ""ThreadGroup.duration"";",False,False,"/** 
 * Scheduler duration, overrides end time 
 */
",False,"/** 
 * Scheduler duration, overrides end time 
 */
"
9,DELAY,delay scheduler start delay overrides start time ,Field,,,,,110,2,25,"/** 
 * Scheduler start delay, overrides start time 
 */
","/** Scheduler start delay, overrides start time */
    public final static String DELAY = ""ThreadGroup.delay"";",False,False,"/** 
 * Scheduler start delay, overrides start time 
 */
",False,"/** 
 * Scheduler start delay, overrides start time 
 */
"
10,ON_SAMPLE_ERROR,on sample error action to be taken when a sampler error occurs ,Field,,,,,133,2,25,"/** 
 * Action to be taken when a Sampler error occurs 
 */
","/** Action to be taken when a Sampler error occurs */
    public final static String ON_SAMPLE_ERROR = ""ThreadGroup.on_sample_error"";",True,True,"/** 
 * Action to be taken when a Sampler error occurs 
 */
",False,"/** 
 * Action to be taken when a Sampler error occurs 
 */
"
11,ON_SAMPLE_ERROR_CONTINUE,on sample error continue continue i e ignore sampler errors ,Field,,,,,113,2,25,"/** 
 * Continue, i.e. ignore sampler errors 
 */
","/** Continue, i.e. ignore sampler errors */
    public final static String ON_SAMPLE_ERROR_CONTINUE = ""continue"";",True,True,"/** 
 * Continue, i.e. ignore sampler errors 
 */
",False,"/** 
 * Continue, i.e. ignore sampler errors 
 */
"
12,ON_SAMPLE_ERROR_STOPTHREAD,on sample error stopthread stop current thread if sampler error occurs ,Field,,,,,124,2,25,"/** 
 * Stop current thread if sampler error occurs 
 */
","/** Stop current thread if sampler error occurs */
    public final static String ON_SAMPLE_ERROR_STOPTHREAD = ""stopthread"";",True,True,"/** 
 * Stop current thread if sampler error occurs 
 */
",False,"/** 
 * Stop current thread if sampler error occurs 
 */
"
13,ON_SAMPLE_ERROR_STOPTEST,on sample error stoptest stop test all threads if sampler error occurs ,Field,,,,,124,2,25,"/** 
 * Stop test (all threads) if sampler error occurs 
 */
","/** Stop test (all threads) if sampler error occurs */
    public final static String ON_SAMPLE_ERROR_STOPTEST = ""stoptest"";",True,True,"/** 
 * Stop test (all threads) if sampler error occurs 
 */
",False,"/** 
 * Stop test (all threads) if sampler error occurs 
 */
"
14,ON_SAMPLE_ERROR_STOPTEST_NOW,on sample error stoptest now stop test now all threads if sampler error occurs ,Field,,,,,135,2,25,"/** 
 * Stop test NOW (all threads) if sampler error occurs 
 */
","/** Stop test NOW (all threads) if sampler error occurs */
    public final static String ON_SAMPLE_ERROR_STOPTEST_NOW = ""stoptestnow"";",True,True,"/** 
 * Stop test NOW (all threads) if sampler error occurs 
 */
",False,"/** 
 * Stop test NOW (all threads) if sampler error occurs 
 */
"
15,numberOfThreads,number of threads ,Field,,,,,32,1,2,,private int numberOfThreads = 0;,True,True,,False,
16,ThreadGroup(),thread group no arg constructor ,Method,,,,,71,5,1,"/** 
 * No-arg constructor.
 */
","/**
     * No-arg constructor.
     */
    public ThreadGroup() {
    }",False,False,The function of this method is to create a new instance of the ThreadGroup class with no arguments.,False,The code snippet represents a no-argument constructor for the ThreadGroup class. It initializes a new instance of the ThreadGroup class with no parameters.
17,setNumThreads(int),set num threads num threads set the total number of threads to start param num threads the number of threads ,Method,,,"org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.IntegerProperty+IntegerProperty(String,int)",org.apache.jmeter.threads.ThreadGroup+NUM_THREADS,253,9,1,"/** 
 * Set the total number of threads to start
 * @param numThreads the number of threads.
 */
","/**
     * Set the total number of threads to start
     *
     * @param numThreads
     *            the number of threads.
     */
    public void setNumThreads(int numThreads) {
        setProperty(new IntegerProperty(NUM_THREADS, numThreads));
    }",True,True,This method sets the total number of threads to start by calling the setProperty method with a new IntegerProperty object that represents the number of threads.,True,"The code defines a method called ""setNumThreads"" that takes an integer parameter ""numThreads"" and sets the total number of threads to start. It uses the ""setProperty"" method to set the value of a property called ""NUM_THREADS"" to the provided ""numThreads"" value."
18,incrNumberOfThreads(),incr number of threads increment the number of active threads ,Method,,org.apache.jmeter.threads.JMeterThread+threadStarted(),,org.apache.jmeter.threads.ThreadGroup+numberOfThreads,136,6,32,"/** 
 * Increment the number of active threads
 */
","/**
     * Increment the number of active threads
     */
    synchronized void incrNumberOfThreads() {
        numberOfThreads++;
    }",True,True,This method serves to increment the number of active threads by one.,True,"The given code snippet contains a synchronized method named ""incrNumberOfThreads"" that increments the value of a variable called ""numberOfThreads"" by one. This method is used to increment the count of active threads in a thread-safe manner, ensuring that only one thread can modify the value at a time."
19,decrNumberOfThreads(),decr number of threads decrement the number of active threads ,Method,,org.apache.jmeter.threads.JMeterThread+threadFinished(),,org.apache.jmeter.threads.ThreadGroup+numberOfThreads,136,6,32,"/** 
 * Decrement the number of active threads
 */
","/**
     * Decrement the number of active threads
     */
    synchronized void decrNumberOfThreads() {
        numberOfThreads--;
    }",True,True,This method serves to decrement the number of active threads by one.,True,"The given code snippet represents a synchronized method named ""decrNumberOfThreads"" that decrements the value of a variable called ""numberOfThreads"" by one. This method is used to decrease the count of active threads in a thread-safe manner, ensuring that only one thread can access it at a time."
20,getNumberOfThreads(),get number of threads get the number of active threads ,Method,,"org.apache.jmeter.timers.ConstantThroughputTimer+calculateDelay() org.apache.jmeter.threads.JMeterThread+process_sampler(Sampler,Sampler,JMeterContext) org.apache.jmeter.threads.JMeterThread+process_sampler(Sampler,Sampler,JMeterContext)",,org.apache.jmeter.threads.ThreadGroup+numberOfThreads,140,6,33,"/** 
 * Get the number of active threads
 */
","/**
     * Get the number of active threads
     */
    public synchronized int getNumberOfThreads() {
        return numberOfThreads;
    }",True,True,This method returns the number of active threads.,True,"This code defines a method called ""getNumberOfThreads"" that returns the number of active threads. The method is synchronized, meaning it can only be accessed by one thread at a time to ensure thread safety."
21,isDone(),is done inherit doc ,Method,,,org.apache.jmeter.control.Controller+isDone() org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.control.Controller+isDone(),,104,4,1,"/** 
 * {@inheritDoc} 
 */
","/** {@inheritDoc} */
    public boolean isDone() {
        return getSamplerController().isDone();
    }",True,True,This method returns a boolean value indicating whether the sampler controller is done or not.,True,"The code defines a method named ""isDone()"" which returns a boolean value. It calls the ""isDone()"" method of the ""SamplerController"" object and returns its result. The method is used to check if the sampler controller is done or not."
22,next(),next inherit doc ,Method,,,org.apache.jmeter.control.Controller+next() org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.control.Controller+next(),,100,4,1,"/** 
 * {@inheritDoc} 
 */
","/** {@inheritDoc} */
    public Sampler next() {
        return getSamplerController().next();
    }",True,True,"This method serves as an override for the ""next"" method in the parent class. It calls the ""next"" method of the ""SamplerController"" object and returns the result.",True,"The code defines a method named ""next"" that returns a Sampler object. It calls the ""next"" method of the SamplerController object associated with the current instance of the class. The method is documented with the ""@inheritDoc"" tag, indicating that it inherits its behavior from a superclass or interface."
23,setScheduler(boolean),set scheduler scheduler set whether scheduler is being used param scheduler true is scheduler is to be used ,Method,,,"org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.BooleanProperty+BooleanProperty(String,boolean)",org.apache.jmeter.threads.ThreadGroup+SCHEDULER,237,8,1,"/** 
 * Set whether scheduler is being used
 * @param Scheduler true is scheduler is to be used
 */
","/**
     * Set whether scheduler is being used
     *
     * @param Scheduler true is scheduler is to be used
     */
    public void setScheduler(boolean Scheduler) {
        setProperty(new BooleanProperty(SCHEDULER, Scheduler));
    }",False,False,"This method sets the value of a property called ""Scheduler"" to a boolean value. It uses the setProperty method to update the value of the property.",True,"This code defines a method called ""setScheduler"" that takes a boolean parameter and sets the value of a property called ""Scheduler"" to the given boolean value. It uses the ""setProperty"" method to update the property value."
24,getScheduler(),get scheduler get whether scheduler is being used return true if scheduler is being used ,Method,,"org.apache.jmeter.engine.StandardJMeterEngine+scheduleThread(JMeterThread,ThreadGroup)",org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsBoolean(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsBoolean(String),org.apache.jmeter.threads.ThreadGroup+SCHEDULER,198,8,1,"/** 
 * Get whether scheduler is being used
 * @return true if scheduler is being used
 */
","/**
     * Get whether scheduler is being used
     *
     * @return true if scheduler is being used
     */
    public boolean getScheduler() {
        return getPropertyAsBoolean(SCHEDULER);
    }",False,False,"This method serves to retrieve whether the scheduler is being used by returning the value of a property called ""SCHEDULER"" as a boolean.",True,"This code defines a method called ""getScheduler"" that returns a boolean value indicating whether a scheduler is being used. The method retrieves the value from a property called ""SCHEDULER"" and returns it as a boolean."
25,setStartTime(long),set start time stime set the absolute start time value param stime the start time value ,Method,,,"org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.LongProperty+LongProperty(String,long)",org.apache.jmeter.threads.ThreadGroup+START_TIME,227,9,1,"/** 
 * Set the absolute StartTime value.
 * @param stime -the StartTime value.
 */
","/**
     * Set the absolute StartTime value.
     *
     * @param stime -
     *            the StartTime value.
     */
    public void setStartTime(long stime) {
        setProperty(new LongProperty(START_TIME, stime));
    }",False,False,This method sets the absolute start time value by calling the setProperty method with a new LongProperty object that has the start time value.,True,"The code defines a method called ""setStartTime"" that takes a long value as a parameter. This method sets the value of a property called ""StartTime"" by creating a new LongProperty object with the given value and calling the setProperty method."
26,getStartTime(),get start time get the absolute start time value return the start time value ,Method,,"org.apache.jmeter.engine.StandardJMeterEngine+scheduleThread(JMeterThread,ThreadGroup)",org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String),org.apache.jmeter.threads.ThreadGroup+START_TIME,182,8,1,"/** 
 * Get the absolute start time value.
 * @return the start time value.
 */
","/**
     * Get the absolute start time value.
     *
     * @return the start time value.
     */
    public long getStartTime() {
        return getPropertyAsLong(START_TIME);
    }",False,False,This method serves to retrieve the start time value as a long data type.,True,"The code defines a method called ""getStartTime"" that returns the start time value. It retrieves the value by calling another method called ""getPropertyAsLong"" with the parameter ""START_TIME"". The method does not specify the implementation details of ""getPropertyAsLong"" or the value of ""START_TIME""."
27,getDuration(),get duration get the desired duration of the thread group test run return the duration in secs ,Method,,"org.apache.jmeter.engine.StandardJMeterEngine+scheduleThread(JMeterThread,ThreadGroup) org.apache.jmeter.engine.StandardJMeterEngine+scheduleThread(JMeterThread,ThreadGroup)",org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String),org.apache.jmeter.threads.ThreadGroup+DURATION,199,8,1,"/** 
 * Get the desired duration of the thread group test run
 * @return the duration (in secs)
 */
","/**
     * Get the desired duration of the thread group test run
     *
     * @return the duration (in secs)
     */
    public long getDuration() {
        return getPropertyAsLong(DURATION);
    }",False,False,"This method serves to retrieve the desired duration of the thread group test run, returning it as a long value in seconds.",True,"This code defines a method called ""getDuration"" that retrieves the desired duration of a thread group test run. The method returns the duration in seconds and is expected to be used in a larger codebase."
28,setDuration(long),set duration duration set the desired duration of the thread group test run param duration in seconds ,Method,,,"org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.LongProperty+LongProperty(String,long)",org.apache.jmeter.threads.ThreadGroup+DURATION,241,9,1,"/** 
 * Set the desired duration of the thread group test run
 * @param duration in seconds
 */
","/**
     * Set the desired duration of the thread group test run
     *
     * @param duration
     *            in seconds
     */
    public void setDuration(long duration) {
        setProperty(new LongProperty(DURATION, duration));
    }",False,False,This method sets the desired duration of the thread group test run by taking a long value representing the duration in seconds as a parameter and setting it as a property.,True,"The code defines a method called ""setDuration"" which takes a long value as input and sets the desired duration of a thread group test run. It does this by creating a new LongProperty object with the given duration and setting it as a property."
29,getDelay(),get delay get the startup delay return the delay in secs ,Method,,"org.apache.jmeter.engine.StandardJMeterEngine+scheduleThread(JMeterThread,ThreadGroup) org.apache.jmeter.engine.StandardJMeterEngine+scheduleThread(JMeterThread,ThreadGroup)",org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String),org.apache.jmeter.threads.ThreadGroup+DELAY,158,8,1,"/** 
 * Get the startup delay
 * @return the delay (in secs)
 */
","/**
     * Get the startup delay
     *
     * @return the delay (in secs)
     */
    public long getDelay() {
        return getPropertyAsLong(DELAY);
    }",False,False,"This method serves to retrieve the startup delay as a long value, by calling the getPropertyAsLong method with the parameter DELAY.",True,"This code defines a method called ""getDelay"" that returns the startup delay in seconds. The delay value is obtained by calling another method called ""getPropertyAsLong"" with the parameter ""DELAY""."
30,setDelay(long),set delay delay set the startup delay param delay in seconds ,Method,,,"org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.LongProperty+LongProperty(String,long)",org.apache.jmeter.threads.ThreadGroup+DELAY,194,9,1,"/** 
 * Set the startup delay
 * @param delay in seconds
 */
","/**
     * Set the startup delay
     *
     * @param delay
     *            in seconds
     */
    public void setDelay(long delay) {
        setProperty(new LongProperty(DELAY, delay));
    }",False,False,This method sets the startup delay for a certain function or process. It takes a delay value in seconds as a parameter and uses it to set a property related to the delay.,True,"The code defines a method called ""setDelay"" which takes a long value as a parameter and sets it as the startup delay for some functionality. The method internally uses a ""setProperty"" method to store the delay value as a property."
31,setEndTime(long),set end time etime set the end time value param etime the end time value ,Method,,,"org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.LongProperty+LongProperty(String,long)",org.apache.jmeter.threads.ThreadGroup+END_TIME,210,9,1,"/** 
 * Set the EndTime value.
 * @param etime -the EndTime value.
 */
","/**
     * Set the EndTime value.
     *
     * @param etime -
     *            the EndTime value.
     */
    public void setEndTime(long etime) {
        setProperty(new LongProperty(END_TIME, etime));
    }",False,False,This method sets the EndTime value by creating a new LongProperty object with the given etime value and calling the setProperty method.,True,"The code defines a method called ""setEndTime"" that takes a long value as a parameter. This method sets the value of the ""EndTime"" property by creating a new LongProperty object with the given value and calling the setProperty method."
32,getEndTime(),get end time get the end time value return the end time value ,Method,,"org.apache.jmeter.engine.StandardJMeterEngine+scheduleThread(JMeterThread,ThreadGroup)",org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsLong(String),org.apache.jmeter.threads.ThreadGroup+END_TIME,165,8,1,"/** 
 * Get the end time value.
 * @return the end time value.
 */
","/**
     * Get the end time value.
     *
     * @return the end time value.
     */
    public long getEndTime() {
        return getPropertyAsLong(END_TIME);
    }",False,False,This method serves to retrieve the end time value by calling the getPropertyAsLong method and returning the result.,True,"This code defines a method called ""getEndTime"" that returns the value of the end time property. The method retrieves the value by calling another method called ""getPropertyAsLong"" and passing the ""END_TIME"" parameter."
33,setRampUp(int),set ramp up ramp up set the ramp up value param ramp up the ramp up value ,Method,,,"org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.IntegerProperty+IntegerProperty(String,int)",org.apache.jmeter.threads.ThreadGroup+RAMP_TIME,213,9,1,"/** 
 * Set the ramp-up value.
 * @param rampUp the ramp-up value.
 */
","/**
     * Set the ramp-up value.
     *
     * @param rampUp
     *            the ramp-up value.
     */
    public void setRampUp(int rampUp) {
        setProperty(new IntegerProperty(RAMP_TIME, rampUp));
    }",False,False,This method sets the ramp-up value by creating a new IntegerProperty object with the given ramp-up value and setting it as a property.,True,"The code defines a method called ""setRampUp"" that takes an integer parameter and sets the ramp-up value. It uses the ""setProperty"" method to set the value as an IntegerProperty. The method is used to configure the ramp-up time for a certain functionality or process."
34,getRampUp(),get ramp up get the ramp up value return the ramp up value ,Method,,org.apache.jmeter.engine.StandardJMeterEngine+run(),org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsInt(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsInt(String),org.apache.jmeter.threads.ThreadGroup+RAMP_TIME,173,8,1,"/** 
 * Get the ramp-up value.
 * @return the ramp-up value.
 */
","/**
     * Get the ramp-up value.
     *
     * @return the ramp-up value.
     */
    public int getRampUp() {
        return getPropertyAsInt(ThreadGroup.RAMP_TIME);
    }",False,False,This method serves to retrieve the ramp-up value from the ThreadGroup property and returns it as an integer.,True,"This code defines a method called ""getRampUp"" that returns the ramp-up value. The ramp-up value is obtained by retrieving the property ""RAMP_TIME"" as an integer."
35,getSamplerController(),get sampler controller get the sampler controller return the sampler controller ,Method,isDone() next() addTestElement(TestElement) addIterationListener(LoopIterationListener) initialize(),,org.apache.jmeter.testelement.property.JMeterProperty+getObjectValue() org.apache.jmeter.testelement.AbstractTestElement+getProperty(String) org.apache.jmeter.testelement.AbstractTestElement+getProperty(String) org.apache.jmeter.testelement.property.JMeterProperty+getObjectValue(),org.apache.jmeter.threads.ThreadGroup+MAIN_CONTROLLER,246,9,1,"/** 
 * Get the sampler controller.
 * @return the sampler controller.
 */
","/**
     * Get the sampler controller.
     *
     * @return the sampler controller.
     */
    public Controller getSamplerController() {
        Controller c = (Controller) getProperty(MAIN_CONTROLLER).getObjectValue();
        return c;
    }",True,True,This method serves to retrieve the sampler controller by getting the value of the MAIN_CONTROLLER property and returning it as a Controller object.,True,"This code defines a method named ""getSamplerController"" that returns a Controller object. It retrieves the Controller object from a property named ""MAIN_CONTROLLER"" and returns it."
36,setSamplerController(LoopController),set sampler controller c set the sampler controller param c the sampler controller ,Method,,org.apache.jmeter.threads.gui.ThreadGroupGui+modifyTestElement(TestElement),"org.apache.jmeter.control.LoopController+setContinueForever(boolean) org.apache.jmeter.control.LoopController+setContinueForever(boolean) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.AbstractTestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.TestElementProperty+TestElementProperty(String,TestElement)",org.apache.jmeter.threads.ThreadGroup+MAIN_CONTROLLER,277,10,1,"/** 
 * Set the sampler controller.
 * @param c the sampler controller.
 */
","/**
     * Set the sampler controller.
     *
     * @param c
     *            the sampler controller.
     */
    public void setSamplerController(LoopController c) {
        c.setContinueForever(false);
        setProperty(new TestElementProperty(MAIN_CONTROLLER, c));
    }",True,True,This method sets the sampler controller by calling the setContinueForever method on the provided LoopController object and then setting it as a property of the TestElement object.,True,"This code defines a method called ""setSamplerController"" that takes a LoopController object as a parameter. It sets the ""continueForever"" property of the LoopController to false and then sets the LoopController as a property of the current TestElement."
37,getNumThreads(),get num threads get the number of threads return the number of threads ,Method,,"org.apache.jmeter.engine.ConvertListeners+addNode(Object,HashTree) org.apache.jmeter.engine.StandardJMeterEngine+run()",org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsInt(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsInt(String),org.apache.jmeter.threads.ThreadGroup+NUM_THREADS,192,8,1,"/** 
 * Get the number of threads.
 * @return the number of threads.
 */
","/**
     * Get the number of threads.
     *
     * @return the number of threads.
     */
    public int getNumThreads() {
        return this.getPropertyAsInt(ThreadGroup.NUM_THREADS);
    }",True,True,This method returns the number of threads by calling the getPropertyAsInt method with the ThreadGroup.NUM_THREADS property.,True,"This code defines a method called ""getNumThreads"" that returns the number of threads. It retrieves the value from a property called ""NUM_THREADS"" using the ""getPropertyAsInt"" method. The method does not take any parameters."
38,addTestElement(TestElement),add test element child add a test element param child the test element to add ,Method,,,org.apache.jmeter.testelement.TestElement+addTestElement(TestElement) org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.testelement.TestElement+addTestElement(TestElement),,234,10,1,"/** 
 * Add a test element.
 * @param child the test element to add.
 */
","/**
     * Add a test element.
     *
     * @param child
     *            the test element to add.
     */
    @Override
    public void addTestElement(TestElement child) {
        getSamplerController().addTestElement(child);
    }",True,True,This method adds a test element to the sampler controller.,True,"The given code is a method called ""addTestElement"" that adds a test element to the sampler controller. It takes a parameter ""child"" which represents the test element to be added. The method overrides the same method from the parent class."
39,addIterationListener(LoopIterationListener),add iteration listener lis inherit doc ,Method,,,org.apache.jmeter.control.Controller+addIterationListener(LoopIterationListener) org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.control.Controller+addIterationListener(LoopIterationListener),,150,4,1,"/** 
 * {@inheritDoc} 
 */
","/** {@inheritDoc} */
    public void addIterationListener(LoopIterationListener lis) {
        getSamplerController().addIterationListener(lis);
    }",True,True,This method adds a loop iteration listener to the sampler controller.,True,"This code defines a method called ""addIterationListener"" that takes a LoopIterationListener as a parameter. It adds the listener to the SamplerController associated with the current object. The method is used to register a listener for loop iteration events."
40,initialize(),initialize inherit doc ,Method,,,org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.threads.ThreadGroup+getSamplerController() org.apache.jmeter.testelement.TestElement+getProperty(String) org.apache.jmeter.testelement.TestElement+getProperty(String) org.apache.jmeter.testelement.property.JMeterProperty+setObjectValue(Object) org.apache.jmeter.testelement.property.JMeterProperty+setObjectValue(Object) org.apache.jmeter.testelement.AbstractTestElement+getName() org.apache.jmeter.testelement.AbstractTestElement+getName() org.apache.jmeter.testelement.property.JMeterProperty+setRunningVersion(boolean) org.apache.jmeter.testelement.property.JMeterProperty+setRunningVersion(boolean) org.apache.jmeter.testelement.property.JMeterProperty+isRunningVersion() org.apache.jmeter.testelement.property.JMeterProperty+isRunningVersion() org.apache.jmeter.control.Controller+initialize() org.apache.jmeter.control.Controller+initialize(),org.apache.jmeter.testelement.TestElement+NAME,374,8,1,"/** 
 * {@inheritDoc} 
 */
","/** {@inheritDoc} */
    public void initialize() {
        Controller c = getSamplerController();
        JMeterProperty property = c.getProperty(TestElement.NAME);
        property.setObjectValue(getName()); // Copy our name into that of the controller
        property.setRunningVersion(property.isRunningVersion());// otherwise name reverts
        c.initialize();
    }",True,True,This method initializes a controller by setting its name and running version based on the current test element's name. It then calls the initialize method of the controller.,True,"This code initializes a JMeter test element by setting its name and running version. It retrieves the controller associated with the test element, copies the test element's name into the controller's name, and initializes the controller."
41,getOnErrorStopThread(),get on error stop thread check if a sampler error should cause thread to stop return true if thread should stop ,Method,,org.apache.jmeter.engine.StandardJMeterEngine+run() org.apache.jmeter.threads.gui.ThreadGroupGui+setSampleErrorBoxes(ThreadGroup),java.lang.String+equalsIgnoreCase(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsString(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsString(String) java.lang.String+equalsIgnoreCase(String),org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR_STOPTHREAD,281,8,1,"/** 
 * Check if a sampler error should cause thread to stop.
 * @return true if thread should stop
 */
","/**
     * Check if a sampler error should cause thread to stop.
     *
     * @return true if thread should stop
     */
    public boolean getOnErrorStopThread() {
        return getPropertyAsString(ThreadGroup.ON_SAMPLE_ERROR).equalsIgnoreCase(ON_SAMPLE_ERROR_STOPTHREAD);
    }",True,True,"This method checks if a sampler error should cause the thread to stop. It returns true if the thread should stop, and false otherwise.",True,"The given code is a method named ""getOnErrorStopThread"" that checks if a sampler error should cause the thread to stop. It returns a boolean value indicating whether the thread should stop or not based on the value of a property named ""ThreadGroup.ON_SAMPLE_ERROR""."
42,getOnErrorStopTest(),get on error stop test check if a sampler error should cause test to stop return true if test all threads should stop ,Method,,org.apache.jmeter.engine.StandardJMeterEngine+run() org.apache.jmeter.threads.gui.ThreadGroupGui+setSampleErrorBoxes(ThreadGroup),java.lang.String+equalsIgnoreCase(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsString(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsString(String) java.lang.String+equalsIgnoreCase(String),org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR_STOPTEST,287,8,1,"/** 
 * Check if a sampler error should cause test to stop.
 * @return true if test (all threads) should stop
 */
","/**
     * Check if a sampler error should cause test to stop.
     *
     * @return true if test (all threads) should stop
     */
    public boolean getOnErrorStopTest() {
        return getPropertyAsString(ThreadGroup.ON_SAMPLE_ERROR).equalsIgnoreCase(ON_SAMPLE_ERROR_STOPTEST);
    }",True,True,"This method checks if a sampler error should cause the test to stop. It returns true if the test (all threads) should stop, based on the value of a specific property.",True,"The given code is a method named ""getOnErrorStopTest"" that checks if a sampler error should cause the test to stop. It returns a boolean value indicating whether the test (all threads) should stop or not based on the value of a property named ""ThreadGroup.ON_SAMPLE_ERROR""."
43,getOnErrorStopTestNow(),get on error stop test now check if a sampler error should cause test to stop now return true if test all threads should stop immediately ,Method,,org.apache.jmeter.engine.StandardJMeterEngine+run() org.apache.jmeter.threads.gui.ThreadGroupGui+setSampleErrorBoxes(ThreadGroup),java.lang.String+equalsIgnoreCase(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsString(String) org.apache.jmeter.testelement.AbstractTestElement+getPropertyAsString(String) java.lang.String+equalsIgnoreCase(String),org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR_STOPTEST_NOW,310,8,1,"/** 
 * Check if a sampler error should cause test to stop now.
 * @return true if test (all threads) should stop immediately
 */
","/**
     * Check if a sampler error should cause test to stop now.
     *
     * @return true if test (all threads) should stop immediately
     */
    public boolean getOnErrorStopTestNow() {
        return getPropertyAsString(ThreadGroup.ON_SAMPLE_ERROR).equalsIgnoreCase(ON_SAMPLE_ERROR_STOPTEST_NOW);
    }",True,True,This method checks if a sampler error should cause the test to stop immediately. It returns true if the test (all threads) should stop now.,True,"The given code is a method named ""getOnErrorStopTestNow"" that checks if a sampler error should cause the test to stop immediately. It returns true if the property ""ThreadGroup.ON_SAMPLE_ERROR"" is equal to ""ON_SAMPLE_ERROR_STOPTEST_NOW"", indicating that the test should stop now."
