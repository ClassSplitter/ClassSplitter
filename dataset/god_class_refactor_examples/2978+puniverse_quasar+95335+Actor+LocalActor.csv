index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,serialVersionUID,Field,,,,,48,1,24,,static final long serialVersionUID = 894359345L;,False
2,currentActor,Field,,,,,80,1,26,,private static final ThreadLocal<Actor> currentActor = new ThreadLocal<Actor>();,False
3,strand,Field,setStrand(Strand) setStrand(Strand),,,,22,1,2,,private Strand strand;,False
4,name,Field,"Actor(String,int) setStrand(Strand)",,,,20,1,2,,private String name;,False
5,mailbox,Field,"Actor(String,int)",,,,38,1,18,,private final Mailbox<Object> mailbox;,True
6,lifecycleListeners,Field,,,,,139,1,18,,"private final Set<LifecycleListener> lifecycleListeners = Collections.newSetFromMap(new ConcurrentHashMapV8<LifecycleListener, Boolean>());",True
7,result,Field,,,,,26,1,66,,private volatile V result;,True
8,exception,Field,throwIn(RuntimeException),,,,44,1,66,,private volatile RuntimeException exception;,True
9,deathReason,Field,notifyDeath(Object),,,,36,1,66,,private volatile Object deathReason;,True
10,monitor,Field,register(Object) unregister(Object),,,,29,1,2,,private ActorMonitor monitor;,True
11,flightRecorder,Field,"Actor(String,int) Actor(String,int)",,,,46,1,20,,protected final FlightRecorder flightRecorder;,False
12,"Actor(String,int)",Method,,,co.paralleluniverse.strands.channels.Mailbox+create(int) co.paralleluniverse.strands.channels.Mailbox+create(int) co.paralleluniverse.common.util.Debug+isDebug() co.paralleluniverse.common.util.Debug+isDebug() co.paralleluniverse.common.util.Debug+getGlobalFlightRecorder() co.paralleluniverse.common.util.Debug+getGlobalFlightRecorder(),"co.paralleluniverse.actors.Actor<Message,V>+name co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor<Message,V>+mailbox co.paralleluniverse.actors.Actor+mailbox co.paralleluniverse.actors.Actor<Message,V>+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor<Message,V>+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder",278,9,1,,"public Actor(String name, int mailboxSize) {
        this.name = name;
        this.mailbox = Mailbox.create(mailboxSize);

        if (Debug.isDebug())
            this.flightRecorder = Debug.getGlobalFlightRecorder();
        else
            this.flightRecorder = null;
    }",True
13,"Actor(Strand,String,int)",Method,,,co.paralleluniverse.actors.Actor+setStrand(Strand) co.paralleluniverse.actors.Actor+setStrand(Strand),,125,4,1,,"public Actor(Strand strand, String name, int mailboxSize) {
        this(name, mailboxSize);
        setStrand(strand);
    }",True
14,currentActor(),Method,,,co.paralleluniverse.fibers.Fiber+currentFiber() co.paralleluniverse.fibers.Fiber+currentFiber() java.lang.ThreadLocal+get() java.lang.ThreadLocal+get() co.paralleluniverse.fibers.Fiber+getTarget() co.paralleluniverse.fibers.Fiber+getTarget(),co.paralleluniverse.actors.Actor+currentActor,355,9,9,,"public static Actor currentActor() {
        final Fiber currentFiber = Fiber.currentFiber();
        if (currentFiber == null)
            return currentActor.get();
        final SuspendableCallable target = currentFiber.getTarget();
        if (target == null || !(target instanceof Actor))
            return null;
        return (Actor) target;
    }",True
15,setStrand(Strand),Method,"Actor(Strand,String,int) run()",,java.lang.IllegalStateException+IllegalStateException(String) co.paralleluniverse.strands.Strand+getName() co.paralleluniverse.strands.Strand+getName() co.paralleluniverse.strands.channels.Channel+setStrand(Strand) co.paralleluniverse.strands.channels.Channel+setStrand(Strand),"co.paralleluniverse.actors.Actor<Message,V>+strand co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor<Message,V>+strand co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor<Message,V>+name co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor+mailbox",304,8,17,,"@Override
    public final void setStrand(Strand strand) {
        if (this.strand != null)
            throw new IllegalStateException(""Strand already set to "" + strand);
        this.strand = strand;
        this.name = (name != null ? name : strand.getName());
        mailbox.setStrand(strand);
    }",True
16,getStrand(),Method,,,,co.paralleluniverse.actors.Actor+strand,70,4,1,,"@Override
    public Strand getStrand() {
        return strand;
    }",True
17,toString(),Method,,,java.lang.Integer+toHexString(int) java.lang.Integer+toHexString(int) java.lang.System+identityHashCode(Object) java.lang.System+identityHashCode(Object),co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor+strand,176,4,1,,"@Override
    public String toString() {
        return ""Actor@"" + (name != null ? name : Integer.toHexString(System.identityHashCode(this))) + ""[owner: "" + strand + ']';
    }",False
18,getQueueLength(),Method,,co.paralleluniverse.actors.JMXActorMonitor+getQueueLength(),co.paralleluniverse.strands.channels.Channel+getQueueLength() co.paralleluniverse.strands.channels.Channel+getQueueLength(),co.paralleluniverse.actors.Actor+mailbox,76,3,1,,"public int getQueueLength() {
        return mailbox.getQueueLength();
    }",True
19,newActorMonitor(String),Method,,"co.paralleluniverse.actors.ActorRegistry+register(Object,Actor)",co.paralleluniverse.actors.JMXActorMonitor+JMXActorMonitor(String),,98,3,8,,"static ActorMonitor newActorMonitor(String name) {
        return new JMXActorMonitor(name);
    }",True
20,randtag(),Method,,,"java.math.BigInteger+BigInteger(int,Random) java.util.concurrent.ThreadLocalRandom+current() java.util.concurrent.ThreadLocalRandom+current()",,102,3,9,,"public static Object randtag() {
        return new BigInteger(80, ThreadLocalRandom.current());
    }",True
21,mailbox(),Method,,"co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)",,co.paralleluniverse.actors.Actor+mailbox,57,3,0,,"Mailbox<Object> mailbox() {
        return mailbox;
    }",False
22,getMailbox(),Method,,,,co.paralleluniverse.actors.Actor+mailbox,91,3,1,,"public SendChannel<Message> getMailbox() {
        return (Channel<Message>) mailbox;
    }",False
23,receive(),Method,"receive(long,TimeUnit)",co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.RingBenchmark+doRun() co.paralleluniverse.actors.RingBenchmark+doRun(),"co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.actors.Actor+record(int,String,String,String,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object) co.paralleluniverse.strands.channels.Channel+receive() co.paralleluniverse.strands.channels.Channel+receive() co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+monitorAddMessage() co.paralleluniverse.actors.Actor+monitorAddMessage() co.paralleluniverse.actors.Actor+handleLifecycleMessage(LifecycleMessage) co.paralleluniverse.actors.Actor+handleLifecycleMessage(LifecycleMessage)",co.paralleluniverse.actors.Actor+mailbox,526,13,4,,"protected Message receive() throws SuspendExecution, InterruptedException {
        for (;;) {
            checkThrownIn();
            record(1, ""Actor"", ""receive"", ""%s waiting for a message"", this);
            Object m = mailbox.receive();
            record(1, ""Actor"", ""receive"", ""Received %s <- %s"", this, m);
            monitorAddMessage();
            if (m instanceof LifecycleMessage)
                handleLifecycleMessage((LifecycleMessage) m);
            else
                return (Message) m;
        }
    }",True
24,"receive(long,TimeUnit)",Method,,co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun(),"co.paralleluniverse.actors.Actor+receive() co.paralleluniverse.actors.Actor+receive() java.lang.System+nanoTime() java.lang.System+nanoTime() java.util.concurrent.TimeUnit+toNanos(long) java.util.concurrent.TimeUnit+toNanos(long) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) java.util.concurrent.TimeUnit+convert(long,TimeUnit) java.util.concurrent.TimeUnit+convert(long,TimeUnit) co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.strands.channels.Channel+receive(long,TimeUnit) co.paralleluniverse.strands.channels.Channel+receive(long,TimeUnit) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+monitorAddMessage() co.paralleluniverse.actors.Actor+monitorAddMessage() co.paralleluniverse.actors.Actor+handleLifecycleMessage(LifecycleMessage) co.paralleluniverse.actors.Actor+handleLifecycleMessage(LifecycleMessage) java.lang.System+nanoTime() java.lang.System+nanoTime() java.util.concurrent.TimeUnit+toNanos(long) java.util.concurrent.TimeUnit+toNanos(long) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object)",co.paralleluniverse.actors.Actor+flightRecorder java.util.concurrent.TimeUnit+MILLISECONDS java.util.concurrent.TimeUnit+NANOSECONDS co.paralleluniverse.actors.Actor+mailbox java.util.concurrent.TimeUnit+NANOSECONDS,1177,31,4,,"protected Message receive(long timeout, TimeUnit unit) throws SuspendExecution, InterruptedException {
        if (timeout <= 0 || unit == null)
            return receive();

        final long start = System.nanoTime();
        long now;
        long left = unit.toNanos(timeout);

        for (;;) {
            if (flightRecorder != null)
                record(1, ""Actor"", ""receive"", ""%s waiting for a message. millis left: "", this, TimeUnit.MILLISECONDS.convert(left, TimeUnit.NANOSECONDS));
            checkThrownIn();
            Object m = mailbox.receive(left, TimeUnit.NANOSECONDS);
            if(m != null) {
                record(1, ""Actor"", ""receive"", ""Received %s <- %s"", this, m);
                monitorAddMessage();
            }
            
            if (m instanceof LifecycleMessage)
                handleLifecycleMessage((LifecycleMessage) m);
            else
                return (Message) m;

            now = System.nanoTime();
            left = start + unit.toNanos(timeout) - now;
            if (left <= 0) {
                record(1, ""Actor"", ""receive"", ""%s timed out."", this);
                return null;
            }
        }
    }",True
25,tryReceive(),Method,,,"co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.strands.channels.Channel+tryReceive() co.paralleluniverse.strands.channels.Channel+tryReceive() co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+monitorAddMessage() co.paralleluniverse.actors.Actor+monitorAddMessage() co.paralleluniverse.actors.Actor+handleLifecycleMessage(LifecycleMessage) co.paralleluniverse.actors.Actor+handleLifecycleMessage(LifecycleMessage)",co.paralleluniverse.actors.Actor+mailbox,468,14,4,,"protected Message tryReceive() {
        for (;;) {
            checkThrownIn();
            Object m = mailbox.tryReceive();
            if (m == null)
                return null;
            record(1, ""Actor"", ""tryReceive"", ""Received %s <- %s"", this, m);
            monitorAddMessage();
            if (m instanceof LifecycleMessage)
                handleLifecycleMessage((LifecycleMessage) m);
            else
                return (Message) m;
        }
    }",True
26,send(Message),Method,,co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.ActorTest+doRun() co.paralleluniverse.actors.RingBenchmark+doRun() co.paralleluniverse.actors.RingBenchmark+doRun() co.paralleluniverse.actors.RingBenchmark+doRun(),"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.strands.channels.Channel+isOwnerAlive() co.paralleluniverse.strands.channels.Channel+isOwnerAlive() co.paralleluniverse.strands.channels.Channel+send(Message) co.paralleluniverse.strands.channels.Channel+send(Message) co.paralleluniverse.actors.Actor+record(int,String,String,String) co.paralleluniverse.actors.Actor+record(int,String,String,String) co.paralleluniverse.actors.Actor+throwIn(RuntimeException) co.paralleluniverse.actors.Actor+throwIn(RuntimeException)",co.paralleluniverse.actors.Actor+mailbox co.paralleluniverse.actors.Actor+mailbox,394,11,1,,"public void send(Message message) {
        try {
            record(1, ""Actor"", ""send"", ""Sending %s -> %s"", message, this);
            if (mailbox.isOwnerAlive())
                mailbox.send(message);
            else
                record(1, ""Actor"", ""send"", ""Message dropped. Owner not alive."");
        } catch (QueueCapacityExceededException e) {
            throwIn(e);
        }
    }",False
27,sendSync(Message),Method,,co.paralleluniverse.actors.ActorTest+doRun(),"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.strands.channels.Channel+isOwnerAlive() co.paralleluniverse.strands.channels.Channel+isOwnerAlive() co.paralleluniverse.strands.channels.Channel+sendSync(Message) co.paralleluniverse.strands.channels.Channel+sendSync(Message) co.paralleluniverse.actors.Actor+record(int,String,String,String) co.paralleluniverse.actors.Actor+record(int,String,String,String) co.paralleluniverse.actors.Actor+throwIn(RuntimeException) co.paralleluniverse.actors.Actor+throwIn(RuntimeException)",co.paralleluniverse.actors.Actor+mailbox co.paralleluniverse.actors.Actor+mailbox,415,11,1,,"public void sendSync(Message message) {
        try {
            record(1, ""Actor"", ""sendSync"", ""Sending sync %s -> %s"", message, this);
            if (mailbox.isOwnerAlive())
                mailbox.sendSync(message);
            else
                record(1, ""Actor"", ""sendSync"", ""Message dropped. Owner not alive."");
        } catch (QueueCapacityExceededException e) {
            throwIn(e);
        }
    }",False
28,writeReplace(),Method,,,java.lang.UnsupportedOperationException+UnsupportedOperationException(),,171,4,4,,"protected Object writeReplace() throws java.io.ObjectStreamException {
        //return new SerializedActor(this);
        throw new UnsupportedOperationException();
    }",True
29,SerializedActor,MemberClass,,,co.paralleluniverse.actors.Actor.SerializedActor+SerializedActor(Actor) co.paralleluniverse.actors.Actor.SerializedActor+SerializedActor() co.paralleluniverse.actors.Actor.SerializedActor+readResolve() java.lang.UnsupportedOperationException+UnsupportedOperationException(),co.paralleluniverse.actors.Actor.SerializedActor+serialVersionUID co.paralleluniverse.actors.Actor.SerializedActor+actor co.paralleluniverse.actors.Actor.SerializedActor+actor,481,16,12,,"protected static class SerializedActor implements java.io.Serializable {
        static final long serialVersionUID = 894359345L;
        private Actor actor;

        public SerializedActor(Actor actor) {
            this.actor = actor;
        }

        public SerializedActor() {
        }

        protected Object readResolve() throws java.io.ObjectStreamException {
            // return new Actor(...);
            throw new UnsupportedOperationException();
        }
    }",True
30,start(),Method,,,"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object) co.paralleluniverse.strands.Strand+start() co.paralleluniverse.strands.Strand+start()",co.paralleluniverse.actors.Actor+strand,142,5,0,,"Actor<Message, V> start() {
        record(1, ""Actor"", ""start"", ""Starting actor %s"", this);
        strand.start();
        return this;
    }",True
31,get(),Method,,,co.paralleluniverse.fibers.Fiber+get() co.paralleluniverse.fibers.Fiber+get() co.paralleluniverse.strands.Strand+join() co.paralleluniverse.strands.Strand+join(),co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+result,246,9,1,,"@Override
    public V get() throws InterruptedException, ExecutionException {
        if (strand instanceof Fiber)
            return ((Fiber<V>) strand).get();
        else {
            strand.join();
            return result;
        }
    }",True
32,"get(long,TimeUnit)",Method,,,"co.paralleluniverse.fibers.Fiber+get(long,TimeUnit) co.paralleluniverse.fibers.Fiber+get(long,TimeUnit) co.paralleluniverse.strands.Strand+join(long,TimeUnit) co.paralleluniverse.strands.Strand+join(long,TimeUnit)",co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+result,317,9,1,,"@Override
    public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
        if (strand instanceof Fiber)
            return ((Fiber<V>) strand).get(timeout, unit);
        else {
            strand.join(timeout, unit);
            return result;
        }
    }",True
33,join(),Method,,,co.paralleluniverse.strands.Strand+join() co.paralleluniverse.strands.Strand+join(),co.paralleluniverse.actors.Actor+strand,111,4,1,,"@Override
    public void join() throws ExecutionException, InterruptedException {
        strand.join();
    }",True
34,"join(long,TimeUnit)",Method,,,"co.paralleluniverse.strands.Strand+join(long,TimeUnit) co.paralleluniverse.strands.Strand+join(long,TimeUnit)",co.paralleluniverse.actors.Actor+strand,169,4,1,,"@Override
    public void join(long timeout, TimeUnit unit) throws ExecutionException, InterruptedException, TimeoutException {
        strand.join(timeout, unit);
    }",True
35,isDone(),Method,link(Actor) link(Actor) link(Actor) link(Actor),"co.paralleluniverse.actors.ActorRegistry+register(Object,Actor)",co.paralleluniverse.strands.Strand+isAlive() co.paralleluniverse.strands.Strand+isAlive(),co.paralleluniverse.actors.Actor+strand,79,4,1,,"@Override
    public boolean isDone() {
        return !strand.isAlive();
    }",True
36,run(),Method,,,co.paralleluniverse.actors.Actor+setStrand(Strand) co.paralleluniverse.actors.Actor+setStrand(Strand) co.paralleluniverse.strands.Strand+currentStrand() co.paralleluniverse.strands.Strand+currentStrand() java.lang.ThreadLocal+set(T) java.lang.ThreadLocal+set(T) co.paralleluniverse.actors.Actor+doRun() co.paralleluniverse.actors.Actor+doRun() co.paralleluniverse.actors.Actor+notifyDeath(Object) co.paralleluniverse.actors.Actor+notifyDeath(Object) co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.actors.Actor+checkThrownIn() co.paralleluniverse.actors.Actor+notifyDeath(Object) co.paralleluniverse.actors.Actor+notifyDeath(Object) co.paralleluniverse.actors.Actor+notifyDeath(Object) co.paralleluniverse.actors.Actor+notifyDeath(Object) java.lang.ThreadLocal+set(T) java.lang.ThreadLocal+set(T),co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+currentActor co.paralleluniverse.actors.Actor+result co.paralleluniverse.actors.Actor+result co.paralleluniverse.actors.Actor+strand co.paralleluniverse.actors.Actor+currentActor,657,22,17,,"@Override
    public final V run() throws InterruptedException, SuspendExecution {
        if (strand == null)
            setStrand(Strand.currentStrand());
        if (!(strand instanceof Fiber))
            currentActor.set(this);
        try {
            result = doRun();
            notifyDeath(null);
            return result;
        } catch (InterruptedException e) {
            checkThrownIn();
            notifyDeath(e);
            throw e;
        } catch (Throwable t) {
            notifyDeath(t);
            throw t;
        } finally {
            if (!(strand instanceof Fiber))
                currentActor.set(this);
        }
    }",True
37,doRun(),Method,run(),,,,75,1,1028,,"protected abstract V doRun() throws InterruptedException, SuspendExecution;",False
38,handleLifecycleMessage(LifecycleMessage),Method,"receive() receive(long,TimeUnit) tryReceive()","co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)","co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.ExitMessage+getMonitor() co.paralleluniverse.actors.ExitMessage+getMonitor() co.paralleluniverse.actors.LifecycleException+LifecycleException(LifecycleMessage)",,283,5,4,,"protected void handleLifecycleMessage(LifecycleMessage m) {
        record(1, ""Actor"", ""handleLifecycleMessage"", ""%s got LifecycleMessage %s"", this, m);
        if (m instanceof ExitMessage && ((ExitMessage) m).getMonitor() == null)
            throw new LifecycleException(m);
    }",True
39,getName(),Method,register(),,,co.paralleluniverse.actors.Actor+name,52,3,1,,"public String getName() {
        return name;
    }",False
40,throwIn(RuntimeException),Method,send(Message) sendSync(Message),,"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.strands.Strand+interrupt() co.paralleluniverse.strands.Strand+interrupt()","co.paralleluniverse.actors.Actor<Message,V>+exception co.paralleluniverse.actors.Actor+exception co.paralleluniverse.actors.Actor+strand",221,5,1,,"public void throwIn(RuntimeException e) {
        record(1, ""Actor"", ""throwIn"", ""Exception %s thrown into actor %s"", e, this);
        this.exception = e; // last exception thrown in wins
        strand.interrupt();
    }",True
41,checkThrownIn(),Method,"receive() receive(long,TimeUnit) tryReceive() run()","co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)","co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) java.lang.Throwable+setStackTrace(StackTraceElement[]) java.lang.Throwable+setStackTrace(StackTraceElement[]) java.lang.Throwable+getStackTrace() java.lang.Throwable+Throwable() java.lang.Throwable+getStackTrace()",co.paralleluniverse.actors.Actor+exception co.paralleluniverse.actors.Actor+exception co.paralleluniverse.actors.Actor+exception co.paralleluniverse.actors.Actor+exception,274,7,0,,"void checkThrownIn() {
        if (exception != null) {
            record(1, ""Actor"", ""checkThrownIn"", ""%s detected thrown in exception %s"", this, exception);
            exception.setStackTrace(new Throwable().getStackTrace());
            throw exception;
        }
    }",True
42,register(Object),Method,register(),,"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.ActorRegistry+register(Object,Actor) co.paralleluniverse.actors.ActorRegistry+register(Object,Actor) co.paralleluniverse.actors.Actor+monitorAddRestart() co.paralleluniverse.actors.Actor+monitorAddRestart()","co.paralleluniverse.actors.Actor<Message,V>+monitor co.paralleluniverse.actors.Actor+monitor",233,6,1,,"public Actor register(Object name) {
        record(1, ""Actor"", ""register"", ""Registering actor %s as %s"", this, name);
        this.monitor = ActorRegistry.register(name, this);
        monitorAddRestart();
        return this;
    }",True
43,register(),Method,,,co.paralleluniverse.actors.Actor+register(Object) co.paralleluniverse.actors.Actor+register(Object) co.paralleluniverse.actors.Actor+getName() co.paralleluniverse.actors.Actor+getName(),,67,3,1,,"public Actor register() {
        return register(getName());
    }",True
44,unregister(),Method,,,"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object) java.lang.IllegalArgumentException+IllegalArgumentException(String) co.paralleluniverse.actors.Actor+unregister(Object) co.paralleluniverse.actors.Actor+unregister(Object)",co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor+name co.paralleluniverse.actors.Actor+name,255,7,1,,"public Actor unregister() {
        record(1, ""Actor"", ""unregister"", ""Unregistering actor %s (name: %s)"", name);
        if (name == null)
            throw new IllegalArgumentException(""name is null"");
        unregister(name);
        return this;
    }",True
45,unregister(Object),Method,unregister(),,co.paralleluniverse.actors.ActorRegistry+unregister(Object) co.paralleluniverse.actors.ActorRegistry+unregister(Object),"co.paralleluniverse.actors.Actor<Message,V>+monitor co.paralleluniverse.actors.Actor+monitor",134,5,1,,"public Actor unregister(Object name) {
        ActorRegistry.unregister(name);
        this.monitor = null;
        return this;
    }",False
46,getActor(Object),Method,,,co.paralleluniverse.actors.ActorRegistry+getActor(Object) co.paralleluniverse.actors.ActorRegistry+getActor(Object),,94,3,9,,"public static Actor getActor(Object name) {
        return ActorRegistry.getActor(name);
    }",False
47,link(Actor),Method,,,"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.LifecycleListener+dead(Actor,Object) co.paralleluniverse.actors.LifecycleListener+dead(Actor,Object) co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.Actor+isDone() co.paralleluniverse.actors.LifecycleListener+dead(Actor,Object) co.paralleluniverse.actors.LifecycleListener+dead(Actor,Object) java.util.Set+add(E) java.util.Set+add(E) java.util.Set+add(E) java.util.Set+add(E)","co.paralleluniverse.actors.Actor+lifecycleListener co.paralleluniverse.actors.Actor+deathReason co.paralleluniverse.actors.Actor<Message,V>+lifecycleListener co.paralleluniverse.actors.Actor+lifecycleListener co.paralleluniverse.actors.Actor+deathReason co.paralleluniverse.actors.Actor+lifecycleListeners co.paralleluniverse.actors.Actor+lifecycleListener co.paralleluniverse.actors.Actor+lifecycleListeners co.paralleluniverse.actors.Actor+lifecycleListener",559,14,1,,"public Actor link(Actor other) {
        record(1, ""Actor"", ""link"", ""Linking actors %s, %s"", this, other);
        if (!this.isDone() || !other.isDone()) {
            if (this.isDone())
                other.lifecycleListener.dead(this, deathReason);
            else if (other.isDone())
                this.lifecycleListener.dead(other, other.deathReason);
            else {
                lifecycleListeners.add(other.lifecycleListener);
                other.lifecycleListeners.add(lifecycleListener);
            }
        }
        return this;
    }",False
48,unlink(Actor),Method,,,"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object) java.util.Set+remove(Object) java.util.Set+remove(Object) java.util.Set+remove(Object) java.util.Set+remove(Object)",co.paralleluniverse.actors.Actor+lifecycleListeners co.paralleluniverse.actors.Actor+lifecycleListener co.paralleluniverse.actors.Actor+lifecycleListeners co.paralleluniverse.actors.Actor+lifecycleListener,258,6,1,,"public Actor unlink(Actor other) {
        record(1, ""Actor"", ""unlink"", ""Uninking actors %s, %s"", this, other);
        lifecycleListeners.remove(other.lifecycleListener);
        other.lifecycleListeners.remove(lifecycleListener);
        return this;
    }",False
49,monitor(Actor),Method,,,"+() +dead(Actor,Object)",,554,15,1,,"public Object monitor(Actor other) {
        LifecycleListener listener = new LifecycleListener() {
            @Override
            public void dead(Actor actor, Object reason) {
                mailbox.send(new ExitMessage(actor, reason, this));
            }
        };
        record(1, ""Actor"", ""monitor"", ""Actor %s to monitor %s (listener: %s)"", this, other, listener);

        if (other.isDone())
            listener.dead(other, other.deathReason);
        else
            other.lifecycleListeners.add(listener);
        return listener;
    }",False
50,"demonitor(Actor,Object)",Method,,,"co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object,Object) co.paralleluniverse.actors.Actor+record(int,String,String,String,Object,Object,Object) java.util.Set+remove(Object) java.util.Set+remove(Object)",co.paralleluniverse.actors.Actor+lifecycleListeners,223,4,1,,"public void demonitor(Actor other, Object listener) {
        record(1, ""Actor"", ""demonitor"", ""Actor %s to stop monitoring %s (listener: %s)"", this, other, listener);
        other.lifecycleListeners.remove(listener);
    }",False
51,notifyDeath(Object),Method,run() run() run(),,"co.paralleluniverse.actors.Actor+monitorAddDeath(Object) co.paralleluniverse.actors.Actor+monitorAddDeath(Object) co.paralleluniverse.actors.LifecycleListener+dead(Actor,Object) co.paralleluniverse.actors.LifecycleListener+dead(Actor,Object)","co.paralleluniverse.actors.Actor<Message,V>+deathReason co.paralleluniverse.actors.Actor+deathReason co.paralleluniverse.actors.Actor+lifecycleListeners",218,6,2,,"private void notifyDeath(Object reason) {
        this.deathReason = reason;
        monitorAddDeath(reason);
        for (LifecycleListener listener : lifecycleListeners)
            listener.dead(this, reason);
    }",True
52,lifecycleListener,Field,link(Actor),,,,225,6,18,,"private final LifecycleListener lifecycleListener = new LifecycleListener() {
        @Override
        public void dead(Actor actor, Object reason) {
            mailbox.send(new ExitMessage(actor, reason));
        }
    };",True
53,monitorAddDeath(Object),Method,notifyDeath(Object),,co.paralleluniverse.actors.ActorMonitor+addDeath(Object) co.paralleluniverse.actors.ActorMonitor+addDeath(Object),co.paralleluniverse.actors.Actor+monitor co.paralleluniverse.actors.Actor+monitor,126,4,20,,"protected final void monitorAddDeath(Object reason) {
        if (monitor != null)
            monitor.addDeath(reason);
    }",True
54,monitorAddRestart(),Method,register(Object),,co.paralleluniverse.actors.ActorMonitor+addRestart() co.paralleluniverse.actors.ActorMonitor+addRestart(),co.paralleluniverse.actors.Actor+monitor co.paralleluniverse.actors.Actor+monitor,112,4,20,,"protected final  void monitorAddRestart() {
        if (monitor != null)
            monitor.addRestart();
    }",True
55,monitorAddMessage(),Method,"receive() receive(long,TimeUnit) tryReceive()","co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)",co.paralleluniverse.actors.ActorMonitor+addMessage() co.paralleluniverse.actors.ActorMonitor+addMessage(),co.paralleluniverse.actors.Actor+monitor co.paralleluniverse.actors.Actor+monitor,112,4,20,,"protected final  void monitorAddMessage() {
        if (monitor != null)
            monitor.addMessage();
    }",True
56,monitorSkippedMessage(),Method,,"co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)",co.paralleluniverse.actors.ActorMonitor+skippedMessage() co.paralleluniverse.actors.ActorMonitor+skippedMessage(),co.paralleluniverse.actors.Actor+monitor co.paralleluniverse.actors.Actor+monitor,119,4,20,,"protected final void monitorSkippedMessage() {
        if (monitor != null)
            monitor.skippedMessage();
    }",True
57,monitorResetSkippedMessages(),Method,,"co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)",co.paralleluniverse.actors.ActorMonitor+resetSkippedMessages() co.paralleluniverse.actors.ActorMonitor+resetSkippedMessages(),co.paralleluniverse.actors.Actor+monitor co.paralleluniverse.actors.Actor+monitor,131,4,20,,"protected final void monitorResetSkippedMessages() {
        if (monitor != null)
            monitor.resetSkippedMessages();
    }",True
58,"record(int,String,String,String)",Method,send(Message) sendSync(Message),,"co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String) co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String) co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.common.monitoring.FlightRecorder+get()",co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder,198,4,20,,"protected final void record(int level, String clazz, String method, String format) {
        if (flightRecorder != null)
            record(flightRecorder.get(), level, clazz, method, format);
    }",False
59,"record(int,String,String,String,Object)",Method,"receive() receive(long,TimeUnit) start() unregister()","co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)","co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object) co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object) co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object[]) co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object[]) co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.common.monitoring.FlightRecorder+get()",co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder,217,4,20,,"protected final void record(int level, String clazz, String method, String format, Object arg1) {
        if (flightRecorder != null)
            record(flightRecorder.get(), level, clazz, method, format, arg1);
    }",False
60,"record(int,String,String,String,Object,Object)",Method,"receive() receive(long,TimeUnit) receive(long,TimeUnit) tryReceive() send(Message) sendSync(Message) handleLifecycleMessage(LifecycleMessage) throwIn(RuntimeException) checkThrownIn() register(Object) link(Actor) unlink(Actor)","co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>) co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)","co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object) co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object) co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.common.monitoring.FlightRecorder+get()",co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder,236,4,20,,"protected final void record(int level, String clazz, String method, String format, Object arg1, Object arg2) {
        if (flightRecorder != null)
            record(flightRecorder.get(), level, clazz, method, format, arg1, arg2);
    }",False
61,"record(int,String,String,String,Object,Object,Object)",Method,"demonitor(Actor,Object)",,"co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object,Object) co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object,Object) co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.common.monitoring.FlightRecorder+get()",co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder,255,4,20,,"protected final void record(int level, String clazz, String method, String format, Object arg1, Object arg2, Object arg3) {
        if (flightRecorder != null)
            record(flightRecorder.get(), level, clazz, method, format, arg1, arg2, arg3);
    }",False
62,"record(int,String,String,String,Object,Object,Object,Object)",Method,,,"co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object,Object,Object) co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object,Object,Object) co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.common.monitoring.FlightRecorder+get()",co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder,274,4,20,,"protected final void record(int level, String clazz, String method, String format, Object arg1, Object arg2, Object arg3, Object arg4) {
        if (flightRecorder != null)
            record(flightRecorder.get(), level, clazz, method, format, arg1, arg2, arg3, arg4);
    }",False
63,"record(int,String,String,String,Object,Object,Object,Object,Object)",Method,,,"co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object,Object,Object,Object) co.paralleluniverse.actors.Actor+record(ThreadRecorder,int,String,String,String,Object,Object,Object,Object,Object) co.paralleluniverse.common.monitoring.FlightRecorder+get() co.paralleluniverse.common.monitoring.FlightRecorder+get()",co.paralleluniverse.actors.Actor+flightRecorder co.paralleluniverse.actors.Actor+flightRecorder,293,4,20,,"protected final void record(int level, String clazz, String method, String format, Object arg1, Object arg2, Object arg3, Object arg4, Object arg5) {
        if (flightRecorder != null)
            record(flightRecorder.get(), level, clazz, method, format, arg1, arg2, arg3, arg4, arg5);
    }",False
64,"record(int,String,String,String,Object)",Method,"receive() receive(long,TimeUnit) start() unregister()","co.paralleluniverse.actors.BasicActor+receive(long,TimeUnit,MessageProcessor<Message>)",,,220,4,20,,"protected final void record(int level, String clazz, String method, String format, Object... args) {
        if (flightRecorder != null)
            record(flightRecorder.get(), level, clazz, method, format, args);
    }",False
65,"record(FlightRecorder.ThreadRecorder,int,String,String,String)",Method,,,"co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[])",,261,4,10,,"private static void record(FlightRecorder.ThreadRecorder recorder, int level, String clazz, String method, String format) {
        if (recorder != null)
            recorder.record(level, makeFlightRecorderMessage(recorder, clazz, method, format, null));
    }",False
66,"record(FlightRecorder.ThreadRecorder,int,String,String,String,Object)",Method,,,"co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[])",,288,4,10,,"private static void record(FlightRecorder.ThreadRecorder recorder, int level, String clazz, String method, String format, Object arg1) {
        if (recorder != null)
            recorder.record(level, makeFlightRecorderMessage(recorder, clazz, method, format, new Object[]{arg1}));
    }",False
67,"record(FlightRecorder.ThreadRecorder,int,String,String,String,Object,Object)",Method,,,"co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[])",,307,4,10,,"private static void record(FlightRecorder.ThreadRecorder recorder, int level, String clazz, String method, String format, Object arg1, Object arg2) {
        if (recorder != null)
            recorder.record(level, makeFlightRecorderMessage(recorder, clazz, method, format, new Object[]{arg1, arg2}));
    }",False
68,"record(FlightRecorder.ThreadRecorder,int,String,String,String,Object,Object,Object)",Method,,,"co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[])",,326,4,10,,"private static void record(FlightRecorder.ThreadRecorder recorder, int level, String clazz, String method, String format, Object arg1, Object arg2, Object arg3) {
        if (recorder != null)
            recorder.record(level, makeFlightRecorderMessage(recorder, clazz, method, format, new Object[]{arg1, arg2, arg3}));
    }",False
69,"record(FlightRecorder.ThreadRecorder,int,String,String,String,Object,Object,Object,Object)",Method,,,"co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[])",,345,4,10,,"private static void record(FlightRecorder.ThreadRecorder recorder, int level, String clazz, String method, String format, Object arg1, Object arg2, Object arg3, Object arg4) {
        if (recorder != null)
            recorder.record(level, makeFlightRecorderMessage(recorder, clazz, method, format, new Object[]{arg1, arg2, arg3, arg4}));
    }",False
70,"record(FlightRecorder.ThreadRecorder,int,String,String,String,Object,Object,Object,Object,Object)",Method,,,"co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.common.monitoring.FlightRecorder.ThreadRecorder+record(int,Object) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[]) co.paralleluniverse.actors.Actor+makeFlightRecorderMessage(ThreadRecorder,String,String,String,Object[])",,364,4,10,,"private static void record(FlightRecorder.ThreadRecorder recorder, int level, String clazz, String method, String format, Object arg1, Object arg2, Object arg3, Object arg4, Object arg5) {
        if (recorder != null)
            recorder.record(level, makeFlightRecorderMessage(recorder, clazz, method, format, new Object[]{arg1, arg2, arg3, arg4, arg5}));
    }",False
71,"record(FlightRecorder.ThreadRecorder,int,String,String,String,Object)",Method,,,,,277,4,10,,"private static void record(FlightRecorder.ThreadRecorder recorder, int level, String clazz, String method, String format, Object... args) {
        if (recorder != null)
            recorder.record(level, makeFlightRecorderMessage(recorder, clazz, method, format, args));
    }",False
72,"makeFlightRecorderMessage(FlightRecorder.ThreadRecorder,String,String,String,Object[])",Method,,,"co.paralleluniverse.common.monitoring.FlightRecorderMessage+FlightRecorderMessage(String,String,String,Object[])",,364,4,10,,"private static FlightRecorderMessage makeFlightRecorderMessage(FlightRecorder.ThreadRecorder recorder, String clazz, String method, String format, Object[] args) {
        return new FlightRecorderMessage(clazz, method, format, args);
        //return ((FlightRecorderMessageFactory) recorder.getAux()).makeFlightRecorderMessage(clazz, method, format, args);
    }",False
