index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,LOG,Field,,,,,90,1,26,,private static final Logger LOG = LoggerFactory.getLogger(CasioGB6900DeviceSupport.class);,False
2,mCasioCharacteristics,Field,,,,,122,1,18,,private final ArrayList<BluetoothGattCharacteristic> mCasioCharacteristics = new ArrayList<BluetoothGattCharacteristic>();,False
3,mHandlerThread,Field,,,,,49,1,2,,private CasioHandlerThread mHandlerThread = null;,False
4,mBufferMusicSpec,Field,,,,,42,1,2,,private MusicSpec mBufferMusicSpec = null;,False
5,mBufferMusicStateSpec,Field,,,,,52,1,2,,private MusicStateSpec mBufferMusicStateSpec = null;,False
6,mBtGatt,Field,,,,,37,1,2,,private BluetoothGatt mBtGatt = null;,False
7,mModel,Field,,,,,79,1,2,,private CasioConstants.Model mModel = CasioConstants.Model.MODEL_CASIO_GENERIC;,False
8,mFirstConnect,Field,,,,,38,1,2,,private boolean mFirstConnect = false;,False
9,mCasioSleepTime,Field,,,,,46,1,26,,private static final int mCasioSleepTime = 50;,False
10,CasioGB6900DeviceSupport(),Method,,,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) java.lang.Object+Object() java.lang.Object+Object() java.lang.Object+Object() java.lang.String+getBytes() java.lang.String+getBytes() java.lang.Object+Object() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedServerService(BluetoothGattService) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedServerService(BluetoothGattService),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.btle.GattService+UUID_SERVICE_IMMEDIATE_ALERT nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_VIRTUAL_SERVER_SERVICE nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+ALERT_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_IMMEDIATE_ALERT_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CURRENT_TIME_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+WATCH_CTRL_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+WATCH_FEATURES_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_PHONE_ALERT_STATUS_SERVICE nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+MORE_ALERT_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+TX_POWER_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+LINK_LOSS_SERVICE nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+IMMEDIATE_ALERT_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+WATCH_CTRL_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+KEY_CONTAINER_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+NAME_OF_APP_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+MUSIC_MESSAGE nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CCC_DESCRIPTOR_UUID,2344,32,1,,"public CasioGB6900DeviceSupport() {
        super(LOG);
        addSupportedService(GattService.UUID_SERVICE_IMMEDIATE_ALERT);
        addSupportedService(CasioConstants.CASIO_VIRTUAL_SERVER_SERVICE);
        addSupportedService(CasioConstants.ALERT_SERVICE_UUID);
        addSupportedService(CasioConstants.CASIO_IMMEDIATE_ALERT_SERVICE_UUID);
        addSupportedService(CasioConstants.CURRENT_TIME_SERVICE_UUID);
        addSupportedService(CasioConstants.WATCH_CTRL_SERVICE_UUID);
        addSupportedService(CasioConstants.WATCH_FEATURES_SERVICE_UUID);
        addSupportedService(CasioConstants.CASIO_PHONE_ALERT_STATUS_SERVICE);
        addSupportedService(CasioConstants.MORE_ALERT_SERVICE_UUID);
        addSupportedService(CasioConstants.TX_POWER_SERVICE_UUID);
        addSupportedService(CasioConstants.LINK_LOSS_SERVICE);
        addSupportedService(CasioConstants.IMMEDIATE_ALERT_SERVICE_UUID);

        BluetoothGattService casioGATTService = new BluetoothGattService(CasioConstants.WATCH_CTRL_SERVICE_UUID, BluetoothGattService.SERVICE_TYPE_PRIMARY);
        BluetoothGattCharacteristic bluetoothGATTCharacteristic = new BluetoothGattCharacteristic(CasioConstants.KEY_CONTAINER_CHARACTERISTIC_UUID, BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE, BluetoothGattCharacteristic.PERMISSION_WRITE);
        bluetoothGATTCharacteristic.setValue(new byte[0]);

        BluetoothGattCharacteristic bluetoothGATTCharacteristic2 = new BluetoothGattCharacteristic(CasioConstants.NAME_OF_APP_CHARACTERISTIC_UUID, BluetoothGattCharacteristic.PROPERTY_READ, BluetoothGattCharacteristic.PERMISSION_READ | BluetoothGattCharacteristic.PERMISSION_READ_ENCRYPTED);
        bluetoothGATTCharacteristic2.setValue(CasioConstants.MUSIC_MESSAGE.getBytes());

        BluetoothGattDescriptor bluetoothGattDescriptor = new BluetoothGattDescriptor(CasioConstants.CCC_DESCRIPTOR_UUID, BluetoothGattDescriptor.PERMISSION_READ | BluetoothGattDescriptor.PERMISSION_WRITE);
        bluetoothGattDescriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE);

        bluetoothGATTCharacteristic2.addDescriptor(bluetoothGattDescriptor);

        casioGATTService.addCharacteristic(bluetoothGATTCharacteristic);
        casioGATTService.addCharacteristic(bluetoothGATTCharacteristic2);

        addSupportedServerService(casioGATTService);
    }",False
11,connectFirstTime(),Method,,,"nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+connect()",nodomain.freeyourgadget.gadgetbridge.util.GB+INFO nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mFirstConnect,269,6,1,,"@Override
    public boolean connectFirstTime() {
        GB.toast(getContext(), ""After first connect, disable and enable bluetooth on your Casio watch to really connect"", Toast.LENGTH_SHORT, GB.INFO);
        mFirstConnect = true;
        return super.connect();
    }",False
12,dispose(),Method,,,org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+close() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+close() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+dispose(),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,115,7,1,,"@Override
    public void dispose() {
        LOG.info(""Dispose"");
        close();

        super.dispose();
    }",False
13,close(),Method,dispose(),,nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioHandlerThread+quit() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioHandlerThread+quit() java.lang.Thread+interrupt() java.lang.Thread+interrupt(),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread,186,7,2,,"private void close() {
        if (mHandlerThread != null) {
            mHandlerThread.quit();
            mHandlerThread.interrupt();
            mHandlerThread = null;
        }
    }",False
14,onServicesDiscovered(BluetoothGatt),Method,,,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+onServicesDiscovered(BluetoothGatt),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBtGatt,140,5,1,,"@Override
    public void onServicesDiscovered(BluetoothGatt gatt) {
        mBtGatt = gatt;
        super.onServicesDiscovered(gatt);
    }",False
15,initializeDevice(TransactionBuilder),Method,,,"org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion2(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion2(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+getName() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+getName() java.lang.String+contains(CharSequence) java.lang.String+contains(CharSequence) java.lang.String+contains(CharSequence) java.lang.String+contains(CharSequence) java.lang.String+contains(CharSequence) java.lang.String+contains(CharSequence) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEOperation+perform() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.operations.InitOperationGB6900+InitOperationGB6900(CasioGB6900DeviceSupport,TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEOperation+perform() nodomain.freeyourgadget.gadgetbridge.util.GB+toast(Context,String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(Context,String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion2(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setFirmwareVersion2(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+setGattCallback(GattCallback) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+setGattCallback(GattCallback) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+configureWatch(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+configureWatch(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+addCharacteristics() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+addCharacteristics() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+enableNotifications(TransactionBuilder,boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+enableNotifications(TransactionBuilder,boolean) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String)",nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mFirstConnect nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.util.GB+ERROR nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,1607,49,4,,"@Override
    protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
        LOG.info(""Initializing"");

        if(mFirstConnect) {
            gbDevice.setState(GBDevice.State.INITIALIZED);
            gbDevice.sendDeviceUpdateIntent(getContext());
            getDevice().setFirmwareVersion(""N/A"");
            getDevice().setFirmwareVersion2(""N/A"");
            return builder;
        }

        String name = gbDevice.getName();

        if(name.contains(""5600B"")) {
            mModel = CasioConstants.Model.MODEL_CASIO_5600B;
        } else if(name.contains(""6900B"")) {
            mModel = CasioConstants.Model.MODEL_CASIO_6900B;
        } else if(name.contains(""STB-1000"")) {
            mModel = CasioConstants.Model.MODEL_CASIO_STB1000;
        } else {
            mModel = CasioConstants.Model.MODEL_CASIO_GENERIC;
        }

        // We skip configuring BLE settings for the STB-1000 since it powers off
        // BLE on the watch.
        if(mModel != CasioConstants.Model.MODEL_CASIO_STB1000) {
            try {
                new InitOperationGB6900(this, builder).perform();
            } catch (IOException e) {
                GB.toast(getContext(), ""Initializing Casio watch failed"", Toast.LENGTH_SHORT, GB.ERROR, e);
            }
        }

        getDevice().setFirmwareVersion(""N/A"");
        getDevice().setFirmwareVersion2(""N/A"");


        builder.setGattCallback(this);

        configureWatch(builder);

        addCharacteristics();
        enableNotifications(builder, true);

        LOG.info(""Initialization Done"");

        return builder;
    }",False
16,getModel(),Method,,,,,62,3,0,,"CasioConstants.Model getModel() {
        return mModel;
    }",False
17,configureWatch(TransactionBuilder),Method,initializeDevice(TransactionBuilder),,"nodomain.freeyourgadget.gadgetbridge.GBApplication+getDeviceSpecificSharedPrefs(String) nodomain.freeyourgadget.gadgetbridge.GBApplication+getDeviceSpecificSharedPrefs(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+getAddress() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+getAddress() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+wait(int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+wait(int)",nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBtGatt nodomain.freeyourgadget.gadgetbridge.service.btle.GattCharacteristic+MILD_ALERT nodomain.freeyourgadget.gadgetbridge.service.btle.GattCharacteristic+NO_ALERT nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBtGatt nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+LINK_LOSS_SERVICE nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+ALERT_LEVEL_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioSleepTime,806,21,2,,"private void configureWatch(TransactionBuilder builder) {
        if (mBtGatt == null) {
            return;
        }

        SharedPreferences sharedPreferences = GBApplication.getDeviceSpecificSharedPrefs(getDevice().getAddress());

        boolean enable = sharedPreferences.getBoolean(PREF_DISCONNECTNOTIF_NOSHED, false);

        byte[] value = new byte[1];

        if(enable)
            value[0] = GattCharacteristic.MILD_ALERT;
        else
            value[0] = GattCharacteristic.NO_ALERT;

        BluetoothGattService llService = mBtGatt.getService(CasioConstants.LINK_LOSS_SERVICE);
        BluetoothGattCharacteristic charact = llService.getCharacteristic(CasioConstants.ALERT_LEVEL_CHARACTERISTIC_UUID);
        builder.write(charact, value);
        builder.wait(mCasioSleepTime);
    }",False
18,addCharacteristics(),Method,initializeDevice(TransactionBuilder),,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioCharacteristics nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioCharacteristics nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_A_NOT_COM_SET_NOT nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioCharacteristics nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_A_NOT_W_REQ_NOT nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioCharacteristics nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+ALERT_LEVEL_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioCharacteristics nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+RINGER_CONTROL_POINT,459,7,2,,"private void addCharacteristics() {
        mCasioCharacteristics.clear();
        mCasioCharacteristics.add(getCharacteristic(CasioConstants.CASIO_A_NOT_COM_SET_NOT));
        mCasioCharacteristics.add(getCharacteristic(CasioConstants.CASIO_A_NOT_W_REQ_NOT));
        mCasioCharacteristics.add(getCharacteristic(CasioConstants.ALERT_LEVEL_CHARACTERISTIC_UUID));
        mCasioCharacteristics.add(getCharacteristic(CasioConstants.RINGER_CONTROL_POINT));
    }",False
19,"enableNotifications(TransactionBuilder,boolean)",Method,initializeDevice(TransactionBuilder),,"nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+notify(BluetoothGattCharacteristic,boolean) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+notify(BluetoothGattCharacteristic,boolean) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+wait(int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+wait(int)",nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioCharacteristics nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mCasioSleepTime,280,7,1,,"public boolean enableNotifications(TransactionBuilder builder, boolean enable) {
        for(BluetoothGattCharacteristic charact : mCasioCharacteristics) {
            builder.notify(charact, enable);
            builder.wait(mCasioSleepTime);
        }
        return true;
    }",False
20,readTxPowerLevel(),Method,,nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioHandlerThread+requestTxPowerLevel(),nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+read(BluetoothGattCharacteristic) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+read(BluetoothGattCharacteristic) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage(),nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+TX_POWER_LEVEL_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,380,9,1,,"public void readTxPowerLevel() {
        try {
            TransactionBuilder builder = performInitialized(""readTxPowerLevel"");
            builder.read(getCharacteristic(CasioConstants.TX_POWER_LEVEL_CHARACTERISTIC_UUID));
            builder.queue(getQueue());
        } catch (IOException e) {
            LOG.warn(""readTxPowerLevel failed: "" + e.getMessage());
        }
    }",False
21,writeCasioCurrentTime(TransactionBuilder),Method,handleTimeRequests(byte) onSetTime(),,"java.util.Calendar+getInstance() java.util.Calendar+getInstance() java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.concurrent.TimeUnit+toSeconds(long) java.util.concurrent.TimeUnit+toSeconds(long) java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String)",java.util.Calendar+YEAR java.util.Calendar+MONTH java.util.Calendar+DAY_OF_MONTH java.util.Calendar+HOUR_OF_DAY java.util.Calendar+MINUTE java.util.Calendar+SECOND java.util.Calendar+DAY_OF_WEEK java.util.concurrent.TimeUnit+MILLISECONDS java.util.Calendar+MILLISECOND nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CURRENT_TIME_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,1212,28,2,,"private void writeCasioCurrentTime(TransactionBuilder builder) {
        byte[] arr = new byte[10];
        Calendar cal = Calendar.getInstance();

        int year = cal.get(Calendar.YEAR);
        arr[0] = (byte)((year >>> 0) & 0xff);
        arr[1] = (byte)((year >>> 8) & 0xff);
        arr[2] = (byte)(1 + cal.get(Calendar.MONTH));
        arr[3] = (byte)cal.get(Calendar.DAY_OF_MONTH);
        arr[4] = (byte)cal.get(Calendar.HOUR_OF_DAY);
        arr[5] = (byte)cal.get(Calendar.MINUTE);
        arr[6] = (byte)(1 + cal.get(Calendar.SECOND));
        byte dayOfWk = (byte)(cal.get(Calendar.DAY_OF_WEEK) - 1);
        if(dayOfWk == 0)
            dayOfWk = 7;
        arr[7] = dayOfWk;
        arr[8] = (byte)(int) TimeUnit.MILLISECONDS.toSeconds(256 * cal.get(Calendar.MILLISECOND));
        arr[9] = 1; // or 0?

        BluetoothGattCharacteristic charact = getCharacteristic(CasioConstants.CURRENT_TIME_CHARACTERISTIC_UUID);
        if(charact != null) {
            charact.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT);
            builder.write(charact, arr);
        }
        else {
            LOG.warn(""Characteristic not found: CURRENT_TIME_CHARACTERISTIC_UUID"");
        }
    }",False
22,writeCasioLocalTimeInformation(TransactionBuilder),Method,handleTimeRequests(byte) onSetTime(),,"java.util.Calendar+getInstance() java.util.Calendar+getInstance() java.util.concurrent.TimeUnit+toMinutes(long) java.util.concurrent.TimeUnit+toMinutes(long) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.concurrent.TimeUnit+toMinutes(long) java.util.concurrent.TimeUnit+toMinutes(long) java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String)",java.util.concurrent.TimeUnit+MILLISECONDS java.util.Calendar+ZONE_OFFSET java.util.concurrent.TimeUnit+MILLISECONDS java.util.Calendar+DST_OFFSET nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+LOCAL_TIME_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,725,15,2,,"private void writeCasioLocalTimeInformation(TransactionBuilder builder) {
        Calendar cal = Calendar.getInstance();
        int zoneOffset = (int)TimeUnit.MILLISECONDS.toMinutes(cal.get(Calendar.ZONE_OFFSET));
        int dstOffset = (int)TimeUnit.MILLISECONDS.toMinutes(cal.get(Calendar.DST_OFFSET));
        byte byte0 = (byte)(zoneOffset / 15);
        byte byte1 = (byte)(dstOffset / 15);
        BluetoothGattCharacteristic charact = getCharacteristic(CasioConstants.LOCAL_TIME_CHARACTERISTIC_UUID);
        if(charact != null) {
            builder.write(charact, new byte[]{byte0, byte1});
        }
        else {
            LOG.warn(""Characteristic not found: LOCAL_TIME_CHARACTERISTIC_UUID"");
        }

    }",False
23,writeCasioVirtualServerFeature(TransactionBuilder),Method,handleServerFeatureRequests(byte),,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String)",nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_VIRTUAL_SERVER_FEATURES nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,643,15,2,,"private void writeCasioVirtualServerFeature(TransactionBuilder builder) {
        byte byte0 = (byte)0;
        byte0 |= 1; // Casio Current Time Service
        byte0 |= 2; // Casio Alert Notification Service
        byte0 |= 4; // Casio Phone Alert Status Service
        byte0 |= 8; // Casio Immediate Alert Service

        BluetoothGattCharacteristic charact = getCharacteristic(CasioConstants.CASIO_VIRTUAL_SERVER_FEATURES);
        if(charact != null) {
            builder.write(charact, new byte[]{byte0, 0x00});
        }
        else {
            LOG.warn(""Characteristic not found: CASIO_VIRTUAL_SERVER_FEATURES"");
        }
    }",False
24,handleInitResponse(byte),Method,"handleCasioCom(byte[],boolean)",,"org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.lang.Thread+isAlive() java.lang.Thread+isAlive() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioHandlerThread+quit() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioHandlerThread+quit() java.lang.Thread+interrupt() java.lang.Thread+interrupt() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioHandlerThread+CasioHandlerThread(GBDevice,Context,CasioGB6900DeviceSupport) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getDevice() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() java.lang.Thread+start() java.lang.Thread+start() nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext()",nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mHandlerThread nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice,1113,26,2,,"private boolean handleInitResponse(byte data) {
        boolean handled = false;
        switch (data) {
            case (byte) 1:
                LOG.info(""Initialization done, setting state to INITIALIZED"");
                if (mHandlerThread != null) {
                    if (mHandlerThread.isAlive()) {
                        mHandlerThread.quit();
                        mHandlerThread.interrupt();
                    }
                }
                mHandlerThread = new CasioHandlerThread(getDevice(), getContext(), this);
                mHandlerThread.start();
                gbDevice.setState(GBDevice.State.INITIALIZED);
                gbDevice.sendDeviceUpdateIntent(getContext());
                handled = true;
                break;
            default:
                LOG.warn(""handleInitResponse: Error initializing device, received unexpected value: "" + data);
                gbDevice.setState(GBDevice.State.NOT_CONNECTED);
                gbDevice.sendDeviceUpdateIntent(getContext());
                handled = true;
                break;
        }
        return handled;
    }",False
25,handleTimeRequests(byte),Method,"handleCasioCom(byte[],boolean)",,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+createTransactionBuilder(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+createTransactionBuilder(String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioCurrentTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioCurrentTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+createTransactionBuilder(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+createTransactionBuilder(String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioLocalTimeInformation(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioLocalTimeInformation(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage(),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,1196,29,2,,"private boolean handleTimeRequests(byte data) {
        boolean handled = false;
        switch(data) // Request Type
        {
            case (byte) 1:
                try
                {
                    TransactionBuilder builder = createTransactionBuilder(""writeCasioCurrentTime"");
                    writeCasioCurrentTime(builder);
                    performConnected(builder.getTransaction());
                    handled = true;
                } catch (IOException e) {
                    LOG.warn(""handleTimeRequests::writeCasioCurrentTime failed: "" + e.getMessage());
                }
                break;
            case (byte) 2:
                try
                {
                    TransactionBuilder builder = createTransactionBuilder(""writeCasioLocalTimeInformation"");
                    writeCasioLocalTimeInformation(builder);
                    performConnected(builder.getTransaction());
                    handled = true;
                } catch (IOException e) {
                    LOG.warn(""handleTimeRequests::writeCasioLocalTimeInformation failed: "" + e.getMessage());
                }
                break;
        }
        return handled;
    }",False
26,handleServerFeatureRequests(byte),Method,"handleCasioCom(byte[],boolean)",,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+createTransactionBuilder(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+createTransactionBuilder(String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioVirtualServerFeature(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioVirtualServerFeature(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage(),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,438,11,2,,"private boolean handleServerFeatureRequests(byte data) {
        try
        {
            TransactionBuilder builder = createTransactionBuilder(""writeCasioVirtualServerFeature"");
            writeCasioVirtualServerFeature(builder);
            performConnected(builder.getTransaction());
        } catch (IOException e) {
            LOG.warn(""handleServerFeatureRequests failed: "" + e.getMessage());
        }
        return true;
    }",False
27,"handleCasioCom(byte[],boolean)",Method,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic) onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",,org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleInitResponse(byte) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleInitResponse(byte) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleTimeRequests(byte) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleTimeRequests(byte) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleServerFeatureRequests(byte) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleServerFeatureRequests(byte),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,760,26,2,,"private boolean handleCasioCom(byte[] data, boolean handleTime) {
        boolean handled = false;

        if(data.length < 3) {
            LOG.warn(""handleCasioCom failed: Received unexpected request (too short)"");
            return false;
        }

        switch(data[0]) // ServiceID
        {
            case 0:
                handled = handleInitResponse(data[2]);
                break;
            case 2:
                if(handleTime) {
                    handled = handleTimeRequests(data[2]);
                } else {
                    handled = true;
                }
                break;
            case 7:
                handled = handleServerFeatureRequests(data[2]);
                break;
        }
        return handled;
    }",False
28,"onCharacteristicRead(BluetoothGatt,BluetoothGattCharacteristic,int)",Method,,,"java.util.UUID+equals(Object) java.util.UUID+equals(Object) java.lang.StringBuilder+StringBuilder(String) java.lang.StringBuilder+append(Object) java.lang.StringBuilder+append(Object) java.lang.String+format(String,Object[]) java.lang.String+format(String,Object[]) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.lang.StringBuilder+toString() java.lang.StringBuilder+toString() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+onCharacteristicRead(BluetoothGatt,BluetoothGattCharacteristic,int)",nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+TX_POWER_LEVEL_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,824,23,1,,"@Override
    public boolean onCharacteristicRead(BluetoothGatt gatt,
                                        BluetoothGattCharacteristic characteristic, int status) {

        UUID characteristicUUID = characteristic.getUuid();
        byte[] data = characteristic.getValue();

        if(data.length == 0)
            return true;

        if(characteristicUUID.equals(CasioConstants.TX_POWER_LEVEL_CHARACTERISTIC_UUID)) {
            StringBuilder str = new StringBuilder(""onCharacteristicRead: Received power level: "");
            for(int i=0; i<data.length; i++) {
                str.append(String.format(""0x%1x "", data[i]));
            }
            LOG.info(str.toString());
        }
        else {
            return super.onCharacteristicRead(gatt, characteristic, status);
        }

        return true;
    }",False
29,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",Method,,,"java.util.UUID+equals(Object) java.util.UUID+equals(Object) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleCasioCom(byte[],boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleCasioCom(byte[],boolean) java.util.UUID+equals(Object) java.util.UUID+equals(Object) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleCasioCom(byte[],boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+handleCasioCom(byte[],boolean) java.util.UUID+equals(Object) java.util.UUID+equals(Object) nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventFindPhone+GBDeviceEventFindPhone() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+evaluateGBDeviceEvent(GBDeviceEvent) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+evaluateGBDeviceEvent(GBDeviceEvent) java.util.UUID+equals(Object) java.util.UUID+equals(Object) nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventCallControl+GBDeviceEventCallControl() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+evaluateGBDeviceEvent(GBDeviceEvent) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+evaluateGBDeviceEvent(GBDeviceEvent) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.lang.String+format(String,Object[]) java.lang.String+format(String,Object[]) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_A_NOT_W_REQ_NOT nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_A_NOT_COM_SET_NOT nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+ALERT_LEVEL_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventFindPhone+event nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventFindPhone+event nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+RINGER_CONTROL_POINT nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventCallControl+event nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,1798,46,1,,"@Override
    public boolean onCharacteristicChanged(BluetoothGatt gatt,
                                           BluetoothGattCharacteristic characteristic) {
        boolean handled = false;

        UUID characteristicUUID = characteristic.getUuid();
        byte[] data = characteristic.getValue();
        if (data.length == 0)
            return true;

        if(characteristicUUID.equals(CasioConstants.CASIO_A_NOT_W_REQ_NOT)) {
            handled = handleCasioCom(data, true);
        }

        if(characteristicUUID.equals(CasioConstants.CASIO_A_NOT_COM_SET_NOT)) {
            handled = handleCasioCom(data, false);
        }

        if(characteristicUUID.equals(CasioConstants.ALERT_LEVEL_CHARACTERISTIC_UUID)) {
            GBDeviceEventFindPhone findPhoneEvent = new GBDeviceEventFindPhone();
            if(data[0] == 0x02) {
                findPhoneEvent.event = GBDeviceEventFindPhone.Event.START;
            }
            else {
                findPhoneEvent.event = GBDeviceEventFindPhone.Event.STOP;
            }
            evaluateGBDeviceEvent(findPhoneEvent);
            handled = true;
        }

        if(characteristicUUID.equals(CasioConstants.RINGER_CONTROL_POINT)) {
            if(data[0] == 0x02)
            {
                GBDeviceEventCallControl callControlEvent = new GBDeviceEventCallControl();
                callControlEvent.event = GBDeviceEventCallControl.Event.IGNORE;
                evaluateGBDeviceEvent(callControlEvent);
            }
            handled = true;
        }

        if(!handled) {
            LOG.info(""Unhandled characteristic change: "" + characteristicUUID + "" code: "" + String.format(""0x%1x ..."", data[0]));
            return super.onCharacteristicChanged(gatt, characteristic);
        }
        return true;
    }",False
30,"showNotification(byte,String,String)",Method,onNotification(NotificationSpec) onSetCallState(CallSpec),,"nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) java.lang.String+getBytes(Charset) java.lang.String+getBytes(Charset) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",java.nio.charset.StandardCharsets+US_ASCII nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+ALERT_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,881,21,2,,"private void showNotification(byte icon, String title, String message) {
        if(!isConnected())
            return;
        try {
            TransactionBuilder builder = performInitialized(""showNotification"");
            int len;

            byte[] titleBytes = title.getBytes(StandardCharsets.US_ASCII);
            len = titleBytes.length > 18 ? 18 : titleBytes.length;
            byte[] msg = new byte[2 + len];
            msg[0] = icon;
            msg[1] = 1;
            System.arraycopy(titleBytes, 0, msg, 2, len);

            builder.write(getCharacteristic(CasioConstants.ALERT_CHARACTERISTIC_UUID), msg);
            LOG.info(""Showing notification, title: "" + title + "" message (not sent): "" + message);
            builder.queue(getQueue());
        } catch (IOException e) {
            LOG.warn(""showNotification failed: "" + e.getMessage());
        }
    }",False
31,useAutoConnect(),Method,,,,,74,4,1,,"@Override
    public boolean useAutoConnect() {
        return true;
    }",True
32,onNotification(NotificationSpec),Method,,,"nodomain.freeyourgadget.gadgetbridge.util.StringUtils+getFirstOf(String,String) nodomain.freeyourgadget.gadgetbridge.util.StringUtils+getFirstOf(String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+showNotification(byte,String,String)",nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+sender nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+title nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+type nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+SMS_NOTIFICATION_ID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CALENDAR_NOTIFICATION_ID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+MAIL_NOTIFICATION_ID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+SNS_NOTIFICATION_ID nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+body,787,20,1,,"@Override
    public void onNotification(NotificationSpec notificationSpec) {
        String notificationTitle = StringUtils.getFirstOf(notificationSpec.sender, notificationSpec.title);
        byte icon;
        switch (notificationSpec.type) {
            case GENERIC_SMS:
                icon = CasioConstants.SMS_NOTIFICATION_ID;
                break;
            case GENERIC_CALENDAR:
                icon = CasioConstants.CALENDAR_NOTIFICATION_ID;
                break;
            case GENERIC_EMAIL:
                icon = CasioConstants.MAIL_NOTIFICATION_ID;
                break;
            default:
                icon = CasioConstants.SNS_NOTIFICATION_ID;
                break;
        }
        showNotification(icon, notificationTitle, notificationSpec.body);
    }",False
33,onDeleteNotification(int),Method,,,,,63,4,1,,"@Override
    public void onDeleteNotification(int id) {

    }",True
34,onSetAlarms(ArrayList<? extends Alarm>),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() java.util.ArrayList+size() java.util.ArrayList+size() java.util.ArrayList+get(int) java.util.ArrayList+get(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() nodomain.freeyourgadget.gadgetbridge.model.Alarm+getRepetition(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getRepetition(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getHour() nodomain.freeyourgadget.gadgetbridge.model.Alarm+getHour() nodomain.freeyourgadget.gadgetbridge.model.Alarm+getMinute() nodomain.freeyourgadget.gadgetbridge.model.Alarm+getMinute() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() org.slf4j.Logger+error(String) org.slf4j.Logger+error(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.model.Alarm+ALARM_ONCE nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CASIO_SETTING_FOR_ALM_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,1081,31,1,,"@Override
    public void onSetAlarms(ArrayList<? extends Alarm> alarms) {
        int alarmOffset = 4;
        byte[] data = new byte[20];

        if(!isConnected())
            return;

        for(int i=0; i<alarms.size(); i++)
        {
            Alarm alm = alarms.get(i);
            if(alm.getEnabled()) {
                data[i * alarmOffset] = 0x40;
            } else {
                data[i * alarmOffset] = 0;
            }
            if(alm.getRepetition(Alarm.ALARM_ONCE)) {
                data[i * alarmOffset] |= 0x20;
            }
            data[i * alarmOffset + 1] = 0;
            data[i * alarmOffset + 2] = (byte)alm.getHour();
            data[i * alarmOffset + 3] = (byte)alm.getMinute();
        }
        try {
            TransactionBuilder builder = performInitialized(""setAlarm"");
            builder.write(getCharacteristic(CasioConstants.CASIO_SETTING_FOR_ALM_CHARACTERISTIC_UUID), data);
            builder.queue(getQueue());
        } catch(IOException e) {
            LOG.error(""Error setting alarm: "" + e.getMessage());
        }
    }",False
35,onSetTime(),Method,,,nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioLocalTimeInformation(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioLocalTimeInformation(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioCurrentTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+writeCasioCurrentTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage(),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,419,14,1,,"@Override
    public void onSetTime() {
        if(!isConnected())
            return;

        try {
            TransactionBuilder builder = performInitialized(""SetTime"");
            writeCasioLocalTimeInformation(builder);
            writeCasioCurrentTime(builder);
            builder.queue(getQueue());
        } catch(IOException e) {
            LOG.warn(""onSetTime failed: "" + e.getMessage());
        }
    }",False
36,onSetCallState(CallSpec),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+showNotification(byte,String,String) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String)",nodomain.freeyourgadget.gadgetbridge.model.CallSpec+command nodomain.freeyourgadget.gadgetbridge.model.CallSpec+CALL_INCOMING nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+CALL_NOTIFICATION_ID nodomain.freeyourgadget.gadgetbridge.model.CallSpec+name nodomain.freeyourgadget.gadgetbridge.model.CallSpec+number nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,410,11,1,,"@Override
    public void onSetCallState(CallSpec callSpec) {
        switch (callSpec.command) {
            case CallSpec.CALL_INCOMING:
                showNotification(CasioConstants.CALL_NOTIFICATION_ID, callSpec.name, callSpec.number);
                break;
            default:
                LOG.info(""not sending CallSpec since only CALL_INCOMING is handled"");
                break;
        }
    }",False
37,onSetCannedMessages(CannedMessagesSpec),Method,,,,,93,4,1,,"@Override
    public void onSetCannedMessages(CannedMessagesSpec cannedMessagesSpec) {

    }",True
38,onSetMusicState(MusicStateSpec),Method,,,nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+sendMusicInfo() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+sendMusicInfo(),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicStateSpec nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicStateSpec,218,8,1,,"@Override
    public void onSetMusicState(MusicStateSpec stateSpec) {
        if(stateSpec != mBufferMusicStateSpec)
        {
            mBufferMusicStateSpec = stateSpec;
            sendMusicInfo();
        }
    }",False
39,sendMusicInfo(),Method,onSetMusicState(MusicStateSpec) onSetMusicInfo(MusicSpec),,"nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) java.lang.String+length() java.lang.String+length() java.lang.String+length() java.lang.String+length() java.lang.String+length() java.lang.String+length() java.lang.String+getBytes(Charset) java.lang.String+getBytes(Charset) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+track nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+track nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+track nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+album nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+album nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+album nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+artist nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+artist nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.model.MusicSpec+artist java.nio.charset.StandardCharsets+US_ASCII nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+MORE_ALERT_FOR_LONG_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,1206,30,2,,"private void sendMusicInfo()
    {
        if(!isConnected())
            return;

        try {
            TransactionBuilder builder = performInitialized(""sendMusicInfo"");
            String info = """";
            if (mBufferMusicSpec.track != null && mBufferMusicSpec.track.length() > 0) {
                info += mBufferMusicSpec.track;
            }
            if (mBufferMusicSpec.album != null && mBufferMusicSpec.album.length() > 0) {
                info += mBufferMusicSpec.album;
            }
            if (mBufferMusicSpec.artist != null && mBufferMusicSpec.artist.length() > 0) {
                info += mBufferMusicSpec.artist;
            }
            byte[] bInfo = info.getBytes(StandardCharsets.US_ASCII);
            int len = bInfo.length > 17 ? 17 : bInfo.length;
            byte[] arr = new byte[len + 3];
            arr[0] = 0;
            arr[1] = 10;
            arr[2] = 1;
            System.arraycopy(bInfo, 0, arr, 3, len);
            builder.write(getCharacteristic(CasioConstants.MORE_ALERT_FOR_LONG_UUID), arr);
            builder.queue(getQueue());
        } catch (IOException e) {
            LOG.warn(""sendMusicInfo failed: "" + e.getMessage());
        }
    }",False
40,onSetMusicInfo(MusicSpec),Method,,,nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+sendMusicInfo() nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+sendMusicInfo(),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBufferMusicSpec,202,8,1,,"@Override
    public void onSetMusicInfo(MusicSpec musicSpec) {
        if(musicSpec != mBufferMusicSpec)
        {
            mBufferMusicSpec = musicSpec;
            sendMusicInfo();
        }
    }",False
41,onEnableRealtimeSteps(boolean),Method,,,,,71,3,1,,"@Override
    public void onEnableRealtimeSteps(boolean enable) {
    }",True
42,onInstallApp(Uri),Method,,,,,56,4,1,,"@Override
    public void onInstallApp(Uri uri) {

    }",True
43,onAppInfoReq(),Method,,,,,49,4,1,,"@Override
    public void onAppInfoReq() {

    }",True
44,"onAppStart(UUID,boolean)",Method,,,,,71,4,1,,"@Override
    public void onAppStart(UUID uuid, boolean start) {

    }",True
45,onAppDelete(UUID),Method,,,,,57,4,1,,"@Override
    public void onAppDelete(UUID uuid) {

    }",True
46,"onAppConfiguration(UUID,String,Integer)",Method,,,,,94,4,1,,"@Override
    public void onAppConfiguration(UUID appUuid, String config, Integer id) {

    }",True
47,onAppReorder(UUID[]),Method,,,,,61,4,1,,"@Override
    public void onAppReorder(UUID[] uuids) {

    }",True
48,onFetchRecordedData(int),Method,,,,,69,4,1,,"@Override
    public void onFetchRecordedData(int dataTypes) {

    }",True
49,onReset(int),Method,,,,,53,4,1,,"@Override
    public void onReset(int flags) {

    }",True
50,onHeartRateTest(),Method,,,,,52,4,1,,"@Override
    public void onHeartRateTest() {

    }",True
51,onEnableRealtimeHeartRateMeasurement(boolean),Method,,,,,87,4,1,,"@Override
    public void onEnableRealtimeHeartRateMeasurement(boolean enable) {

    }",True
52,onFindDevice(boolean),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+isConnected() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBtGatt nodomain.freeyourgadget.gadgetbridge.service.btle.GattCharacteristic+HIGH_ALERT nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+mBtGatt nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+IMMEDIATE_ALERT_SERVICE_UUID nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+ALERT_LEVEL_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,889,25,1,,"@Override
    public void onFindDevice(boolean start) {
        if (!isConnected()) {
            return;
        }

        if (mBtGatt == null) {
            return;
        }

        if (start) {
            try {
                TransactionBuilder builder = performInitialized(""findDevice"");
                byte[] value = new byte[]{GattCharacteristic.HIGH_ALERT};

                BluetoothGattService service = mBtGatt.getService(CasioConstants.IMMEDIATE_ALERT_SERVICE_UUID);
                BluetoothGattCharacteristic charact = service.getCharacteristic(CasioConstants.ALERT_LEVEL_CHARACTERISTIC_UUID);
                builder.write(charact, value);
                LOG.info(""onFindDevice sent"");
                builder.queue(getQueue());
            } catch (IOException e) {
                LOG.warn(""showNotification failed: "" + e.getMessage());
            }
        }
    }",False
53,onSetConstantVibration(int),Method,,,,,70,4,1,,"@Override
    public void onSetConstantVibration(int integer) {

    }",True
54,onScreenshotReq(),Method,,,,,52,4,1,,"@Override
    public void onScreenshotReq() {

    }",True
55,onEnableHeartRateSleepSupport(boolean),Method,,,,,80,4,1,,"@Override
    public void onEnableHeartRateSleepSupport(boolean enable) {

    }",True
56,onSetHeartRateMeasurementInterval(int),Method,,,,,81,4,1,,"@Override
    public void onSetHeartRateMeasurementInterval(int seconds) {

    }",True
57,onAddCalendarEvent(CalendarEventSpec),Method,,,,,90,4,1,,"@Override
    public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {

    }",True
58,"onDeleteCalendarEvent(byte,long)",Method,,,,,76,4,1,,"@Override
    public void onDeleteCalendarEvent(byte type, long id) {

    }",True
59,onSendConfiguration(String),Method,,,,,69,4,1,,"@Override
    public void onSendConfiguration(String config) {

    }",False
60,onReadConfiguration(String),Method,,,,,69,4,1,,"@Override
    public void onReadConfiguration(String config) {

    }",True
61,onTestNewFunction(),Method,,,,,54,4,1,,"@Override
    public void onTestNewFunction() {

    }",True
62,onSendWeather(WeatherSpec),Method,,,,,73,4,1,,"@Override
    public void onSendWeather(WeatherSpec weatherSpec) {

    }",True
63,"onCharacteristicReadRequest(BluetoothDevice,int,int,BluetoothGattCharacteristic)",Method,,,"org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performServer(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performServer(String) nodomain.freeyourgadget.gadgetbridge.service.btle.ServerTransactionBuilder+writeServerResponse(BluetoothDevice,int,int,int,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.ServerTransactionBuilder+writeServerResponse(BluetoothDevice,int,int,int,byte[]) java.lang.String+getBytes() java.lang.String+getBytes() nodomain.freeyourgadget.gadgetbridge.service.btle.ServerTransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.ServerTransactionBuilder+queue(BtLEQueue) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getQueue() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+NAME_OF_APP_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+MUSIC_MESSAGE nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,809,19,1,,"@Override
    public boolean onCharacteristicReadRequest(BluetoothDevice device, int requestId, int offset, BluetoothGattCharacteristic characteristic) {

        if (!characteristic.getUuid().equals(CasioConstants.NAME_OF_APP_CHARACTERISTIC_UUID)) {
            LOG.warn(""unexpected read request"");
            return false;
        }

        LOG.info(""will send response to read request from device: "" + device.getAddress());

        try {
            ServerTransactionBuilder builder = performServer(""sendNameOfApp"");
            builder.writeServerResponse(device, requestId, 0, offset, CasioConstants.MUSIC_MESSAGE.getBytes());
            builder.queue(getQueue());
        } catch (IOException e) {
            LOG.warn(""sendMusicInfo failed: "" + e.getMessage());
        }
        return true;
    }",False
64,parse5Button(int),Method,,,org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,873,24,2,,"private GBDeviceEventMusicControl.Event parse5Button(int button) {
        GBDeviceEventMusicControl.Event event;
        switch(button) {
            case 5:
                event = GBDeviceEventMusicControl.Event.PLAYPAUSE;
                break;
            case 4:
                event = GBDeviceEventMusicControl.Event.NEXT;
                break;
            case 3:
                event = GBDeviceEventMusicControl.Event.VOLUMEUP;
                break;
            case 2:
                event = GBDeviceEventMusicControl.Event.PREVIOUS;
                break;
            case 1:
                event = GBDeviceEventMusicControl.Event.VOLUMEDOWN;
                break;
            default:
                LOG.warn(""Unhandled button received: "" + button);
                event =  GBDeviceEventMusicControl.Event.UNKNOWN;
        }
        return event;
    }",False
65,parse3Button(int),Method,,,org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,653,18,2,,"private GBDeviceEventMusicControl.Event parse3Button(int button) {
        GBDeviceEventMusicControl.Event event;
        switch(button) {
            case 3:
                event = GBDeviceEventMusicControl.Event.NEXT;
                break;
            case 2:
                event = GBDeviceEventMusicControl.Event.PREVIOUS;
                break;
            case 1:
                event = GBDeviceEventMusicControl.Event.PLAYPAUSE;
                break;
            default:
                LOG.warn(""Unhandled button received: "" + button);
                event =  GBDeviceEventMusicControl.Event.UNKNOWN;
        }
        return event;
    }",False
66,parse2Button(int),Method,,,org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String),nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,544,15,2,,"private GBDeviceEventMusicControl.Event parse2Button(int button) {
        GBDeviceEventMusicControl.Event event;
        switch(button) {
            case 2:
                event = GBDeviceEventMusicControl.Event.PLAYPAUSE;
                break;
            case 1:
                event = GBDeviceEventMusicControl.Event.NEXT;
                break;
            default:
                LOG.warn(""Unhandled button received: "" + button);
                event =  GBDeviceEventMusicControl.Event.UNKNOWN;
        }
        return event;
    }",False
67,"onCharacteristicWriteRequest(BluetoothDevice,int,BluetoothGattCharacteristic,boolean,boolean,int,byte[])",Method,,,nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl+GBDeviceEventMusicControl() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+evaluateGBDeviceEvent(GBDeviceEvent) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+evaluateGBDeviceEvent(GBDeviceEvent) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.lang.Object+toString() java.lang.Object+toString(),nodomain.freeyourgadget.gadgetbridge.devices.casio.CasioConstants+KEY_CONTAINER_CHARACTERISTIC_UUID nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl+event nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl+event nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl+event nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventMusicControl+event nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.casio.CasioGB6900DeviceSupport+LOG,1507,38,1,,"@Override
    public boolean onCharacteristicWriteRequest(BluetoothDevice device, int requestId, BluetoothGattCharacteristic characteristic,
                                                boolean preparedWrite, boolean responseNeeded, int offset, byte[] value) {

        GBDeviceEventMusicControl musicCmd = new GBDeviceEventMusicControl();
        if (!characteristic.getUuid().equals(CasioConstants.KEY_CONTAINER_CHARACTERISTIC_UUID)) {
            LOG.warn(""unexpected write request"");
            return false;
        }

        if((value[0] & 0x03) == 0) {
            int button = value[1] & 0x0f;
            LOG.info(""Button pressed: "" + button);
            switch(getModel())
            {
                case MODEL_CASIO_5600B:
                    musicCmd.event = parse2Button(button);
                    break;
                case MODEL_CASIO_6900B:
                    musicCmd.event = parse3Button(button);
                    break;
                case MODEL_CASIO_STB1000:
                    musicCmd.event = parse5Button(button);
                    break;
                case MODEL_CASIO_GENERIC:
                    musicCmd.event = parse3Button(button);
                    break;
                default:
                    LOG.warn(""Unhandled device"");
                    return false;
            }
            evaluateGBDeviceEvent(musicCmd);
        }
        else {
            LOG.info(""received from device: "" + value.toString());
        }
        return true;
    }",False
