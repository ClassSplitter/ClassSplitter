index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,LOG,Field,,,,,76,1,26,,private static final Logger LOG = LoggerFactory.getLogger(Supervisor.class);,True
2,restartStrategy,Field,,,,,46,1,18,,private final RestartStrategy restartStrategy;,True
3,childSpec,Field,,,,,34,1,2,,private List<ChildSpec> childSpec;,True
4,children,Field,,,,,70,1,18,,private final List<ChildEntry> children = new ArrayList<ChildEntry>();,True
5,childrenById,Field,,,,,109,1,18,,"private final ConcurrentMap<Object, ChildEntry> childrenById = new ConcurrentHashMapV8<Object, ChildEntry>();",True
6,"Supervisor(Strand,String,MailboxConfig,RestartStrategy,Initializer)",Method,,,,co.paralleluniverse.actors.behaviors.Supervisor+restartStrategy co.paralleluniverse.actors.behaviors.Supervisor+restartStrategy co.paralleluniverse.actors.behaviors.Supervisor+childSpec co.paralleluniverse.actors.behaviors.Supervisor+childSpec,276,5,1,,"public Supervisor(Strand strand, String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy, Initializer initializer) {
        super(name, initializer, strand, mailboxConfig);
        this.restartStrategy = restartStrategy;
        this.childSpec = null;
    }",True
7,"Supervisor(Strand,String,MailboxConfig,RestartStrategy,List<ChildSpec>)",Method,,,,co.paralleluniverse.actors.behaviors.Supervisor+restartStrategy co.paralleluniverse.actors.behaviors.Supervisor+restartStrategy co.paralleluniverse.actors.behaviors.Supervisor+childSpec co.paralleluniverse.actors.behaviors.Supervisor+childSpec,276,5,1,,"public Supervisor(Strand strand, String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy, List<ChildSpec> childSpec) {
        super(name, null, strand, mailboxConfig);
        this.restartStrategy = restartStrategy;
        this.childSpec = childSpec;
    }",True
8,"Supervisor(Strand,String,MailboxConfig,RestartStrategy,ChildSpec)",Method,,,java.util.Arrays+asList(T[]) java.util.Arrays+asList(T[]),,225,3,1,,"public Supervisor(Strand strand, String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy, ChildSpec... childSpec) {
        this(strand, name, mailboxConfig, restartStrategy, Arrays.asList(childSpec));
    }",False
9,"Supervisor(Strand,String,MailboxConfig,RestartStrategy)",Method,,,,,195,3,1,,"public Supervisor(Strand strand, String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy) {
        this(strand, name, mailboxConfig, restartStrategy, (Initializer) null);
    }",True
10,"Supervisor(String,MailboxConfig,RestartStrategy)",Method,,,,,178,3,1,,"public Supervisor(String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy) {
        this(null, name, mailboxConfig, restartStrategy, (Initializer) null);
    }",True
11,"Supervisor(String,RestartStrategy)",Method,,,,,140,3,1,,"public Supervisor(String name, RestartStrategy restartStrategy) {
        this(null, name, null, restartStrategy, (Initializer) null);
    }",True
12,"Supervisor(String,MailboxConfig,RestartStrategy,Initializer)",Method,,,,,196,3,1,,"public Supervisor(String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy, Initializer initializer) {
        this(null, name, mailboxConfig, restartStrategy, initializer);
    }",True
13,"Supervisor(String,RestartStrategy,Initializer)",Method,,,,,158,3,1,,"public Supervisor(String name, RestartStrategy restartStrategy, Initializer initializer) {
        this(null, name, null, restartStrategy, initializer);
    }",True
14,Supervisor(RestartStrategy),Method,,,,,127,3,1,,"public Supervisor(RestartStrategy restartStrategy) {
        this(null, null, null, restartStrategy, (Initializer) null);
    }",True
15,"Supervisor(String,MailboxConfig,RestartStrategy,List<ChildSpec>)",Method,,,,,196,3,1,,"public Supervisor(String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy, List<ChildSpec> childSpec) {
        this(null, name, mailboxConfig, restartStrategy, childSpec);
    }",True
16,"Supervisor(String,MailboxConfig,RestartStrategy,ChildSpec)",Method,,,,,193,3,1,,"public Supervisor(String name, MailboxConfig mailboxConfig, RestartStrategy restartStrategy, ChildSpec... childSpec) {
        this(null, name, mailboxConfig, restartStrategy, childSpec);
    }",True
17,"Supervisor(String,RestartStrategy,List<ChildSpec>)",Method,,,,,158,3,1,,"public Supervisor(String name, RestartStrategy restartStrategy, List<ChildSpec> childSpec) {
        this(null, name, null, restartStrategy, childSpec);
    }",True
18,"Supervisor(String,RestartStrategy,ChildSpec)",Method,,,,,155,3,1,,"public Supervisor(String name, RestartStrategy restartStrategy, ChildSpec... childSpec) {
        this(null, name, null, restartStrategy, childSpec);
    }",True
19,"Supervisor(RestartStrategy,List<ChildSpec>)",Method,,,,,145,3,1,,"public Supervisor(RestartStrategy restartStrategy, List<ChildSpec> childSpec) {
        this(null, null, null, restartStrategy, childSpec);
    }",True
20,"Supervisor(RestartStrategy,ChildSpec)",Method,,,,,142,3,1,,"public Supervisor(RestartStrategy restartStrategy, ChildSpec... childSpec) {
        this(null, null, null, restartStrategy, childSpec);
    }",True
21,getChild(Object),Method,,,co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object) co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object),,231,6,1,,"public <Message, V> LocalActor<Message, V> getChild(Object name) {
        final ChildEntry child = findEntryById(name);
        if (child == null)
            return null;
        return (LocalActor<Message, V>) child.actor;
    }",True
22,log(),Method,,,,co.paralleluniverse.actors.behaviors.Supervisor+LOG,61,4,1,,"@Override
    public Logger log() {
        return LOG;
    }",True
23,init(),Method,,,co.paralleluniverse.actors.behaviors.BasicGenBehavior+getInitializer() co.paralleluniverse.actors.behaviors.BasicGenBehavior+getInitializer() co.paralleluniverse.actors.behaviors.Initializer+init() co.paralleluniverse.actors.behaviors.BasicGenBehavior+getInitializer() co.paralleluniverse.actors.behaviors.BasicGenBehavior+getInitializer() co.paralleluniverse.actors.behaviors.Initializer+init() co.paralleluniverse.actors.behaviors.BasicGenBehavior+getInitializer() co.paralleluniverse.actors.behaviors.BasicGenBehavior+getInitializer() java.lang.IllegalStateException+IllegalStateException(String) java.lang.Object+equals(Object) java.lang.Object+equals(Object) java.lang.Object+getClass() java.lang.Object+getClass() java.lang.IllegalStateException+IllegalStateException(String) co.paralleluniverse.actors.behaviors.Supervisor+addChild(ChildSpec) co.paralleluniverse.actors.behaviors.Supervisor+addChild(ChildSpec) java.lang.AssertionError+AssertionError(Object),co.paralleluniverse.actors.behaviors.Supervisor+childSpec co.paralleluniverse.actors.behaviors.Supervisor+childSpec co.paralleluniverse.actors.behaviors.Supervisor+childSpec co.paralleluniverse.actors.behaviors.Supervisor+childSpec,872,21,4,,"@Override
    protected void init() throws SuspendExecution {
        if (getInitializer() != null)
            getInitializer().init();
        else {
            if (childSpec != null) {
                try {
                    if (getInitializer() != null)
                        throw new IllegalStateException(""Cannot provide a supervisor with both a child-spec list as well as an initializer"");
                    if (!Supervisor.class.equals(this.getClass()))
                        throw new IllegalStateException(""Cannot provide a subclassed supervisor with a child-spec list"");

                    for (ChildSpec cs : childSpec)
                        addChild(cs);
                    this.childSpec = null;
                } catch (InterruptedException e) {
                    throw new AssertionError(e);
                }
            }
        }
    }",True
24,onStart(),Method,,,co.paralleluniverse.actors.LocalActor+toString() co.paralleluniverse.actors.LocalActor+toString() co.paralleluniverse.actors.behaviors.BasicGenBehavior+onStart(),co.paralleluniverse.actors.behaviors.Supervisor+LOG,284,8,4,,"@Override
    protected void onStart() throws InterruptedException, SuspendExecution {
        if (LOG.isInfoEnabled()) {
            //org.apache.logging.log4j.ThreadContext.push(this.toString());
            MDC.put(""self"", this.toString());
        }
        super.onStart();
    }",True
25,handleMessage(Object),Method,,,co.paralleluniverse.actors.behaviors.Supervisor+addChild(ChildSpec) co.paralleluniverse.actors.behaviors.Supervisor+addChild(ChildSpec),,527,14,20,,"@Override
    protected final void handleMessage(Object m1) throws InterruptedException, SuspendExecution {
        if (m1 instanceof GenRequestMessage) {
            final GenRequestMessage req = (GenRequestMessage) m1;
            try {
                if (m1 instanceof AddChildMessage) {
                    final AddChildMessage m = (AddChildMessage) m1;
                    reply(m, addChild(m.info));
                }
            } catch (Exception e) {
                replyError(req, e);
            }
        }
    }",True
26,onTerminate(Throwable),Method,,,co.paralleluniverse.actors.behaviors.BasicGenBehavior+onTerminate(Throwable) co.paralleluniverse.actors.behaviors.Supervisor+shutdownChildren() co.paralleluniverse.actors.behaviors.Supervisor+shutdownChildren() java.util.Map+clear() java.util.Map+clear() java.util.List+clear() java.util.List+clear(),co.paralleluniverse.actors.behaviors.Supervisor+childrenById co.paralleluniverse.actors.behaviors.Supervisor+children co.paralleluniverse.actors.behaviors.Supervisor+LOG,368,13,4,,"@Override
    protected void onTerminate(Throwable cause) throws SuspendExecution, InterruptedException {
        super.onTerminate(cause);

        shutdownChildren();
        childrenById.clear();
        children.clear();

        if (LOG.isInfoEnabled()) {
            //org.apache.logging.log4j.ThreadContext.pop();
            MDC.remove(""self"");
        }
    }",True
27,addChild1(ChildSpec),Method,,,"co.paralleluniverse.actors.behaviors.Supervisor+findEntry(LocalActor) co.paralleluniverse.actors.behaviors.Supervisor+findEntry(LocalActor) co.paralleluniverse.actors.behaviors.SupervisorException+SupervisorException(String) co.paralleluniverse.actors.behaviors.ChildSpec+getId() co.paralleluniverse.actors.behaviors.ChildSpec+getId() co.paralleluniverse.actors.ActorImpl+getName() co.paralleluniverse.actors.ActorImpl+getName() co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object) co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object) co.paralleluniverse.actors.behaviors.SupervisorException+SupervisorException(String) co.paralleluniverse.actors.behaviors.ChildEntry+ChildEntry(ChildSpec,LocalActor<?,?>) java.util.List+add(E) java.util.List+add(E) java.util.Map+put(K,V) java.util.Map+put(K,V)",co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.ChildSpec+builder co.paralleluniverse.actors.behaviors.ChildSpec+builder co.paralleluniverse.actors.behaviors.Supervisor+children co.paralleluniverse.actors.behaviors.Supervisor+childrenById,842,19,2,,"private ChildEntry addChild1(ChildSpec spec) {
        LOG.debug(""Adding child {}"", spec);
        LocalActor actor = null;
        if (spec.builder instanceof LocalActor) {
            actor = (LocalActor) spec.builder;
            if (findEntry(actor) != null)
                throw new SupervisorException(""Supervisor "" + this + "" already supervises actor "" + actor);
        }
        Object id = spec.getId();
        if (id == null && actor != null)
            id = actor.getName();
        if (id != null && findEntryById(id) != null)
            throw new SupervisorException(""Supervisor "" + this + "" already supervises an actor by the name "" + id);
        final ChildEntry child = new ChildEntry(spec, actor);
        children.add(child);
        if (id != null)
            childrenById.put(id, child);
        return child;
    }",True
28,addChild(ChildSpec),Method,,,"co.paralleluniverse.actors.LocalActor+isInActor() co.paralleluniverse.actors.LocalActor+isInActor() co.paralleluniverse.actors.behaviors.Supervisor+addChild1(ChildSpec) co.paralleluniverse.actors.behaviors.Supervisor+addChild1(ChildSpec) co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry,LocalActor) co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry,LocalActor) co.paralleluniverse.actors.behaviors.AddChildMessage+AddChildMessage(Actor,Object,ChildSpec) co.paralleluniverse.actors.behaviors.RequestReplyHelper+from() co.paralleluniverse.actors.behaviors.RequestReplyHelper+from() co.paralleluniverse.actors.behaviors.GenValueResponseMessage+getValue() co.paralleluniverse.actors.behaviors.GenValueResponseMessage+getValue()",co.paralleluniverse.actors.behaviors.ChildSpec+builder co.paralleluniverse.actors.behaviors.ChildSpec+builder,641,16,17,,"public final Actor addChild(ChildSpec spec) throws SuspendExecution, InterruptedException {
        if (isInActor()) {
            final ChildEntry child = addChild1(spec);

            final LocalActor actor = spec.builder instanceof LocalActor ? (LocalActor) spec.builder : null;
            if (actor == null)
                start(child);
            else
                start(child, actor);

            return actor;
        } else {
            final GenResponseMessage res = call(this, new AddChildMessage(RequestReplyHelper.from(), null, spec));
            return ((GenValueResponseMessage<Actor>) res).getValue();
        }
    }",True
29,"removeChild(Object,boolean)",Method,,,"co.paralleluniverse.actors.LocalActor+isInActor() co.paralleluniverse.actors.LocalActor+isInActor() co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object) co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object) co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+shutdownChild(ChildEntry,boolean) co.paralleluniverse.actors.behaviors.Supervisor+shutdownChild(ChildEntry,boolean) co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+removeChild(ChildEntry,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+removeChild(ChildEntry,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.RemoveChildMessage+RemoveChildMessage(Actor,Object,Object,boolean) co.paralleluniverse.actors.behaviors.RequestReplyHelper+from() co.paralleluniverse.actors.behaviors.RequestReplyHelper+from() co.paralleluniverse.actors.behaviors.GenValueResponseMessage+getValue() co.paralleluniverse.actors.behaviors.GenValueResponseMessage+getValue()",co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+LOG,894,26,17,,"public final boolean removeChild(Object id, boolean terminate) throws SuspendExecution, InterruptedException {
        if (isInActor()) {
            final ChildEntry child = findEntryById(id);
            if (child == null) {
                LOG.warn(""Child {} not found"", id);
                return false;
            }

            LOG.debug(""Removing child {}"", child);
            if (child.actor != null) {
                unwatch(child);

                if (terminate)
                    shutdownChild(child, false);
                else
                    unwatch(child);
            }

            removeChild(child, null);

            return true;
        } else {
            final GenResponseMessage res = call(this, new RemoveChildMessage(RequestReplyHelper.from(), null, id, terminate));
            return ((GenValueResponseMessage<Boolean>) res).getValue();
        }
    }",True
30,"removeChild(ChildEntry,Iterator<ChildEntry>)",Method,,,java.util.Map+remove(Object) java.util.Map+remove(Object) java.util.Iterator+remove() java.util.Iterator+remove() java.util.List+remove(Object) java.util.List+remove(Object),co.paralleluniverse.actors.behaviors.Supervisor+childrenById co.paralleluniverse.actors.behaviors.Supervisor+children,272,8,2,,"private void removeChild(ChildEntry child, Iterator<ChildEntry> iter) {
        if (child.info.getId() != null)
            childrenById.remove(child.info.getId());
        if (iter != null)
            iter.remove();
        else
            children.remove(child);
    }",True
31,handleLifecycleMessage(LifecycleMessage),Method,,,co.paralleluniverse.actors.ExitMessage+getWatch() co.paralleluniverse.actors.ExitMessage+getWatch() co.paralleluniverse.actors.behaviors.Supervisor+findEntry(LocalActor) co.paralleluniverse.actors.behaviors.Supervisor+findEntry(LocalActor) co.paralleluniverse.actors.behaviors.BasicGenBehavior+shutdown() co.paralleluniverse.actors.behaviors.BasicGenBehavior+shutdown() co.paralleluniverse.strands.Strand+interrupt() co.paralleluniverse.actors.LocalActor+getStrand() co.paralleluniverse.actors.LocalActor+getStrand() co.paralleluniverse.strands.Strand+interrupt() co.paralleluniverse.actors.behaviors.BasicGenBehavior+handleLifecycleMessage(LifecycleMessage),co.paralleluniverse.actors.ExitMessage+actor co.paralleluniverse.actors.ExitMessage+actor co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.ExitMessage+cause co.paralleluniverse.actors.behaviors.Supervisor+restartStrategy co.paralleluniverse.actors.ExitMessage+cause co.paralleluniverse.actors.behaviors.Supervisor+LOG,1067,26,20,,"@Override
    protected final void handleLifecycleMessage(LifecycleMessage m) {
        boolean handled = false;
        try {
            if (m instanceof ExitMessage) {
                final ExitMessage death = (ExitMessage) m;
                if (death.getWatch() != null && death.actor instanceof LocalActor) {
                    final LocalActor actor = (LocalActor) death.actor;
                    final ChildEntry child = findEntry(actor);

                    if (child != null) {
                        LOG.info(""Detected child death: "" + child + "". cause: "", death.cause);
                        if (!restartStrategy.onChildDeath(this, child, death.cause)) {
                            LOG.info(""Supervisor {} giving up."", this);
                            shutdown();
                        }
                        handled = true;
                    }
                }
            }
        } catch (InterruptedException e) {
            getStrand().interrupt();
        }
        if (!handled)
            super.handleLifecycleMessage(m);
    }",True
32,"tryRestart(ChildEntry,Throwable,long,Iterator<ChildEntry>)",Method,,,"co.paralleluniverse.actors.LocalActor+verifyInActor() co.paralleluniverse.actors.LocalActor+verifyInActor() co.paralleluniverse.actors.behaviors.Supervisor+shutdownChild(ChildEntry,boolean) co.paralleluniverse.actors.behaviors.Supervisor+shutdownChild(ChildEntry,boolean) co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+shutdownChild(ChildEntry,boolean) co.paralleluniverse.actors.behaviors.Supervisor+shutdownChild(ChildEntry,boolean) co.paralleluniverse.actors.behaviors.Supervisor+removeChild(ChildEntry,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+removeChild(ChildEntry,Iterator<ChildEntry>) java.lang.AssertionError+AssertionError()",co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+LOG,1382,29,2,,"private boolean tryRestart(ChildEntry child, Throwable cause, long now, Iterator<ChildEntry> it) throws InterruptedException {
        verifyInActor();
        switch (child.info.mode) {
            case TRANSIENT:
                if (cause == null)
                    return true;
            // fall through
            case PERMANENT:
                LOG.info(""Supervisor trying to restart child {}. (cause: {})"", child, cause);
                final Actor actor = child.actor;
                shutdownChild(child, true);
                child.restartHistory.addRestart(now);
                final int numRestarts = child.restartHistory.numRestarts(now - child.info.unit.toMillis(child.info.duration));
                if (LOG.isDebugEnabled())
                    LOG.debug(""Child {} has been restarted {} times in the last {} {}s"", child, numRestarts, child.info.duration, child.info.unit);
                if (numRestarts > child.info.maxRestarts) {
                    LOG.info(this + "": too many restarts for child {}. Giving up."", actor);
                    return false;
                }
                start(child);
                return true;
            case TEMPORARY:
                shutdownChild(child, false);
                removeChild(child, it);
                return true;
            default:
                throw new AssertionError();
        }
    }",True
33,start(ChildEntry),Method,,,"co.paralleluniverse.actors.LocalActor+isDone() co.paralleluniverse.actors.LocalActor+isDone() java.lang.IllegalStateException+IllegalStateException(String) co.paralleluniverse.actors.ActorImpl+getName() co.paralleluniverse.actors.ActorImpl+getName() co.paralleluniverse.actors.ActorImpl+setName(Object) co.paralleluniverse.actors.ActorImpl+setName(Object) co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+setMonitor(ActorMonitor) co.paralleluniverse.actors.LocalActor+setMonitor(ActorMonitor) co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.ActorMonitor+addRestart() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.LocalActor+getMonitor() co.paralleluniverse.actors.ActorMonitor+addRestart() co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry,LocalActor) co.paralleluniverse.actors.behaviors.Supervisor+start(ChildEntry,LocalActor)",co.paralleluniverse.actors.behaviors.Supervisor+LOG,729,18,2,,"private LocalActor start(ChildEntry child) {
        final LocalActor old = child.actor;
        if (old != null && !old.isDone())
            throw new IllegalStateException(""Actor "" + child.actor + "" cannot be restarted because it is not dead"");

        final LocalActor actor = child.info.builder.build();
        if (actor.getName() == null && child.info.id != null)
            actor.setName(child.info.id);

        LOG.info(""{} starting child {}"", this, actor);

        if (old != null && actor.getMonitor() == null && old.getMonitor() != null)
            actor.setMonitor(old.getMonitor());
        if (actor.getMonitor() != null)
            actor.getMonitor().addRestart();

        return start(child, actor);
    }",True
34,"start(ChildEntry,LocalActor)",Method,,,"co.paralleluniverse.actors.LocalActor+getStrand() co.paralleluniverse.actors.LocalActor+getStrand() co.paralleluniverse.actors.LocalActor+getStrand() co.paralleluniverse.actors.LocalActor+getStrand() co.paralleluniverse.actors.behaviors.Supervisor+createStrandForActor(Strand,LocalActor) co.paralleluniverse.actors.behaviors.Supervisor+createStrandForActor(Strand,LocalActor) co.paralleluniverse.actors.LocalActor+watch(Actor) co.paralleluniverse.actors.LocalActor+watch(Actor) co.paralleluniverse.strands.Strand+start() co.paralleluniverse.strands.Strand+start()",co.paralleluniverse.actors.behaviors.Supervisor+LOG,551,17,2,,"private LocalActor start(ChildEntry child, LocalActor actor) {
        final Strand strand;
        if (actor.getStrand() != null)
            strand = actor.getStrand();
        else
            strand = createStrandForActor(child.actor != null ? child.actor.getStrand() : null, actor);

        child.actor = actor;
        child.watch = watch(actor);

        try {
            strand.start();
        } catch (IllegalThreadStateException e) {
            LOG.info(""Child {} has already been started."", actor);
        }
        return actor;
    }",True
35,"shutdownChild(ChildEntry,boolean)",Method,,,co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.ActorImpl+sendOrInterrupt(Object) co.paralleluniverse.actors.ActorImpl+sendOrInterrupt(Object) co.paralleluniverse.actors.ShutdownMessage+ShutdownMessage(Actor) co.paralleluniverse.actors.behaviors.Supervisor+joinChild(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+joinChild(ChildEntry),co.paralleluniverse.actors.behaviors.Supervisor+LOG,624,17,2,,"private void shutdownChild(ChildEntry child, boolean beforeRestart) throws InterruptedException {
        if (child.actor != null) {
            unwatch(child);
            if (!child.actor.isDone()) {
                LOG.info(""{} shutting down child {}"", this, child.actor);
                ((ActorImpl) child.actor).sendOrInterrupt(new ShutdownMessage(this));
            }
            try {
                joinChild(child);
            } finally {
                if (!beforeRestart) {
                    child.actor.stopMonitor();
                    child.actor = null;
                }
            }
        }
    }",True
36,shutdownChildren(),Method,,,co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+unwatch(ChildEntry) co.paralleluniverse.actors.ActorImpl+sendOrInterrupt(Object) co.paralleluniverse.actors.ActorImpl+sendOrInterrupt(Object) co.paralleluniverse.actors.ShutdownMessage+ShutdownMessage(Actor) co.paralleluniverse.actors.behaviors.Supervisor+joinChild(ChildEntry) co.paralleluniverse.actors.behaviors.Supervisor+joinChild(ChildEntry),co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+children co.paralleluniverse.actors.behaviors.Supervisor+children,758,21,2,,"private void shutdownChildren() throws InterruptedException {
        LOG.info(""{} shutting down all children."", this);
        for (ChildEntry child : children) {
            if (child.actor != null) {
                unwatch(child);
                ((ActorImpl) child.actor).sendOrInterrupt(new ShutdownMessage(this));
            }
        }

        for (ChildEntry child : children) {
            if (child.actor != null) {
                try {
                    joinChild(child);
                    if (child.actor != null)
                        child.actor.stopMonitor(); // must be done after join to avoid a race with the actor
                } finally {
                    child.actor = null;
                }
            }
        }
    }",True
37,joinChild(ChildEntry),Method,,,java.lang.Throwable+getCause() java.lang.Throwable+getCause() java.lang.Throwable+getCause() java.lang.Throwable+getCause(),co.paralleluniverse.actors.behaviors.Supervisor+LOG java.util.concurrent.TimeUnit+MILLISECONDS co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+LOG java.util.concurrent.TimeUnit+MILLISECONDS co.paralleluniverse.actors.behaviors.Supervisor+LOG co.paralleluniverse.actors.behaviors.Supervisor+LOG,1457,34,2,,"private boolean joinChild(ChildEntry child) throws InterruptedException {
        LOG.debug(""Joining child {}"", child);
        if (child.actor != null) {
            try {
                child.actor.join(child.info.shutdownDeadline, TimeUnit.MILLISECONDS);
                LOG.debug(""Child {} terminated normally"", child.actor);
                return true;
            } catch (ExecutionException ex) {
                LOG.info(""Child {} terminated with exception {}"", child.actor, ex.getCause());
                return true;
            } catch (TimeoutException ex) {
                LOG.warn(""Child {} shutdown timeout. Interrupting..."", child.actor);
                // is this the best we can do?
                child.actor.getStrand().interrupt();

                try {
                    child.actor.join(child.info.shutdownDeadline, TimeUnit.MILLISECONDS);
                    return true;
                } catch (ExecutionException e) {
                    LOG.info(""Child {} terminated with exception {}"", child.actor, ex.getCause());
                    return true;
                } catch (TimeoutException e) {
                    LOG.warn(""Child {} could not shut down..."", child.actor);

                    child.actor.stopMonitor();
                    child.actor.unregister();
                    child.actor = null;

                    return false;
                }
            }
        } else
            return true;
    }",True
38,unwatch(ChildEntry),Method,,,"co.paralleluniverse.actors.LocalActor+unwatch(Actor,Object) co.paralleluniverse.actors.LocalActor+unwatch(Actor,Object)",,193,6,2,,"private void unwatch(ChildEntry child) {
        if (child.actor != null && child.watch != null) {
            unwatch(child.actor, child.watch);
            child.watch = null;
        }
    }",True
39,"createStrandForActor(Strand,LocalActor)",Method,,,"co.paralleluniverse.strands.Strand+clone(Strand,SuspendableCallable<?>) co.paralleluniverse.strands.Strand+clone(Strand,SuspendableCallable<?>) co.paralleluniverse.fibers.Fiber+Fiber(SuspendableCallable<V>) co.paralleluniverse.actors.LocalActor+setStrand(Strand) co.paralleluniverse.actors.LocalActor+setStrand(Strand)",,300,9,2,,"private Strand createStrandForActor(Strand oldStrand, LocalActor actor) {
        final Strand strand;
        if (oldStrand != null)
            strand = Strand.clone(oldStrand, actor);
        else
            strand = new Fiber(actor);
        actor.setStrand(strand);
        return strand;
    }",True
40,findEntry(LocalActor),Method,,,co.paralleluniverse.actors.ActorImpl+getName() co.paralleluniverse.actors.ActorImpl+getName() co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object) co.paralleluniverse.actors.behaviors.Supervisor+findEntryById(Object) co.paralleluniverse.actors.ActorImpl+getName() co.paralleluniverse.actors.ActorImpl+getName(),co.paralleluniverse.actors.behaviors.Supervisor+children,370,12,2,,"private ChildEntry findEntry(LocalActor actor) {
        if (actor.getName() != null) {
            ChildEntry child = findEntryById(actor.getName());
            if (child != null)
                return child;
        }
        for (ChildEntry child : children) {
            if (child.actor == actor)
                return child;
        }
        return null;
    }",True
41,findEntryById(Object),Method,,,java.util.Map+get(Object) java.util.Map+get(Object),co.paralleluniverse.actors.behaviors.Supervisor+childrenById,92,3,2,,"private ChildEntry findEntryById(Object name) {
        return childrenById.get(name);
    }",True
42,now(),Method,,,java.lang.System+nanoTime() java.lang.System+nanoTime(),,70,3,2,,"private long now() {
        return System.nanoTime() / 1000000;
    }",True
43,ChildMode,Field,,,,,21,1,1,,public enum ChildMode,False
44,RestartStrategy,Field,,,,,27,1,1,,public enum RestartStrategy,False
45,"onChildDeath(Supervisor,ChildEntry,Throwable)",Method,,,"co.paralleluniverse.actors.behaviors.Supervisor+tryRestart(ChildEntry,Throwable,long,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+tryRestart(ChildEntry,Throwable,long,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+now() co.paralleluniverse.actors.behaviors.Supervisor+now() co.paralleluniverse.actors.behaviors.Supervisor+shutdownChildren() co.paralleluniverse.actors.behaviors.Supervisor+shutdownChildren() java.util.List+iterator() java.util.List+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() co.paralleluniverse.actors.behaviors.Supervisor+tryRestart(ChildEntry,Throwable,long,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+tryRestart(ChildEntry,Throwable,long,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+now() co.paralleluniverse.actors.behaviors.Supervisor+now() java.util.List+iterator() java.util.List+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() co.paralleluniverse.actors.behaviors.Supervisor+tryRestart(ChildEntry,Throwable,long,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+tryRestart(ChildEntry,Throwable,long,Iterator<ChildEntry>) co.paralleluniverse.actors.behaviors.Supervisor+now() co.paralleluniverse.actors.behaviors.Supervisor+now()",co.paralleluniverse.actors.behaviors.Supervisor+children co.paralleluniverse.actors.behaviors.Supervisor+children,174,4,0,,"@Override
            boolean onChildDeath(Supervisor supervisor, ChildEntry child, Throwable cause) throws InterruptedException {
                return false;
            }",False
46,"onChildDeath(Supervisor,ChildEntry,Throwable)",Method,,,,,228,4,0,,"@Override
            boolean onChildDeath(Supervisor supervisor, ChildEntry child, Throwable cause) throws InterruptedException {
                return supervisor.tryRestart(child, cause, supervisor.now(), null);
            }",False
47,"onChildDeath(Supervisor,ChildEntry,Throwable)",Method,,,,,504,10,0,,"@Override
            boolean onChildDeath(Supervisor supervisor, ChildEntry child, Throwable cause) throws InterruptedException {
                supervisor.shutdownChildren();
                for (Iterator<ChildEntry> it = supervisor.children.iterator(); it.hasNext();) {
                    final ChildEntry c = it.next();
                    if (!supervisor.tryRestart(c, cause, supervisor.now(), it))
                        return false;
                }
                return true;
            }",False
48,"onChildDeath(Supervisor,ChildEntry,Throwable)",Method,,,,,580,13,0,,"@Override
            boolean onChildDeath(Supervisor supervisor, ChildEntry child, Throwable cause) throws InterruptedException {
                boolean found = false;
                for (Iterator<ChildEntry> it = supervisor.children.iterator(); it.hasNext();) {
                    final ChildEntry c = it.next();
                    if (c == child)
                        found = true;

                    if (found && !supervisor.tryRestart(c, cause, supervisor.now(), it))
                        return false;
                }
                return true;
            }",False
49,"onChildDeath(Supervisor,ChildEntry,Throwable)",Method,,,,,116,1,1024,,"abstract boolean onChildDeath(Supervisor supervisor, ChildEntry child, Throwable cause) throws InterruptedException;",False
50,info,Field,,,,,21,1,16,,final ChildSpec info;,False
51,"AddChildMessage(Actor,Object,ChildSpec)",Method,,,,co.paralleluniverse.actors.behaviors.AddChildMessage+info co.paralleluniverse.actors.behaviors.AddChildMessage+info,132,4,1,,"public AddChildMessage(Actor from, Object id, ChildSpec info) {
            super(from, id);
            this.info = info;
        }",False
52,name,Field,,,,,18,1,16,,final Object name;,False
53,terminate,Field,,,,,24,1,16,,final boolean terminate;,False
54,"RemoveChildMessage(Actor,Object,Object,boolean)",Method,,,,co.paralleluniverse.actors.behaviors.RemoveChildMessage+name co.paralleluniverse.actors.behaviors.RemoveChildMessage+name co.paralleluniverse.actors.behaviors.RemoveChildMessage+terminate co.paralleluniverse.actors.behaviors.RemoveChildMessage+terminate,191,5,1,,"public RemoveChildMessage(Actor from, Object id, Object name, boolean terminate) {
            super(from, id);
            this.name = name;
            this.terminate = terminate;
        }",False
55,id,Field,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",,,,16,1,16,,final Object id;,False
56,builder,Field,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",,,,33,1,16,,"final ActorBuilder<?, ?> builder;",False
57,mode,Field,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",,,,21,1,16,,final ChildMode mode;,False
58,maxRestarts,Field,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",,,,22,1,16,,final int maxRestarts;,False
59,duration,Field,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",,,,20,1,16,,final long duration;,False
60,unit,Field,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",,,,20,1,16,,final TimeUnit unit;,False
61,shutdownDeadline,Field,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",,,,28,1,16,,final long shutdownDeadline;,False
62,"ChildSpec(Object,ChildMode,int,long,TimeUnit,long,ActorBuilder<?,?>)",Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+id co.paralleluniverse.actors.behaviors.ChildSpec+id co.paralleluniverse.actors.behaviors.ChildSpec+builder co.paralleluniverse.actors.behaviors.ChildSpec+builder co.paralleluniverse.actors.behaviors.ChildSpec+mode co.paralleluniverse.actors.behaviors.ChildSpec+mode co.paralleluniverse.actors.behaviors.ChildSpec+maxRestarts co.paralleluniverse.actors.behaviors.ChildSpec+maxRestarts co.paralleluniverse.actors.behaviors.ChildSpec+duration co.paralleluniverse.actors.behaviors.ChildSpec+duration co.paralleluniverse.actors.behaviors.ChildSpec+unit co.paralleluniverse.actors.behaviors.ChildSpec+unit co.paralleluniverse.actors.behaviors.ChildSpec+shutdownDeadline co.paralleluniverse.actors.behaviors.ChildSpec+shutdownDeadline,411,9,1,,"public ChildSpec(Object id, ChildMode mode, int maxRestarts, long duration, TimeUnit unit, long shutdownDeadline, ActorBuilder<?, ?> builder) {
            this.id = id;
            this.builder = builder;
            this.mode = mode;
            this.maxRestarts = maxRestarts;
            this.duration = duration;
            this.unit = unit;
            this.shutdownDeadline = shutdownDeadline;
        }",False
63,getId(),Method,,co.paralleluniverse.actors.behaviors.Supervisor+addChild1(ChildSpec),,co.paralleluniverse.actors.behaviors.ChildSpec+id,56,3,1,,"public Object getId() {
            return id;
        }",False
64,getBuilder(),Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+builder,78,3,1,,"public ActorBuilder<?, ?> getBuilder() {
            return builder;
        }",False
65,getMode(),Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+mode,63,3,1,,"public ChildMode getMode() {
            return mode;
        }",False
66,getMaxRestarts(),Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+maxRestarts,71,3,1,,"public int getMaxRestarts() {
            return maxRestarts;
        }",False
67,getDuration(),Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+duration,66,3,1,,"public long getDuration() {
            return duration;
        }",False
68,getDurationUnit(),Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+unit,70,3,1,,"public TimeUnit getDurationUnit() {
            return unit;
        }",False
69,getShutdownDeadline(),Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+shutdownDeadline,82,3,1,,"public long getShutdownDeadline() {
            return shutdownDeadline;
        }",False
70,toString(),Method,,,,co.paralleluniverse.actors.behaviors.ChildSpec+builder co.paralleluniverse.actors.behaviors.ChildSpec+mode co.paralleluniverse.actors.behaviors.ChildSpec+maxRestarts co.paralleluniverse.actors.behaviors.ChildSpec+duration co.paralleluniverse.actors.behaviors.ChildSpec+unit co.paralleluniverse.actors.behaviors.ChildSpec+shutdownDeadline co.paralleluniverse.actors.behaviors.ChildEntry+info co.paralleluniverse.actors.behaviors.ChildEntry+actor,263,4,1,,"@Override
        public String toString() {
            return ""ActorInfo{"" + ""builder: "" + builder + "", mode: "" + mode + "", maxRestarts: "" + maxRestarts + "", duration: "" + duration + "", unit: "" + unit + "", shutdownDeadline: "" + shutdownDeadline + '}';
        }",False
71,info,Field,,,,,21,1,16,,final ChildSpec info;,False
72,restartHistory,Field,,,,,36,1,16,,final RestartHistory restartHistory;,False
73,watch,Field,,,,,13,1,0,,Object watch;,False
74,actor,Field,,,,,32,1,64,,"volatile LocalActor<?, ?> actor;",False
75,ChildEntry(ChildSpec),Method,,,,,75,3,1,,"public ChildEntry(ChildSpec info) {
            this(info, null);
        }",False
76,"ChildEntry(ChildSpec,LocalActor<?,?>)",Method,,,co.paralleluniverse.actors.behaviors.RestartHistory+RestartHistory(int),co.paralleluniverse.actors.behaviors.ChildEntry+info co.paralleluniverse.actors.behaviors.ChildEntry+info co.paralleluniverse.actors.behaviors.ChildEntry+restartHistory co.paralleluniverse.actors.behaviors.ChildEntry+restartHistory co.paralleluniverse.actors.behaviors.ChildSpec+maxRestarts co.paralleluniverse.actors.behaviors.ChildEntry+actor co.paralleluniverse.actors.behaviors.ChildEntry+actor,208,6,1,,"public ChildEntry(ChildSpec info, LocalActor<?, ?> actor) {
            this.info = info;
            this.restartHistory = new RestartHistory(info.maxRestarts + 1);

            this.actor = actor;
        }",False
77,toString(),Method,,,,,131,4,1,,"@Override
        public String toString() {
            return ""ActorEntry{"" + ""info="" + info + "" actor="" + actor + '}';
        }",False
78,restarts,Field,,,,,30,1,18,,private final long[] restarts;,False
79,index,Field,,,,,18,1,2,,private int index;,False
80,RestartHistory(int),Method,,,,co.paralleluniverse.actors.behaviors.RestartHistory+restarts co.paralleluniverse.actors.behaviors.RestartHistory+restarts co.paralleluniverse.actors.behaviors.RestartHistory+index co.paralleluniverse.actors.behaviors.RestartHistory+index,127,4,1,,"public RestartHistory(int windowSize) {
            this.restarts = new long[windowSize];
            this.index = 0;
        }",False
81,addRestart(long),Method,,,co.paralleluniverse.actors.behaviors.RestartHistory+mod(int) co.paralleluniverse.actors.behaviors.RestartHistory+mod(int),co.paralleluniverse.actors.behaviors.RestartHistory+restarts co.paralleluniverse.actors.behaviors.RestartHistory+index co.paralleluniverse.actors.behaviors.RestartHistory+index co.paralleluniverse.actors.behaviors.RestartHistory+index,115,4,1,,"public void addRestart(long now) {
            restarts[index] = now;
            index = mod(index + 1);
        }",False
82,numRestarts(long),Method,,,co.paralleluniverse.actors.behaviors.RestartHistory+mod(int) co.paralleluniverse.actors.behaviors.RestartHistory+mod(int) co.paralleluniverse.actors.behaviors.RestartHistory+mod(int) co.paralleluniverse.actors.behaviors.RestartHistory+mod(int),co.paralleluniverse.actors.behaviors.RestartHistory+index co.paralleluniverse.actors.behaviors.RestartHistory+index co.paralleluniverse.actors.behaviors.RestartHistory+restarts co.paralleluniverse.actors.behaviors.RestartHistory+restarts co.paralleluniverse.actors.behaviors.RestartHistory+index,414,11,1,,"public int numRestarts(long since) {
            int count = 0;
            for (int i = mod(index - 1); i != index; i = mod(i - 1)) {
                if (restarts[i] < since) // || restarts[i] == 0L is implied
                    break;
                count++;
            }
            if (restarts[index] >= since) // || restarts[i] == 0L is implied
                count++;
            return count;
        }",False
83,mod(int),Method,,,,co.paralleluniverse.actors.behaviors.RestartHistory+restarts co.paralleluniverse.actors.behaviors.RestartHistory+restarts co.paralleluniverse.actors.behaviors.RestartHistory+restarts,332,8,2,,"private int mod(int i) {
            // could be made fast by forcing restarts.length to be a power of two, but for now, we don't need this to be fast.
            if (i >= restarts.length)
                return i - restarts.length;
            if (i < 0)
                return i + restarts.length;
            return i;
        }",False
