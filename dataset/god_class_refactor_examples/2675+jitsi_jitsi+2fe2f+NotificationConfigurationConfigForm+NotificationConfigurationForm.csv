index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,logger,Field,,,,,102,2,18,,"private final Logger logger
            = Logger.getLogger(NotificationConfigurationConfigForm.class);",False
2,dataVector,Field,,,,,33,1,2,,private Vector dataVector = null;,False
3,notificationList,Field,,,,,35,1,2,,private ListMulti notificationList;,False
4,columnToolTips,Field,,,,,227,6,25,,"public static final String[] columnToolTips
            = {""Enable or disable this feature"",
            ""Execute a program"",
            ""Display a messagebox"",
            ""Play a sound"",
            ""Description of event"" };",False
5,activate,Field,,,,,25,1,2,,private JButton activate;,False
6,desactivate,Field,,,,,28,1,2,,private JButton desactivate;,False
7,playSoundCheckBox,Field,,,,,36,1,2,,private JCheckBox playSoundCheckBox;,False
8,playSoundButton,Field,,,,,32,1,2,,private JButton playSoundButton;,False
9,soundFileTextField,Field,,,,,38,1,2,,private JTextField soundFileTextField;,False
10,soundFileChooser,Field,,,,,33,1,2,,private JButton soundFileChooser;,False
11,programCheckBox,Field,,,,,34,1,2,,private JCheckBox programCheckBox;,False
12,programFileTextField,Field,,,,,40,1,2,,private JTextField programFileTextField;,False
13,programFileChooser,Field,,,,,35,1,2,,private JButton programFileChooser;,False
14,popupCheckBox,Field,,,,,32,1,2,,private JCheckBox popupCheckBox;,False
15,turnOnAll,Field,,,,,26,1,2,,private JButton turnOnAll;,False
16,turnOffAll,Field,,,,,27,1,2,,private JButton turnOffAll;,False
17,comboBoxTurnOn,Field,,,,,33,1,2,,private JComboBox comboBoxTurnOn;,False
18,comboBoxTurnOff,Field,,,,,34,1,2,,private JComboBox comboBoxTurnOff;,False
19,apply,Field,,,,,22,1,2,,private JButton apply;,False
20,restore,Field,,,,,24,1,2,,private JButton restore;,False
21,fileChooserProgram,Field,,,,,40,1,2,,private JFileChooser fileChooserProgram;,False
22,fileChooserSound,Field,,,,,38,1,2,,private JFileChooser fileChooserSound;,False
23,index,Field,,,,,23,1,2,,private int index = -1;,False
24,turnAll,Field,,,,,32,1,2,,private boolean turnAll = false;,False
25,notificationService,Field,,,,,55,1,2,,private NotificationService notificationService = null;,False
26,noListener,Field,,,,,35,1,2,,private boolean noListener = false;,False
27,NotificationConfigurationConfigForm(),Method,,,"javax.swing.JPanel+JPanel() java.awt.GridBagLayout+GridBagLayout() javax.swing.JPanel+JPanel() java.awt.GridBagLayout+GridBagLayout() javax.swing.JPanel+JPanel() java.awt.GridBagConstraints+GridBagConstraints() javax.swing.JLabel+JLabel(Icon) javax.swing.ImageIcon+ImageIcon(byte[]) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) javax.swing.JLabel+JLabel(Icon) javax.swing.ImageIcon+ImageIcon(byte[]) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) javax.swing.JLabel+JLabel(Icon) javax.swing.ImageIcon+ImageIcon(byte[]) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+ListMulti(Object[],String[]) java.util.Vector+Vector() java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) javax.swing.BorderFactory+createTitledBorder(String) javax.swing.BorderFactory+createTitledBorder(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.JPanel+JPanel() java.awt.FlowLayout+FlowLayout(int) java.awt.FlowLayout+setHgap(int) java.awt.FlowLayout+setHgap(int) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.JButton+JButton(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.JComponent+setMinimumSize(Dimension) javax.swing.JComponent+setMinimumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setPreferredSize(Dimension) javax.swing.JComponent+setPreferredSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.JButton+JButton(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.JComponent+setMinimumSize(Dimension) javax.swing.JComponent+setMinimumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setPreferredSize(Dimension) javax.swing.JComponent+setPreferredSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.JCheckBox+JCheckBox(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.AbstractButton+addItemListener(ItemListener) javax.swing.AbstractButton+addItemListener(ItemListener) javax.swing.JButton+JButton(Icon) javax.swing.ImageIcon+ImageIcon(byte[]) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) javax.swing.JComponent+setMinimumSize(Dimension) javax.swing.JComponent+setMinimumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setPreferredSize(Dimension) javax.swing.JComponent+setPreferredSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.JTextField+JTextField() javax.swing.JComponent+setMinimumSize(Dimension) javax.swing.JComponent+setMinimumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setPreferredSize(Dimension) javax.swing.JComponent+setPreferredSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.JButton+JButton(Icon) javax.swing.ImageIcon+ImageIcon(byte[]) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) javax.swing.JComponent+setMinimumSize(Dimension) javax.swing.JComponent+setMinimumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setPreferredSize(Dimension) javax.swing.JComponent+setPreferredSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.JCheckBox+JCheckBox(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.AbstractButton+addItemListener(ItemListener) javax.swing.AbstractButton+addItemListener(ItemListener) javax.swing.JTextField+JTextField() javax.swing.JComponent+setMinimumSize(Dimension) javax.swing.JComponent+setMinimumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setPreferredSize(Dimension) javax.swing.JComponent+setPreferredSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.JButton+JButton(Icon) javax.swing.ImageIcon+ImageIcon(byte[]) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) javax.swing.JComponent+setMinimumSize(Dimension) javax.swing.JComponent+setMinimumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setPreferredSize(Dimension) javax.swing.JComponent+setPreferredSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.JCheckBox+JCheckBox(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.AbstractButton+addItemListener(ItemListener) javax.swing.AbstractButton+addItemListener(ItemListener) java.awt.GridBagConstraints+GridBagConstraints() java.awt.Insets+Insets(int,int,int,int) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() java.awt.Insets+Insets(int,int,int,int) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() java.awt.Insets+Insets(int,int,int,int) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() java.awt.Insets+Insets(int,int,int,int) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() java.awt.Insets+Insets(int,int,int,int) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Insets+Insets(int,int,int,int) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() java.awt.Insets+Insets(int,int,int,int) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() java.awt.Insets+Insets(int,int,int,int) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) java.awt.GridBagConstraints+GridBagConstraints() java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagConstraints+GridBagConstraints() javax.swing.JComboBox+JComboBox(E[]) javax.swing.JComboBox+addActionListener(ActionListener) javax.swing.JComboBox+addActionListener(ActionListener) javax.swing.JComboBox+JComboBox(E[]) javax.swing.JComboBox+addActionListener(ActionListener) javax.swing.JComboBox+addActionListener(ActionListener) javax.swing.JButton+JButton(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.JButton+JButton(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.BorderFactory+createTitledBorder(String) javax.swing.BorderFactory+createTitledBorder(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) java.awt.FlowLayout+FlowLayout(int,int,int) javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.JFileChooser+JFileChooser() javax.swing.JFileChooser+JFileChooser() javax.swing.JFileChooser+setMultiSelectionEnabled(boolean) javax.swing.JFileChooser+setMultiSelectionEnabled(boolean) javax.swing.JFileChooser+setMultiSelectionEnabled(boolean) javax.swing.JFileChooser+setMultiSelectionEnabled(boolean) javax.swing.JFileChooser+addChoosableFileFilter(FileFilter) javax.swing.JFileChooser+addChoosableFileFilter(FileFilter) net.java.sip.communicator.plugin.notificationconfiguration.SoundFilter+SoundFilter() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+addMouseListener(MouseListener) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+addMouseListener(MouseListener) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm.MyMouseAdapter+MyMouseAdapter() java.awt.GridBagConstraints+GridBagConstraints() javax.swing.JButton+JButton(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.JButton+JButton(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) javax.swing.AbstractButton+addActionListener(ActionListener) javax.swing.AbstractButton+addActionListener(ActionListener) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.GridBagLayout+setConstraints(Component,GridBagConstraints) java.awt.Container+add(Component) java.awt.Container+add(Component) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationActivator+getNotificationService() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationActivator+getNotificationService() net.java.sip.communicator.service.notification.NotificationService+addNotificationChangeListener(NotificationChangeListener) net.java.sip.communicator.service.notification.NotificationService+addNotificationChangeListener(NotificationChangeListener) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+buildingVector() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+buildingVector() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTable() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTable() java.util.Vector+size() java.util.Vector+size() java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int)",java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+gridheight java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+weighty java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+BOTH net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+columnToolTips net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList java.awt.FlowLayout+CENTER net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+HORIZONTAL java.awt.GridBagConstraints+insets net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+insets net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+insets java.awt.GridBagConstraints+anchor java.awt.GridBagConstraints+EAST net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+insets java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+HORIZONTAL net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+anchor java.awt.GridBagConstraints+WEST java.awt.GridBagConstraints+insets net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+HORIZONTAL java.awt.GridBagConstraints+insets net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+HORIZONTAL java.awt.GridBagConstraints+insets net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+insets java.awt.GridBagConstraints+anchor java.awt.GridBagConstraints+WEST net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+HORIZONTAL net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+gridheight java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+BOTH java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+gridheight java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+BOTH net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOff net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOff net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOffAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOffAll java.awt.FlowLayout+CENTER net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOffAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOff net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserSound net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserProgram net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserSound net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserProgram net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserSound net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList java.awt.GridBagConstraints+gridx java.awt.GridBagConstraints+gridy java.awt.GridBagConstraints+gridwidth java.awt.GridBagConstraints+gridheight java.awt.GridBagConstraints+weightx java.awt.GridBagConstraints+fill java.awt.GridBagConstraints+BOTH net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+restore net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+restore net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+apply net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+apply net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+apply java.awt.BorderLayout+EAST net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+restore java.awt.BorderLayout+WEST net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index,11149,269,1,,"public NotificationConfigurationConfigForm()
    {
        super();

        JPanel actions = new JPanel();
        GridBagLayout actionsLayout = new GridBagLayout();
        JPanel applyPanel = new JPanel();
        GridBagLayout gridLayoutGlobal = new GridBagLayout();
        JPanel quickControl = new JPanel();
        String[] textComboBox =
            { ""Sounds"", ""Program Execution"", ""Messages Popup"" };

        // constraints on the table
        GridBagConstraints constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 0;
        constraints.gridwidth = 1;
        constraints.gridheight = 1;
        constraints.weightx = 1.0;
        constraints.weighty = 1.0;
        constraints.fill = GridBagConstraints.BOTH;

        JLabel icon1 =
            new JLabel(new ImageIcon(Resources.getImageInBytes(""progIcon"")));
        JLabel icon2 =
            new JLabel(new ImageIcon(Resources.getImageInBytes(""popupIcon"")));
        JLabel icon3 =
            new JLabel(new ImageIcon(Resources.getImageInBytes(""soundIcon"")));
        Object column[] =
            { ""Status"", icon1, icon2, icon3, ""Event"" };
        notificationList = new ListMulti(column, columnToolTips);

        dataVector = new Vector();
        //dataVector.add(row1);
        //dataVector.add(row2);
        //dataVector.add(row3);
        
        gridLayoutGlobal.setConstraints(notificationList, constraints);
        this.add(notificationList);
                
        // Initializing variable part of the ""actions""
        TitledBorder title1 = BorderFactory.createTitledBorder(
                Resources.getString(""actions""));
        actions.setBorder(title1);
        
        JPanel activateDescactivatePanel = new JPanel();
        FlowLayout layoutADP = new FlowLayout(FlowLayout.CENTER);
        layoutADP.setHgap(75);
        activateDescactivatePanel.setLayout(layoutADP);
        
        activate = new JButton(Resources.getString(""activate""));
        activate.setMinimumSize(new Dimension(150,30));
        activate.setPreferredSize(new Dimension(150,30));
        activate.addActionListener(this);
        desactivate = new JButton(Resources.getString(""deactivate""));
        desactivate.setMinimumSize(new Dimension(150,30));
        desactivate.setPreferredSize(new Dimension(150,30));
        desactivate.addActionListener(this);
        playSoundCheckBox = new JCheckBox(Resources.getString(""playsound""));
        playSoundCheckBox.addItemListener(this);
        playSoundButton = new JButton(
                new ImageIcon(Resources.getImageInBytes(""playIcon"")));
        playSoundButton.setMinimumSize(new Dimension(50,30));
        playSoundButton.setPreferredSize(new Dimension(50,30));
        playSoundButton.addActionListener(this);
        soundFileTextField = new JTextField();
        soundFileTextField.setMinimumSize(new Dimension(250,30));
        soundFileTextField.setPreferredSize(new Dimension(250,30));
        soundFileTextField.getDocument().addDocumentListener(this);
        soundFileChooser = new JButton(
                new ImageIcon(Resources.getImageInBytes(""foldericon"")));
        soundFileChooser.setMinimumSize(new Dimension(30,30));
        soundFileChooser.setPreferredSize(new Dimension(30,30));
        soundFileChooser.addActionListener(this);
        programCheckBox = new JCheckBox(Resources.getString(""execprog""));
        programCheckBox.addItemListener(this);
        programFileTextField = new JTextField();
        programFileTextField.setMinimumSize(new Dimension(250,30));
        programFileTextField.setPreferredSize(new Dimension(250,30));
        programFileTextField.getDocument().addDocumentListener(this);
        programFileChooser = new JButton(
                new ImageIcon(Resources.getImageInBytes(""foldericon"")));
        programFileChooser.setMinimumSize(new Dimension(30,30));
        programFileChooser.setPreferredSize(new Dimension(30,30));
        programFileChooser.addActionListener(this);
        popupCheckBox = new JCheckBox(Resources.getString(""displaypopup""));
        popupCheckBox.addItemListener(this);
        
       
        constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 0;
        constraints.gridwidth = 4;
        constraints.weightx = 1.0;
        constraints.fill = GridBagConstraints.HORIZONTAL;
        constraints.insets = new Insets(0,0,10,0);
        
        activateDescactivatePanel.add(activate);
        activateDescactivatePanel.add(desactivate);
        actionsLayout.setConstraints(activateDescactivatePanel, constraints);
        actions.add(activateDescactivatePanel);
        
        
        constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 1;
        constraints.gridwidth = 1;
        constraints.insets = new Insets(0,0,2,0);
        actionsLayout.setConstraints(playSoundCheckBox, constraints);
        actions.add(playSoundCheckBox);
        
        constraints = new GridBagConstraints();
        constraints.gridx = 1;
        constraints.gridy = 1;
        constraints.gridwidth = 1;
        constraints.insets = new Insets(0,0,2,5);
        constraints.anchor = GridBagConstraints.EAST;
        actionsLayout.setConstraints(playSoundButton, constraints);
        actions.add(playSoundButton);
        
        constraints = new GridBagConstraints();
        constraints.gridx = 2;
        constraints.gridy = 1;
        constraints.gridwidth = 1;
        constraints.insets = new Insets(0,0,2,0);
        constraints.weightx = 1.0;
        constraints.fill = GridBagConstraints.HORIZONTAL;
        actionsLayout.setConstraints(soundFileTextField, constraints);
        actions.add(soundFileTextField);
        
        constraints = new GridBagConstraints();
        constraints.gridx = 3;
        constraints.gridy = 1;
        constraints.gridwidth = 1;
        constraints.anchor = GridBagConstraints.WEST;
        constraints.insets = new Insets(0,5,2,0);
        actionsLayout.setConstraints(soundFileChooser, constraints);
        actions.add(soundFileChooser);
        
        constraints.gridx = 0;
        constraints.gridy = 2;
        constraints.gridwidth = 2;
        constraints.weightx = 1.0;
        constraints.fill = GridBagConstraints.HORIZONTAL;
        constraints.insets = new Insets(0,0,2,0);
        actionsLayout.setConstraints(programCheckBox, constraints);
        actions.add(programCheckBox);
        
        constraints = new GridBagConstraints();
        constraints.gridx = 2;
        constraints.gridy = 2;
        constraints.gridwidth = 1;
        constraints.weightx = 1.0;
        constraints.fill = GridBagConstraints.HORIZONTAL;
        constraints.insets = new Insets(0,0,2,0);
        actionsLayout.setConstraints(programFileTextField, constraints);
        actions.add(programFileTextField);
        
        constraints = new GridBagConstraints();
        constraints.gridx = 3;
        constraints.gridy = 2;
        constraints.gridwidth = 1;
        constraints.insets = new Insets(0,5,2,0);
        constraints.anchor = GridBagConstraints.WEST;
        actionsLayout.setConstraints(programFileChooser, constraints);
        actions.add(programFileChooser);
        
        constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 3;
        constraints.gridwidth = 4;
        constraints.weightx = 1.0;
        constraints.fill = GridBagConstraints.HORIZONTAL;
        actionsLayout.setConstraints(popupCheckBox, constraints);
        actions.add(popupCheckBox);
                
        actions.setLayout(actionsLayout);
                
        constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 1;
        constraints.gridwidth = 1;
        constraints.gridheight = 1;
        constraints.weightx = 1.0;
        //constraints.weighty = 40.0;
        constraints.fill = GridBagConstraints.BOTH;
        gridLayoutGlobal.setConstraints(actions, constraints);
        this.add(actions);
        
        
        
        // Initializing variables of the ""quickControl""
        constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 2;
        constraints.gridwidth = 1;
        constraints.gridheight = 1;
        constraints.weightx = 1.0;
        //constraints.weighty = 10.0;
        constraints.fill = GridBagConstraints.BOTH;
        
        comboBoxTurnOn = new JComboBox(textComboBox);
        comboBoxTurnOn.addActionListener(this);
        comboBoxTurnOff = new JComboBox(textComboBox);
        comboBoxTurnOff.addActionListener(this);
        turnOnAll = new JButton(Resources.getString(""turnonall""));
        turnOnAll.addActionListener(this);
        turnOffAll = new JButton(Resources.getString(""turnoffall""));
        turnOffAll.addActionListener(this);
        
        
        TitledBorder title2 = BorderFactory.createTitledBorder(
                Resources.getString(""quickcontrols""));
        quickControl.setLayout(new FlowLayout(FlowLayout.CENTER,2,2));
        quickControl.setBorder(title2);
        quickControl.add(turnOnAll);
        quickControl.add(comboBoxTurnOn);
        quickControl.add(turnOffAll);
        quickControl.add(comboBoxTurnOff);
        gridLayoutGlobal.setConstraints(quickControl, constraints);
//        this.add(quickControl);
        
        this.setLayout(gridLayoutGlobal);
        
        
        fileChooserSound = new JFileChooser();
        fileChooserProgram = new JFileChooser();
        fileChooserSound.setMultiSelectionEnabled(false);
        fileChooserProgram.setMultiSelectionEnabled(false);
        fileChooserSound.addChoosableFileFilter(new SoundFilter());
        
        notificationList.addMouseListener(new MyMouseAdapter());
        
        
        constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 3;
        constraints.gridwidth = 1;
        constraints.gridheight = 1;
        constraints.weightx = 1.0;
        constraints.fill = GridBagConstraints.BOTH;
        
        restore = new JButton(Resources.getString(""restore""));
        restore.addActionListener(this);
        apply = new JButton(Resources.getString(""apply""));
        apply.addActionListener(this);
        applyPanel.setLayout(new BorderLayout(5,2));
        applyPanel.add(apply, BorderLayout.EAST);
        applyPanel.add(restore, BorderLayout.WEST);
        gridLayoutGlobal.setConstraints(applyPanel, constraints);
        this.add(applyPanel);
        
        
        notificationService
                = NotificationConfigurationActivator.getNotificationService();
        notificationService.addNotificationChangeListener(this);
        this.buildingVector();
        this.updateTable();
        
        if(dataVector.size() > 0)
        {
            NotificationsTableEntry tmpNTE
                    = (NotificationsTableEntry) dataVector.elementAt(0);

            updatePanel(tmpNTE);
            notificationList.setRowSelectionInterval(0,0);
            index = 0;
        }
    }",False
28,updatePanel(NotificationsTableEntry),Method,NotificationConfigurationConfigForm() actionPerformed(ActionEvent) actionAdded(NotificationActionTypeEvent) actionAdded(NotificationActionTypeEvent) actionAdded(NotificationActionTypeEvent),,javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup(),net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener,810,17,2,,"private void updatePanel(NotificationsTableEntry tmpNTE)
    {
        noListener = true;
        activate.setEnabled(!tmpNTE.getEnabled());
        desactivate.setEnabled(tmpNTE.getEnabled());
        programCheckBox.setSelected(tmpNTE.getProgram());
        programFileChooser.setEnabled(tmpNTE.getProgram());
        programFileTextField.setEnabled(tmpNTE.getProgram());
        programFileTextField.setText(tmpNTE.getProgramFile());
        playSoundCheckBox.setSelected(tmpNTE.getSound());
        playSoundButton.setEnabled(tmpNTE.getSound());
        soundFileChooser.setEnabled(tmpNTE.getSound());
        soundFileTextField.setEnabled(tmpNTE.getSound());
        soundFileTextField.setText(tmpNTE.getSoundFile());
        popupCheckBox.setSelected(tmpNTE.getPopup());
        noListener = false;
    }",False
29,getTitle(),Method,,,net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getString(String),,226,8,1,"/** 
 * Implements the <tt>ConfigurationForm.getTitle()</tt> method. Returns the title of this configuration form.
 */
","/**
     * Implements the <tt>ConfigurationForm.getTitle()</tt> method. Returns the
     * title of this configuration form.
     */
    public String getTitle()
    {
        return Resources.getString(""notifications"");
    }",True
30,getIcon(),Method,,,net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String) net.java.sip.communicator.plugin.notificationconfiguration.Resources+getImageInBytes(String),,232,8,1,"/** 
 * Implements the <tt>ConfigurationForm.getIcon()</tt> method. Returns the icon of this configuration form.
 */
","/**
     * Implements the <tt>ConfigurationForm.getIcon()</tt> method. Returns the
     * icon of this configuration form.
     */
    public byte[] getIcon()
    {
        return Resources.getImageInBytes(""notificationIcon"");
    }",True
31,getForm(),Method,,,,,210,8,1,"/** 
 * Implements the <tt>ConfigurationForm.getForm()</tt> method. Returns the component corresponding to this configuration form.
 */
","/**
     * Implements the <tt>ConfigurationForm.getForm()</tt> method. Returns the
     * component corresponding to this configuration form.
     */
    public Object getForm()
    {
        return this;
    }",True
32,actionPerformed(ActionEvent),Method,,,"java.util.EventObject+getSource() java.util.EventObject+getSource() java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) java.util.EventObject+getSource() java.util.EventObject+getSource() java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) java.util.EventObject+getSource() java.util.EventObject+getSource() javax.swing.JFileChooser+showOpenDialog(Component) javax.swing.JFileChooser+showOpenDialog(Component) java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) javax.swing.JFileChooser+getSelectedFile() javax.swing.JFileChooser+getSelectedFile() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) java.net.URL+toExternalForm() java.net.URI+toURL() java.io.File+toURI() java.io.File+toURI() java.net.URI+toURL() java.net.URL+toExternalForm() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) java.net.URL+toExternalForm() java.net.URI+toURL() java.io.File+toURI() java.io.File+toURI() java.net.URI+toURL() java.net.URL+toExternalForm() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.net.URL+toExternalForm() java.net.URI+toURL() java.io.File+toURI() java.io.File+toURI() java.net.URI+toURL() java.net.URL+toExternalForm() net.java.sip.communicator.util.Logger+error(Object,Throwable) net.java.sip.communicator.util.Logger+error(Object,Throwable) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) java.util.EventObject+getSource() java.util.EventObject+getSource() javax.swing.JFileChooser+showOpenDialog(Component) javax.swing.JFileChooser+showOpenDialog(Component) java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) javax.swing.JFileChooser+getSelectedFile() javax.swing.JFileChooser+getSelectedFile() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) java.io.File+getAbsolutePath() java.io.File+getAbsolutePath() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) java.io.File+getAbsolutePath() java.io.File+getAbsolutePath() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.io.File+getAbsolutePath() java.io.File+getAbsolutePath() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) java.util.EventObject+getSource() java.util.EventObject+getSource() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) java.lang.String+length() java.lang.String+length() java.lang.String+length() java.lang.String+length() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationActivator+getAudioNotifierService() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationActivator+getAudioNotifierService() net.java.sip.communicator.service.audionotifier.AudioNotifierService+createAudio(String) net.java.sip.communicator.service.audionotifier.AudioNotifierService+createAudio(String) net.java.sip.communicator.service.audionotifier.SCAudioClip+play() net.java.sip.communicator.service.audionotifier.SCAudioClip+play() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) java.util.EventObject+getSource() java.util.EventObject+getSource() java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) java.lang.String+length() java.lang.String+trim() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() java.lang.String+trim() java.lang.String+length() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) java.lang.String+length() java.lang.String+trim() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() java.lang.String+trim() java.lang.String+length() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() java.util.EventObject+getSource() java.util.EventObject+getSource() java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() java.lang.String+equals(Object) javax.swing.JComboBox+getSelectedItem() javax.swing.JComboBox+getSelectedItem() java.lang.String+equals(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() java.util.EventObject+getSource() java.util.EventObject+getSource() java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+isModified() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+isModified() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.service.notification.NotificationService+setActive(String,boolean) net.java.sip.communicator.service.notification.NotificationService+setActive(String,boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.service.notification.NotificationService+registerNotificationForEvent(String,String,String,String) net.java.sip.communicator.service.notification.NotificationService+registerNotificationForEvent(String,String,String,String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.service.notification.NotificationService+removeEventNotificationAction(String,String) net.java.sip.communicator.service.notification.NotificationService+removeEventNotificationAction(String,String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.service.notification.NotificationService+registerNotificationForEvent(String,String,String,String) net.java.sip.communicator.service.notification.NotificationService+registerNotificationForEvent(String,String,String,String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.service.notification.NotificationService+removeEventNotificationAction(String,String) net.java.sip.communicator.service.notification.NotificationService+removeEventNotificationAction(String,String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() net.java.sip.communicator.service.notification.NotificationService+registerNotificationForEvent(String,String,String,String) net.java.sip.communicator.service.notification.NotificationService+registerNotificationForEvent(String,String,String,String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.service.notification.NotificationService+removeEventNotificationAction(String,String) net.java.sip.communicator.service.notification.NotificationService+removeEventNotificationAction(String,String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) java.util.EventObject+getSource() java.util.EventObject+getSource() net.java.sip.communicator.service.notification.NotificationService+restoreDefaults() net.java.sip.communicator.service.notification.NotificationService+restoreDefaults() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getLine() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getLine() java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserSound net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener javax.swing.JFileChooser+APPROVE_OPTION net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserSound net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserProgram net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener javax.swing.JFileChooser+APPROVE_OPTION net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+fileChooserProgram net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOffAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOff net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOff net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOff net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+apply net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_POPUP_MESSAGE net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_POPUP_MESSAGE net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+restore net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector,11571,294,1,,"public void actionPerformed(ActionEvent e)
    {
        if(e.getSource() == activate)
        {
            NotificationsTableEntry tmpNTE 
                    = (NotificationsTableEntry) dataVector.elementAt(index);
            tmpNTE.setEnabled(true);
            this.updateTableRow(tmpNTE, index);
            activate.setEnabled(false);
            desactivate.setEnabled(true);
            tmpNTE.setModify(true);
        }    
        else if(e.getSource() == desactivate)
        {
            NotificationsTableEntry tmpNTE 
                    = (NotificationsTableEntry) dataVector.elementAt(index);
            tmpNTE.setEnabled(false);
            this.updateTableRow(tmpNTE, index);
            activate.setEnabled(true);
            desactivate.setEnabled(false);
            tmpNTE.setModify(true);
        }
        else if(e.getSource() == soundFileChooser)
        {
            int returnVal = fileChooserSound.showOpenDialog(this);
            
            noListener = true;
            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                try
                {
                    NotificationsTableEntry tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);
                    File file = fileChooserSound.getSelectedFile();
                    //This is where a real application would open the file.
                    logger.debug(""Opening: "" + file.toURI().toURL().toExternalForm());
                    tmpNTE.setSoundFile(file.toURI().toURL().toExternalForm());
                    tmpNTE.setSound(true);
                    tmpNTE.setModify(true);
                    this.updateTableRow(tmpNTE, index);
                    notificationList.setLine(tmpNTE, index);
                    soundFileTextField.setText(file.toURI().toURL().toExternalForm());
                }
                catch (MalformedURLException ex)
                {
                    logger.error(""Error file path parsing"", ex);
                }
            }
            else
            {
                logger.debug(""Open command cancelled by user."");
            }
            noListener = false;
        }
        else if(e.getSource() == programFileChooser)
        {
            int returnVal = fileChooserProgram.showOpenDialog(this);
            noListener = true;
            
            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                NotificationsTableEntry tmpNTE
                        = (NotificationsTableEntry)dataVector.elementAt(index);
                File file = fileChooserProgram.getSelectedFile();
                //This is where a real application would open the file.
                logger.debug(""Opening: "" +file.getAbsolutePath());
                tmpNTE.setProgramFile(file.getAbsolutePath());
                tmpNTE.setProgram(true);
                tmpNTE.setModify(true);
                this.updateTableRow(tmpNTE,index);
                notificationList.setLine(tmpNTE,index);
                programFileTextField.setText(file.getAbsolutePath());
            }
            else
            {
                logger.debug(""Open command cancelled by user."");
            }
            noListener = false;
        }
        else if(e.getSource() == playSoundButton)
        {
            if(playSoundCheckBox.isSelected() == true)
            {
                String soundFile = soundFileTextField.getText();
                
                logger.debug(""****""+soundFile+""****""+soundFile.length());
                if(soundFile.length() != 0)
                {
                    AudioNotifierService audioNotifServ 
                            = NotificationConfigurationActivator
                            .getAudioNotifierService();
                    SCAudioClip sound = audioNotifServ.createAudio(soundFile);
                    sound.play();
                    //audioNotifServ.destroyAudio(sound);
                }
                else
                {
                    logger.debug(""No file specified"");
                }
            }
            else
            {
                logger.debug(""Its non-active"");
            }
        }
        else if(e.getSource() == turnOnAll)
        {
            Iterator it = dataVector.iterator();
            NotificationsTableEntry tmpNTE = null;
            int cpt = 0;
            
            if(!it.hasNext())
                return;
            
            turnAll = true;
            while(it.hasNext())
            {
                tmpNTE = (NotificationsTableEntry)it.next();
                if(((String)comboBoxTurnOn.getSelectedItem()).equals(""Sounds""))
                {
                    if(tmpNTE.getSoundFile().trim().length() != 0)
                    {
                        tmpNTE.setSound(true);
                        tmpNTE.setModify(true);
                    }
                }
                if(((String)comboBoxTurnOn.getSelectedItem())
                        .equals(""Program Execution""))
                {
                    if(tmpNTE.getProgramFile().trim().length() != 0)
                    {
                        tmpNTE.setProgram(true);
                        tmpNTE.setModify(true);
                    }
                }
                if(((String)comboBoxTurnOn.getSelectedItem())
                        .equals(""Messages Popup""))
                {
                    tmpNTE.setPopup(true);
                    tmpNTE.setModify(true);
                }
                notificationList.setLine(tmpNTE, cpt);
                cpt ++;
            }
            notificationList.setRowSelectionInterval(index, index);
            tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);
            if(((String)comboBoxTurnOn.getSelectedItem()).equals(""Sounds""))
            {
                playSoundCheckBox.setSelected(tmpNTE.getSound());
            }
            else if(((String)comboBoxTurnOn.getSelectedItem())
                    .equals(""Program Execution""))
            {
                programCheckBox.setSelected(tmpNTE.getProgram());
            }
            else if(((String)comboBoxTurnOn.getSelectedItem())
                    .equals(""Messages Popup""))
            {
                popupCheckBox.setSelected(tmpNTE.getPopup());
            }
            turnAll = false;
        }
        else if(e.getSource() == turnOffAll)
        {
            Iterator it = dataVector.iterator();
            NotificationsTableEntry tmpNTE = null;
            int cpt = 0;
            
            if(!it.hasNext())
                return;
            
            turnAll = true;
            while(it.hasNext())
            {
                tmpNTE = (NotificationsTableEntry)it.next();
                if(((String)comboBoxTurnOff.getSelectedItem()).equals(""Sounds""))
                {
                    tmpNTE.setSound(false);
                    tmpNTE.setModify(true);
                }
                if(((String)comboBoxTurnOff.getSelectedItem())
                        .equals(""Program Execution""))
                {
                    tmpNTE.setProgram(false);
                    tmpNTE.setModify(true);
                }
                if(((String)comboBoxTurnOff.getSelectedItem())
                        .equals(""Messages Popup""))
                {
                    tmpNTE.setPopup(false);
                    tmpNTE.setModify(true);
                }
                notificationList.setLine(tmpNTE, cpt);
                cpt ++;
            }
            notificationList.setRowSelectionInterval(index, index);
            tmpNTE = (NotificationsTableEntry) dataVector.elementAt(index);
            if(((String)comboBoxTurnOn.getSelectedItem()).equals(""Sounds""))
            {
                playSoundCheckBox.setSelected(tmpNTE.getSound());
            }
            else if(((String)comboBoxTurnOn.getSelectedItem())
                    .equals(""Program Execution""))
            {
                programCheckBox.setSelected(tmpNTE.getProgram());
            }
            else if(((String)comboBoxTurnOn.getSelectedItem())
                    .equals(""Messages Popup""))
            {
                popupCheckBox.setSelected(tmpNTE.getPopup());
            }
            turnAll = false;
        }
        else if(e.getSource() == apply)
        {          
            Iterator it = dataVector.iterator();
            NotificationsTableEntry tmpNTE = null;
            while(it.hasNext())
            {
                tmpNTE = (NotificationsTableEntry) it.next();

                if(tmpNTE.isModified())
                {
                    logger.debug(""Event modify : ""+tmpNTE.getEvent());
                    
                    notificationService.setActive(tmpNTE.getEvent(),
                            tmpNTE.getEnabled());
                    if(tmpNTE.getSound() == true)
                    {
                        notificationService.registerNotificationForEvent(
                                tmpNTE.getEvent(),
                                notificationService.ACTION_SOUND,
                                tmpNTE.getSoundFile(),
                                """");
                        logger.debug(""Adding Sound"");
                    }
                    else
                    {
                        notificationService.removeEventNotificationAction(
                                tmpNTE.getEvent(),
                                notificationService.ACTION_SOUND);
                        logger.debug(""Deleting Sound"");
                    }
                    
                    if(tmpNTE.getProgram() == true)
                    {
                        notificationService.registerNotificationForEvent(
                                tmpNTE.getEvent(),
                                notificationService.ACTION_COMMAND,
                                tmpNTE.getProgramFile(),
                                """");
                        logger.debug(""Program"");
                    }
                    else
                    {
                        notificationService.removeEventNotificationAction(
                                tmpNTE.getEvent(),
                                notificationService.ACTION_COMMAND);
                        logger.debug(""Deleting Program"");
                    }
                    
                    if(tmpNTE.getPopup())
                    {
                        notificationService.registerNotificationForEvent(
                                tmpNTE.getEvent(),
                                notificationService.ACTION_POPUP_MESSAGE,
                                """",
                                """");
                        logger.debug(""Popup"");
                    }
                    else
                    {
                        notificationService.removeEventNotificationAction(
                                tmpNTE.getEvent(),
                                notificationService.ACTION_POPUP_MESSAGE);
                        logger.debug(""Deleting Popup"");
                    }
                    tmpNTE.setModify(false);
                }
            }
        }
        else if(e.getSource() == restore)
        {
            notificationService.restoreDefaults();
            
            int ix = notificationList.getLine();
            
            if(ix >= 0)
            {
                NotificationsTableEntry tmpNTE
                        = (NotificationsTableEntry) dataVector.elementAt(ix);
                updatePanel(tmpNTE);
            }
        }
    }",False
33,itemStateChanged(ItemEvent),Method,,,"java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) java.util.EventObject+getSource() java.util.EventObject+getSource() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) java.util.EventObject+getSource() java.util.EventObject+getSource() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) java.util.EventObject+getSource() java.util.EventObject+getSource() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index,1648,52,1,,"public void itemStateChanged(ItemEvent itev)
    {
        if(index == -1 || noListener == true)
            return;
        NotificationsTableEntry tmpNTE
                = (NotificationsTableEntry) dataVector.elementAt(index);
        if(itev.getSource() == playSoundCheckBox)
        {
            if(playSoundCheckBox.isSelected())
            {
                playSoundButton.setEnabled(true);
                soundFileTextField.setEnabled(true);
                soundFileChooser.setEnabled(true);
                tmpNTE.setSound(true);
            }
            else
            {
                playSoundButton.setEnabled(false);
                soundFileTextField.setEnabled(false);
                soundFileChooser.setEnabled(false);
                tmpNTE.setSound(false);
            }
        }
        else if(itev.getSource() == programCheckBox)
        {
            if(programCheckBox.isSelected())
            {
                programFileTextField.setEnabled(true);
                programFileChooser.setEnabled(true);
                tmpNTE.setProgram(true);
            }
            else
            {
                programFileTextField.setEnabled(false);
                programFileChooser.setEnabled(false);
                tmpNTE.setProgram(false);
            }
        }
        else if(itev.getSource() == popupCheckBox)
        {
            if(popupCheckBox.isSelected())
            {
                tmpNTE.setPopup(true);
            }
            else
            {
                tmpNTE.setPopup(false);
            }
        }
        tmpNTE.setModify(true);
        this.updateTableRow(tmpNTE, index);
    }",False
34,insertUpdate(DocumentEvent),Method,,,"java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) java.lang.Object+equals(Object) javax.swing.event.DocumentEvent+getDocument() javax.swing.event.DocumentEvent+getDocument() java.lang.Object+equals(Object) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.Object+equals(Object) javax.swing.event.DocumentEvent+getDocument() javax.swing.event.DocumentEvent+getDocument() java.lang.Object+equals(Object) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index,778,21,1,,"public void insertUpdate(DocumentEvent de)
    {
        if(!turnAll)
        {   
            if(index != -1 && noListener == false)
            {
                NotificationsTableEntry tmpNTE
                        = (NotificationsTableEntry) dataVector.elementAt(index);
                if(de.getDocument().equals(programFileTextField.getDocument()))
                {
                    tmpNTE.setProgramFile(programFileTextField.getText());
                }
                if(de.getDocument().equals(soundFileTextField.getDocument()))
                {
                    tmpNTE.setSoundFile(soundFileTextField.getText());
                }
                tmpNTE.setModify(true);
                notificationList.setLine(tmpNTE, index);
            }
        }
    }",False
35,removeUpdate(DocumentEvent),Method,,,"java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) java.lang.Object+equals(Object) javax.swing.event.DocumentEvent+getDocument() javax.swing.event.DocumentEvent+getDocument() java.lang.Object+equals(Object) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.Object+equals(Object) javax.swing.event.DocumentEvent+getDocument() javax.swing.event.DocumentEvent+getDocument() java.lang.Object+equals(Object) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setModify(boolean) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index,775,21,1,,"public void removeUpdate(DocumentEvent de)
    {
        if(!turnAll)
        {
            if(index != -1 && noListener == false)
            {
                NotificationsTableEntry tmpNTE
                        = (NotificationsTableEntry) dataVector.elementAt(index);
                if(de.getDocument().equals(programFileTextField.getDocument()))
                {
                    tmpNTE.setProgramFile(programFileTextField.getText());
                }
                if(de.getDocument().equals(soundFileTextField.getDocument()))
                {
                    tmpNTE.setSoundFile(soundFileTextField.getText());
                }
                tmpNTE.setModify(true);
                notificationList.setLine(tmpNTE, index);
            }
        }
    }",False
36,changedUpdate(DocumentEvent),Method,,,,,46,1,1,,public void changedUpdate(DocumentEvent de) {},False
37,actionAdded(NotificationActionTypeEvent),Method,,,"net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceEventType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceEventType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.NotificationActionHandler+isEnabled() net.java.sip.communicator.service.notification.NotificationActionHandler+isEnabled() java.util.Vector+size() java.util.Vector+size() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+NotificationsTableEntry() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEvent(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEvent(String) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+addRowAtVector(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+addRowAtVector(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+NotificationsTableEntry() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEvent(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEvent(String) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+addRowAtVector(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+addRowAtVector(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updatePanel(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getRowCount() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getRowCount() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getRowCount() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getRowCount() net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.service.notification.NotificationService+ACTION_POPUP_MESSAGE net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.service.notification.NotificationService+ACTION_POPUP_MESSAGE net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.service.notification.NotificationService+ACTION_POPUP_MESSAGE net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger,4751,118,1,,"public void actionAdded(NotificationActionTypeEvent event)
    {
        logger.debug(""Start action added"");
        String eventName = (String) event.getSourceEventType();
        Iterator it = null;
        int row = 0;
        NotificationsTableEntry tmpNTE = null;
        
        NotificationActionHandler handler = event.getActionHandler();
        boolean isActionEnabled = (handler != null && handler.isEnabled());
        
        if(dataVector.size() <= 0)
        {
            tmpNTE = new NotificationsTableEntry();
            tmpNTE.setEvent(eventName);
            
            if(event.getSourceActionType()
                    .equals(NotificationService.ACTION_POPUP_MESSAGE))
            {
                tmpNTE.setPopup(isActionEnabled);
            }
            else if(event.getSourceActionType()
                    .equals(notificationService.ACTION_COMMAND))
            {
                tmpNTE.setProgram(isActionEnabled);
                
                tmpNTE.setProgramFile(((CommandNotificationHandler)event
                        .getActionHandler()).getDescriptor());
            }
            else if(event.getSourceActionType()
                    .equals(NotificationService.ACTION_SOUND))
            {
                tmpNTE.setSound(isActionEnabled);
                
                tmpNTE.setSoundFile(((SoundNotificationHandler)event
                        .getActionHandler()).getDescriptor());
            }
            tmpNTE.setEnabled(notificationService.isActive(eventName));
            this.addRowAtVector(tmpNTE);
            notificationList.setRowSelectionInterval(0, 0);
            updatePanel(tmpNTE);
            logger.debug(""End action added"");
            return;
        }
        /*
         * Si le Vecteur contient des ‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©v‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®‚àö√únements et que l'‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©l‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©ment auquel on veut
         * rajouter l'action existe d‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©j‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ‚Äö√Ñ√∂‚àö√ë‚Äö√Ñ‚Ä†.
         */
        it = dataVector.iterator();
        while(it.hasNext())
        {
            tmpNTE = (NotificationsTableEntry)it.next();
            if(tmpNTE.getEvent().equals(eventName))
            {
                if(event.getSourceActionType()
                        .equals(NotificationService.ACTION_POPUP_MESSAGE))
                {
                    tmpNTE.setPopup(isActionEnabled);
                     
                }
                else if(event.getSourceActionType()
                        .equals(notificationService.ACTION_COMMAND))
                {
                    tmpNTE.setProgram(isActionEnabled);
                    tmpNTE.setProgramFile(((CommandNotificationHandler)event
                            .getActionHandler()).getDescriptor());
                }
                else if(event.getSourceActionType()
                        .equals(NotificationService.ACTION_SOUND))
                {
                    tmpNTE.setSound(isActionEnabled);
                    tmpNTE.setSoundFile(((SoundNotificationHandler)event
                            .getActionHandler()).getDescriptor());
                }
                tmpNTE.setEnabled(notificationService.isActive(eventName));
                this.updateTableRow(tmpNTE,row);
                updatePanel(tmpNTE);
                notificationList.setRowSelectionInterval(row, row);
                logger.debug(""End action added"");
                return;
            }
            row ++;
        }
        /*
         * Le vecteur contient d‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©j‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ‚Äö√Ñ√∂‚àö√ë‚Äö√Ñ‚Ä† des ‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©v‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®‚àö√únements mais pas l'‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©v‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®‚àö√únement auquel
         * on veut rajouter l'action. On le cr‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬©‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬© et l'ajoute au vecteur.
         */
        tmpNTE = new NotificationsTableEntry();
        tmpNTE.setEvent(eventName);
        if(event.getSourceActionType()
                .equals(NotificationService.ACTION_POPUP_MESSAGE))
        {
            tmpNTE.setPopup(isActionEnabled);
        }
        else if(event.getSourceActionType()
                .equals(notificationService.ACTION_COMMAND))
        {
            tmpNTE.setProgram(isActionEnabled);
            tmpNTE.setProgramFile(((CommandNotificationHandler)event
                    .getActionHandler()).getDescriptor());
        }
        else if(event.getSourceActionType()
                .equals(NotificationService.ACTION_SOUND))
        {
            tmpNTE.setSound(isActionEnabled);
            tmpNTE.setSoundFile(((SoundNotificationHandler)event
                    .getActionHandler()).getDescriptor());
        }
        tmpNTE.setEnabled(notificationService.isActive(eventName));
        this.addRowAtVector(tmpNTE);
        updatePanel(tmpNTE);
        notificationList.setRowSelectionInterval(
            notificationList.getRowCount() - 1, 
            notificationList.getRowCount() - 1);
        
        logger.debug(""End action added"");
        return;
    }",False
38,actionRemoved(NotificationActionTypeEvent),Method,,,net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceEventType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceEventType() java.util.Vector+size() java.util.Vector+size() java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object),net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.service.notification.NotificationService+ACTION_POPUP_MESSAGE net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger,1313,37,1,,"public void actionRemoved(NotificationActionTypeEvent event)
    {
        logger.debug(""Start action remove"");
        String eventName = (String) event.getSourceEventType();
        Iterator it = null;
        NotificationsTableEntry tmpNTE = null;
        if(dataVector.size() == 0)
            return;
        
        it = dataVector.iterator();
        while(it.hasNext())
        {
            tmpNTE = (NotificationsTableEntry) it.next();
            if(tmpNTE.getEvent().equals(eventName))
            {
                if(event.getSourceActionType()
                        .equals(NotificationService.ACTION_POPUP_MESSAGE))
                {
                    tmpNTE.setPopup(false);
                }
                else if(event.getSourceActionType()
                        .equals(NotificationService.ACTION_COMMAND))
                {
                    tmpNTE.setProgram(false);
                    tmpNTE.setProgramFile("""");
                }
                else if(event.getSourceActionType()
                        .equals(NotificationService.ACTION_SOUND))
                {
                    tmpNTE.setSound(false);
                    tmpNTE.setSoundFile("""");
                }
                logger.debug(""End action remove"");
                return;
            }
        }
    }",False
39,actionChanged(NotificationActionTypeEvent),Method,,,"net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceEventType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceEventType() java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getSourceActionType() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.event.NotificationActionTypeEvent+getActionHandler() net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+updateTableRow(NotificationsTableEntry,int) net.java.sip.communicator.util.Logger+debug(Object) net.java.sip.communicator.util.Logger+debug(Object)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+logger,1244,33,1,,"public void actionChanged(NotificationActionTypeEvent event)
    {
        logger.debug(""Start action changed"");
        String eventName = (String) event.getSourceEventType();
        Iterator it = null;
        int row = 0;
        NotificationsTableEntry tmpNTE = null;

        it = dataVector.iterator();
        while(it.hasNext())
        {
            tmpNTE = (NotificationsTableEntry)it.next();
            if(tmpNTE.getEvent().equals(eventName))
            {
                if(event.getSourceActionType()
                        .equals(notificationService.ACTION_COMMAND))
                {
                    tmpNTE.setProgramFile(((CommandNotificationHandler)event
                            .getActionHandler()).getDescriptor());
                }
                else if(event.getSourceActionType()
                                .equals(NotificationService.ACTION_SOUND))
                {
                    tmpNTE.setSoundFile(((SoundNotificationHandler)event
                            .getActionHandler()).getDescriptor());
                }
                this.updateTableRow(tmpNTE,row);
                logger.debug(""End action changed"");
                return;
            }
            row ++;
        }
    }",False
40,eventTypeAdded(NotificationEventTypeEvent),Method,,,net.java.sip.communicator.service.notification.event.NotificationEventTypeEvent+getSourceEventType() net.java.sip.communicator.service.notification.event.NotificationEventTypeEvent+getSourceEventType() java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+NotificationsTableEntry() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEvent(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEvent(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setEnabled(boolean) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.service.notification.event.NotificationEventTypeEvent+getSourceEventType() net.java.sip.communicator.service.notification.event.NotificationEventTypeEvent+getSourceEventType() net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+addRowAtVector(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+addRowAtVector(NotificationsTableEntry),net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService,619,16,1,,"public void eventTypeAdded(NotificationEventTypeEvent event)
    {
        String eventAdded = (String) event.getSourceEventType();
        Iterator it = dataVector.iterator();
        NotificationsTableEntry tmpNTE = null;
        while(it.hasNext())
        {
            tmpNTE = (NotificationsTableEntry) it.next();
            if(tmpNTE.getEvent().equals(eventAdded))
                return;
        }
        tmpNTE = new NotificationsTableEntry();
        tmpNTE.setEvent(eventAdded);
        tmpNTE.setEnabled(notificationService.isActive(event.getSourceEventType()));
        this.addRowAtVector(tmpNTE);
    }",False
41,eventTypeRemoved(NotificationEventTypeEvent),Method,,,java.util.Vector+size() java.util.Vector+size() java.util.Vector+iterator() java.util.Vector+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEvent() java.lang.String+equals(Object) net.java.sip.communicator.service.notification.event.NotificationEventTypeEvent+getSourceEventType() net.java.sip.communicator.service.notification.event.NotificationEventTypeEvent+getSourceEventType() java.util.Vector+remove(int) java.util.Vector+remove(int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+removeLine(int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+removeLine(int),net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList,607,21,1,,"public void eventTypeRemoved(NotificationEventTypeEvent event)
    {
        Iterator it = null;
        NotificationsTableEntry tmpNTE = null;
        int row = 0;
        
        if(dataVector.size() <= 0)
            return;
        it = dataVector.iterator();
        while(it.hasNext())
        {
            tmpNTE = (NotificationsTableEntry) it.next();
            if(tmpNTE.getEvent().equals(event.getSourceEventType()))
            {
                dataVector.remove(row);
                notificationList.removeLine(row);
                return;
            }
            row ++;
        }
    }",False
42,updateTable(),Method,NotificationConfigurationConfigForm(),,java.util.Vector+iterator() java.util.Vector+iterator() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getRowCount() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+getRowCount() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+removeLine(int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+removeLine(int) java.util.Iterator+hasNext() java.util.Iterator+hasNext() javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComboBox+setEnabled(boolean) javax.swing.JComboBox+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComboBox+setEnabled(boolean) javax.swing.JComboBox+setEnabled(boolean) java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+addLine(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+addLine(NotificationsTableEntry),net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOnAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOn net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+turnOffAll net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+comboBoxTurnOff net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList,1287,41,1,,"public void updateTable()
    {
        Iterator it = dataVector.iterator();
        NotificationsTableEntry tmpNTE = null;
        int i = 0;
        int cpt = notificationList.getRowCount();
        /**
         * Emptying the list of notifications
         */
        for(i = 0; i < cpt; i ++)
        {
            notificationList.removeLine(0);
        }

        if(!it.hasNext())
        {
            activate.setEnabled(false);
            desactivate.setEnabled(false);
            programCheckBox.setSelected(false);
            programFileChooser.setEnabled(false);
            programFileTextField.setEnabled(false);
            playSoundCheckBox.setSelected(false);
            playSoundButton.setEnabled(false);
            soundFileChooser.setEnabled(false);      
            soundFileTextField.setEnabled(false);
            popupCheckBox.setSelected(false);
            turnOnAll.setEnabled(false);
            comboBoxTurnOn.setEnabled(false);
            turnOffAll.setEnabled(false);
            comboBoxTurnOff.setEnabled(false);
            index = -1;
            
            return;
        }
        
        while(it.hasNext())
        {
            tmpNTE = (NotificationsTableEntry) it.next();
            notificationList.addLine(tmpNTE);
        }
    }",False
43,buildingVector(),Method,NotificationConfigurationConfigForm(),,"net.java.sip.communicator.service.notification.NotificationService+getRegisteredEvents() net.java.sip.communicator.service.notification.NotificationService+getRegisteredEvents() java.util.Vector+removeAllElements() java.util.Vector+removeAllElements() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+NotificationsTableEntry(boolean,boolean,String,boolean,boolean,String,String,boolean) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.service.notification.NotificationService+isActive(String) net.java.sip.communicator.service.notification.NotificationService+getEventNotifications(String) net.java.sip.communicator.service.notification.NotificationService+getEventNotifications(String) java.util.Map+entrySet() java.util.Map+entrySet() java.util.Set+iterator() java.util.Set+iterator() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.util.Map.Entry+getKey() java.util.Map.Entry+getKey() java.util.Map.Entry+getValue() java.util.Map.Entry+getValue() java.util.Map.Entry+getValue() java.util.Map.Entry+getValue() net.java.sip.communicator.service.notification.NotificationActionHandler+isEnabled() net.java.sip.communicator.service.notification.NotificationActionHandler+isEnabled() java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setPopup(boolean) java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSound(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setSoundFile(String) net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.SoundNotificationHandler+getDescriptor() java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgram(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+setProgramFile(String) net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() net.java.sip.communicator.service.notification.CommandNotificationHandler+getDescriptor() java.util.Vector+add(E) java.util.Vector+add(E)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_POPUP_MESSAGE net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_SOUND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationService net.java.sip.communicator.service.notification.NotificationService+ACTION_COMMAND net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector,2744,76,1,,"public void buildingVector()
    {
        Iterator it = notificationService.getRegisteredEvents();
        NotificationsTableEntry tmpNTE = null;
        String event = null;
        Map actionsMap = null;
        int i;
        
        dataVector.removeAllElements();
        
        if(!it.hasNext())
            return;
        
        while(it.hasNext())
        {
            String actionType = null;
            event = (String) it.next();
            
            tmpNTE = new NotificationsTableEntry(
                    notificationService.isActive(event),
                    false,
                    """",
                    false,
                    false,
                    """",
                    event,
                    false);
            
            actionsMap = notificationService.getEventNotifications(event);
            if(actionsMap != null)
            {
                Set entry = actionsMap.entrySet();
                Iterator itEntry = entry.iterator();

                while(itEntry.hasNext())
                {
                    Map.Entry mEntry = (Map.Entry) itEntry.next();
                    actionType = (String) mEntry.getKey();

                    NotificationActionHandler handler = null;
                    
                    boolean isActionEnabled = false;
                    
                    if(mEntry.getValue() instanceof NotificationActionHandler)
                    {
                        handler = (NotificationActionHandler)mEntry.getValue();
                        isActionEnabled = handler.isEnabled();
                    }
                    
                    if(actionType
                            .equals(notificationService.ACTION_POPUP_MESSAGE))
                    {
                        tmpNTE.setPopup(isActionEnabled);
                    }
                    else if(actionType
                            .equals(notificationService.ACTION_SOUND) &&
                            handler != null)
                    {
                        tmpNTE.setSound(isActionEnabled);
                        tmpNTE.setSoundFile(
                            ((SoundNotificationHandler) handler).getDescriptor());
                    }
                    else if(actionType
                            .equals(notificationService.ACTION_COMMAND) &&
                            handler != null)
                    {
                        tmpNTE.setProgram(isActionEnabled);
                        tmpNTE.setProgramFile(
                                ((CommandNotificationHandler) handler)
                                .getDescriptor());
                    }
                }
            }
            dataVector.add(tmpNTE);
        }
    }",False
44,addRowAtVector(NotificationsTableEntry),Method,actionAdded(NotificationActionTypeEvent) actionAdded(NotificationActionTypeEvent) eventTypeAdded(NotificationEventTypeEvent),,java.util.Vector+add(E) java.util.Vector+add(E) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+addLine(NotificationsTableEntry) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+addLine(NotificationsTableEntry),net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList,144,5,1,,"public void addRowAtVector(NotificationsTableEntry tmpNTE)
    {
        dataVector.add(tmpNTE);
        notificationList.addLine(tmpNTE);
    }",False
45,"updateTableRow(NotificationsTableEntry,int)",Method,actionPerformed(ActionEvent) actionPerformed(ActionEvent) actionPerformed(ActionEvent) actionPerformed(ActionEvent) itemStateChanged(ItemEvent) actionAdded(NotificationActionTypeEvent) actionChanged(NotificationActionTypeEvent),,"net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setLine(NotificationsTableEntry,int)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList,128,4,1,,"public void updateTableRow(NotificationsTableEntry entry, int index)
    {
        notificationList.setLine(entry, index);
    }",False
46,MyMouseAdapter,MemberClass,,,"net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm.MyMouseAdapter+mouseClicked(MouseEvent) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+rowAtPoint(Point) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+rowAtPoint(Point) java.awt.event.MouseEvent+getPoint() java.awt.event.MouseEvent+getPoint() java.util.Vector+elementAt(int) java.util.Vector+elementAt(int) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getEnabled() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() java.lang.String+length() java.lang.String+trim() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() java.lang.String+trim() java.lang.String+length() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgram() javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getProgramFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSound() java.lang.String+length() java.lang.String+trim() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() java.lang.String+trim() java.lang.String+length() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.AbstractButton+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getSoundFile() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() net.java.sip.communicator.plugin.notificationconfiguration.NotificationsTableEntry+getPopup() net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.ListMulti+setRowSelectionInterval(int,int) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm.MyMouseAdapter+mousePressed(MouseEvent) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm.MyMouseAdapter+mouseReleased(MouseEvent) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm.MyMouseAdapter+mouseExited(MouseEvent) net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm.MyMouseAdapter+mouseEntered(MouseEvent)",net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+dataVector net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+activate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+desactivate net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+programFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+playSoundButton net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileChooser net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+soundFileTextField net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+popupCheckBox net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+notificationList net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+index net.java.sip.communicator.plugin.notificationconfiguration.NotificationConfigurationConfigForm+noListener,2476,58,0,,"class MyMouseAdapter implements MouseListener
    {
        public void mouseClicked(MouseEvent me)
        {
            index = notificationList.rowAtPoint(me.getPoint());
            
            noListener = true;
            
            if(index != -1)
            {
                NotificationsTableEntry tmpNTE
                        = (NotificationsTableEntry) dataVector.elementAt(index);
                activate.setEnabled(!tmpNTE.getEnabled());
                desactivate.setEnabled(tmpNTE.getEnabled());
                if(tmpNTE.getProgram() 
                    && tmpNTE.getProgramFile().trim().length() > 0)
                {
                    programCheckBox.setSelected(true);
                    programFileChooser.setEnabled(tmpNTE.getProgram());
                    programFileTextField.setEnabled(tmpNTE.getProgram());
                    programFileTextField.setText(tmpNTE.getProgramFile());
                }
                else
                {
                    programCheckBox.setSelected(false);
                    programFileChooser.setEnabled(false);
                    programFileTextField.setEnabled(false);
                    programFileTextField.setText(tmpNTE.getProgramFile());
                }
                if(tmpNTE.getSound()
                    && tmpNTE.getSoundFile().trim().length() > 0)
                {
                    playSoundCheckBox.setSelected(true);
                    playSoundButton.setEnabled(true);
                    soundFileChooser.setEnabled(true);
                    soundFileTextField.setEnabled(true);
                    soundFileTextField.setText(tmpNTE.getSoundFile());
                }
                else
                {
                    playSoundCheckBox.setSelected(false);
                    playSoundButton.setEnabled(false);
                    soundFileChooser.setEnabled(false);          
                    soundFileTextField.setEnabled(false);
                    soundFileTextField.setText(tmpNTE.getSoundFile());
                }
                popupCheckBox.setSelected(tmpNTE.getPopup());
                notificationList.setRowSelectionInterval(index,index);
                noListener = false;
                return;
            }
        }
        
        public void mousePressed(MouseEvent e) {}
        public void mouseReleased(MouseEvent e) {}
        public void mouseExited(MouseEvent e) {}
        public void mouseEntered(MouseEvent e) {}
    }",False
47,getIndex(),Method,,,,,52,4,1,,"public int getIndex()
    {
        return -1;
    }",True
