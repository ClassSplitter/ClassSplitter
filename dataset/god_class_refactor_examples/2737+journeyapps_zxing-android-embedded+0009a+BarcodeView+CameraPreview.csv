index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,StateListener,state listener ,MemberClass,,,com.journeyapps.barcodescanner.BarcodeView.StateListener+previewReady(),,75,3,9,,"public static interface StateListener {
    public void previewReady();
  }",False,False,,False,
2,DecodeMode,decode mode ,Field,,,,,29,1,9,,public static enum DecodeMode,False,False,,False,
3,PreviewScaleMode,preview scale mode ,Field,,,,,35,1,9,,public static enum PreviewScaleMode,False,False,,False,
4,TAG,tag drop the preview inside the barcode view default it will fill all available space but sections may be cut off ,Field,,,,,68,1,26,"/** 
 * Drop the preview inside the BarcodeView (default). It will fill all available space, but sections may be cut off.
 */
",private static final String TAG = BarcodeView.class.getSimpleName();,True,True,"/** 
 * Drop the preview inside the BarcodeView (default). It will fill all available space, but sections may be cut off.
 */
",False,"/** 
 * Drop the preview inside the BarcodeView (default). It will fill all available space, but sections may be cut off.
 */
"
5,cameraInstance,camera instance ,Field,,,,,38,1,2,,private CameraInstance cameraInstance;,True,True,,False,
6,hasSurface,has surface ,Field,,,,,27,1,2,,private boolean hasSurface;,True,True,,False,
7,activity,activity ,Field,,,,,26,1,2,,private Activity activity;,True,True,,False,
8,decoderThread,decoder thread ,Field,setDecoder(Decoder) setDecoder(Decoder),,,,36,1,2,,private DecoderThread decoderThread;,False,True,,False,
9,resultHandler,result handler ,Field,,,,,30,1,2,,private Handler resultHandler;,False,True,,False,
10,decoder,decoder ,Field,setDecoder(Decoder),,,,24,1,2,,private Decoder decoder;,False,True,,False,
11,decodeMode,decode mode ,Field,decodeSingle(BarcodeCallback) decodeContinuous(BarcodeCallback) stopDecoding(),,,,48,1,2,,private DecodeMode decodeMode = DecodeMode.NONE;,False,False,,False,
12,callback,callback ,Field,decodeSingle(BarcodeCallback) decodeContinuous(BarcodeCallback) stopDecoding(),,,,40,1,2,,private BarcodeCallback callback = null;,False,False,,False,
13,surfaceView,surface view ,Field,,,,,32,1,2,,private SurfaceView surfaceView;,True,True,,False,
14,previewActive,preview active ,Field,,,,,38,1,2,,private boolean previewActive = false;,True,True,,False,
15,rotationListener,rotation listener ,Field,,,,,42,1,2,,private RotationListener rotationListener;,True,True,,False,
16,stateListeners,state listeners ,Field,,,,,63,1,2,,private List<StateListener> stateListeners = new ArrayList<>();,True,True,,False,
17,previewScaleMode,preview scale mode ,Field,setPreviewScaleMode(PreviewScaleMode),,,,66,1,2,,private PreviewScaleMode previewScaleMode = PreviewScaleMode.CROP;,True,True,,False,
18,containerRect,container rect ,Field,containerSized(Rect) pause(),,,,27,1,2,,private Rect containerRect;,True,True,,False,
19,previewSize,preview size ,Field,previewSized(Point) pause(),,,,26,1,2,,private Point previewSize;,True,True,,False,
20,surfaceRect,surface rect ,Field,,,,,25,1,2,,private Rect surfaceRect;,True,True,,False,
21,framingRect,framing rect ,Field,,,,,32,1,2,,private Rect framingRect = null;,True,True,,False,
22,previewFramingRect,preview framing rect ,Field,pause(),,,,39,1,2,,private Rect previewFramingRect = null;,True,True,,False,
23,surfaceCallback,surface callback ,Field,,,,,786,27,18,,"private final SurfaceHolder.Callback surfaceCallback = new SurfaceHolder.Callback() {

    @Override
    public void surfaceCreated(SurfaceHolder holder) {

    }

    @Override
    public void surfaceDestroyed(SurfaceHolder holder) {
      hasSurface = false;
    }

    @Override
    public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {
      if (holder == null) {
        Log.e(TAG, ""*** WARNING *** surfaceChanged() gave us a null surface!"");
        return;
      }
      if(!hasSurface && surfaceRect != null) {
        if(surfaceRect.width() == width && surfaceRect.height() == height) {
          // We're only ready if the surface has the correct size
          hasSurface = true;
          startPreviewIfReady();
        }
      }
    }
  };

",True,True,,False,
24,BarcodeView(Context),barcode view context ,Method,,,"com.journeyapps.barcodescanner.BarcodeView+initialize(Context,AttributeSet,int,int) com.journeyapps.barcodescanner.BarcodeView+initialize(Context,AttributeSet,int,int)",,98,4,1,,"public BarcodeView(Context context) {
    super(context);
    initialize(context, null, 0, 0);
  }",False,False,"The function of the method is to create a BarcodeView object with the given context, and then initialize it with default values.",True,"The `BarcodeView` constructor is called with a `Context` parameter. It calls the `initialize` method with the `Context`, `null`, and two integer parameters to set up the barcode view."
25,"BarcodeView(Context,AttributeSet)",barcode view context attrs ,Method,,,"com.journeyapps.barcodescanner.BarcodeView+initialize(Context,AttributeSet,int,int) com.journeyapps.barcodescanner.BarcodeView+initialize(Context,AttributeSet,int,int)",,126,4,1,,"public BarcodeView(Context context, AttributeSet attrs) {
    super(context, attrs);
    initialize(context, attrs, 0, 0);
  }",False,False,"The function of the method is to create a BarcodeView object with the given context and attributes, and then initialize it with the specified parameters.",True,"The code defines a constructor method for the BarcodeView class in Java. It takes a Context and AttributeSet as parameters, and calls the initialize method with the provided context and attributes, along with two additional parameters set to 0."
26,"BarcodeView(Context,AttributeSet,int)",barcode view context attrs def style attr ,Method,,,"com.journeyapps.barcodescanner.BarcodeView+initialize(Context,AttributeSet,int,int) com.journeyapps.barcodescanner.BarcodeView+initialize(Context,AttributeSet,int,int)",,169,4,1,,"public BarcodeView(Context context, AttributeSet attrs, int defStyleAttr) {
    super(context, attrs, defStyleAttr);
    initialize(context, attrs, defStyleAttr, 0);
  }",False,False,"The function of the method is to create a BarcodeView object with the specified context, attributes, and default style attribute. It then calls the initialize method to further initialize the object.",True,"The code snippet shows a constructor method for a BarcodeView class in Java. It takes three parameters: a Context object, an AttributeSet object, and an integer value. The method calls the initialize() function with the provided parameters and an additional default value of 0."
27,"initialize(Context,AttributeSet,int,int)",initialize context attrs def style attr def style res ,Method,"BarcodeView(Context) BarcodeView(Context,AttributeSet) BarcodeView(Context,AttributeSet,int)",,java.lang.Object+Object() com.journeyapps.barcodescanner.BarcodeView+createDefaultDecoder() com.journeyapps.barcodescanner.BarcodeView+createDefaultDecoder() com.journeyapps.barcodescanner.BarcodeView+setupSurfaceView() com.journeyapps.barcodescanner.BarcodeView+setupSurfaceView() com.journeyapps.barcodescanner.RotationListener+RotationListener(Context) +onRotationChanged(int),com.journeyapps.barcodescanner.BarcodeView+activity com.journeyapps.barcodescanner.BarcodeView+resultHandler com.journeyapps.barcodescanner.BarcodeView+resultCallback com.journeyapps.barcodescanner.BarcodeView+decoder com.journeyapps.barcodescanner.BarcodeView+rotationListener,568,21,2,,"private void initialize(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
    if(getBackground() == null) {
      // Default to SurfaceView colour, so that there are less changes.
      setBackgroundColor(Color.BLACK);
    }

    activity = (Activity) context;

    resultHandler = new Handler(resultCallback);

    decoder = createDefaultDecoder();

    setupSurfaceView();

    rotationListener = new RotationListener(context) {
      @Override
      public void onRotationChanged(int rotation) {
        rotationChanged();
      }
    };
  }",True,True,"This method initializes the context, attributes, default style, and default style resource. It sets the background color to black if it is null. It assigns the activity, result handler, decoder, and rotation listener.",False,"This code initializes various components and settings for a view. It sets the background color to black if it is not already set, assigns the context to an activity variable, creates a handler for result callbacks, creates a decoder, sets up a surface view, and sets up a rotation listener."
28,rotationChanged(),rotation changed ,Method,,,com.journeyapps.barcodescanner.BarcodeView+pause() com.journeyapps.barcodescanner.BarcodeView+pause() com.journeyapps.barcodescanner.BarcodeView+resume() com.journeyapps.barcodescanner.BarcodeView+resume(),,63,4,2,,"private void rotationChanged() {
    pause();
    resume();
  }",True,True,"The function of the method ""rotationChanged"" is to pause and then resume a certain process or action.",False,"The code defines a private method called ""rotationChanged"" that pauses and resumes some functionality. The purpose of this method is likely to handle changes in rotation and perform necessary actions accordingly."
29,setupSurfaceView(),setup surface view ,Method,"initialize(Context,AttributeSet,int,int)",,java.lang.Object+Object(),com.journeyapps.barcodescanner.BarcodeView+surfaceView com.journeyapps.barcodescanner.BarcodeView+surfaceView com.journeyapps.barcodescanner.BarcodeView+surfaceCallback com.journeyapps.barcodescanner.BarcodeView+surfaceView,170,5,2,,"private void setupSurfaceView() {
    surfaceView = new SurfaceView(getContext());
    surfaceView.getHolder().addCallback(surfaceCallback);
    addView(surfaceView);
  }",True,True,"This method sets up a SurfaceView by creating a new instance, adding a callback to its holder, and adding it to the current view.",False,The `setupSurfaceView` method creates a new `SurfaceView` object and sets a callback for its holder. It then adds the `SurfaceView` to the current view.
30,setDecoder(Decoder),set decoder decoder set the decoder to use use this for more advanced customization of the decoding process when decoder set reader is not enough the decoder s decode method will only be called from a dedicated decoder thread call this from ui thread only param decoder the decoder used to decode barcodes ,Method,,,com.journeyapps.barcodescanner.Util+validateMainThread() com.journeyapps.barcodescanner.Util+validateMainThread() com.journeyapps.barcodescanner.DecoderThread+setDecoder(Decoder) com.journeyapps.barcodescanner.DecoderThread+setDecoder(Decoder),com.journeyapps.barcodescanner.BarcodeView+decoder com.journeyapps.barcodescanner.BarcodeView+decoder com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+decoderThread,539,18,1,"/** 
 * Set the Decoder to use. Use this for more advanced customization of the decoding process, when Decoder#setReader() is not enough. The decoder's decode method will only be called from a dedicated DecoderThread. Call this from UI thread only.
 * @param decoder the decoder used to decode barcodes.
 */
","/**
   * Set the Decoder to use. Use this for more advanced customization of the decoding process,
   * when Decoder#setReader() is not enough.
   *
   * The decoder's decode method will only be called from a dedicated DecoderThread.
   *
   * Call this from UI thread only.
   *
   * @param decoder the decoder used to decode barcodes.
   */
  public void setDecoder(Decoder decoder) {
    Util.validateMainThread();

    this.decoder = decoder;
    if(this.decoderThread != null) {
      this.decoderThread.setDecoder(decoder);
    }
  }",False,False,This method sets the decoder to be used for decoding barcodes. It is used for advanced customization of the decoding process when the default decoder is not sufficient. It should be called from the UI thread.,True,"The `setDecoder` method is used to set the decoder to be used for barcode decoding. It is recommended to call this method from the UI thread. The method validates that it is being called from the main thread, sets the decoder, and updates the decoder thread if it exists."
31,getDecoder(),get decoder ,Method,,,,com.journeyapps.barcodescanner.BarcodeView+decoder,53,3,1,,"public Decoder getDecoder() {
    return decoder;
  }",False,False,"The method ""getDecoder"" returns the value of the ""decoder"" variable.",False,"The code defines a method named ""getDecoder"" that returns an object of type ""Decoder"". The method simply returns the value of the ""decoder"" variable."
32,addStateListener(StateListener),add state listener listener ,Method,,com.journeyapps.barcodescanner.ViewfinderView+setBarcodeView(BarcodeView),java.util.List+add(E) java.util.List+add(E),com.journeyapps.barcodescanner.BarcodeView+stateListeners,92,3,1,,"public void addStateListener(StateListener listener) {
    stateListeners.add(listener);
  }",True,True,This method adds a StateListener to a list of stateListeners.,True,"The code defines a method called ""addStateListener"" that takes a ""StateListener"" object as a parameter. This method adds the listener to a collection called ""stateListeners""."
33,firePreviewReady(),fire preview ready ,Method,calculateFrames(),,com.journeyapps.barcodescanner.BarcodeView.StateListener+previewReady() com.journeyapps.barcodescanner.BarcodeView.StateListener+previewReady(),com.journeyapps.barcodescanner.BarcodeView+stateListeners,126,5,2,,"private void firePreviewReady() {
    for (StateListener listener : stateListeners) {
      listener.previewReady();
    }
  }",True,True,"This method serves to notify all state listeners that the preview is ready. It iterates through the state listeners and calls the ""previewReady"" method on each listener.",False,"The code defines a private method called ""firePreviewReady"" that iterates over a collection of ""StateListener"" objects and calls the ""previewReady"" method on each listener. This method is responsible for notifying the listeners that the preview is ready."
34,getPreviewScaleMode(),get preview scale mode ,Method,,,,com.journeyapps.barcodescanner.BarcodeView+previewScaleMode,80,3,1,,"public PreviewScaleMode getPreviewScaleMode() {
    return previewScaleMode;
  }",True,True,"This method returns the value of the variable ""previewScaleMode"" which represents the scale mode used for previewing.",False,"The code defines a method named ""getPreviewScaleMode"" that returns the value of the ""previewScaleMode"" variable. It is likely part of a larger class or system that deals with previewing and scaling modes."
35,setPreviewScaleMode(PreviewScaleMode),set preview scale mode preview scale mode set the scale mode of the preview when the aspect ratio is different from the barcode view param preview scale mode preview scale mode crop or preview scale mode cente r ,Method,,,,com.journeyapps.barcodescanner.BarcodeView+previewScaleMode com.journeyapps.barcodescanner.BarcodeView+previewScaleMode,310,8,1,"/** 
 * Set the scale mode of the preview, when the aspect ratio is different from the BarcodeView.
 * @param previewScaleMode PreviewScaleMode.CROP or PreviewScaleMode.CENTER
 */
","/**
   * Set the scale mode of the preview, when the aspect ratio is different from the BarcodeView.
   *
   * @param previewScaleMode PreviewScaleMode.CROP or PreviewScaleMode.CENTER
   */
  public void setPreviewScaleMode(PreviewScaleMode previewScaleMode) {
    this.previewScaleMode = previewScaleMode;
  }",False,False,"This method sets the scale mode of the preview to either ""CROP"" or ""CENTER"" when the aspect ratio is different from the BarcodeView.",False,"This code defines a method called ""setPreviewScaleMode"" that allows the user to set the scale mode of the preview. The method takes a parameter called ""previewScaleMode"" which can be either ""PreviewScaleMode.CROP"" or ""PreviewScaleMode.CENTER"". The method updates the value of the ""previewScaleMode"" variable with the provided parameter."
36,decodeSingle(BarcodeCallback),decode single callback decode a single barcode then stop decoding the callback will only be called on the ui thread param callback called with the barcode result as well as possible result points ,Method,,com.journeyapps.barcodescanner.CaptureActivity2+triggerScan(View),com.journeyapps.barcodescanner.BarcodeView+startDecoderThread() com.journeyapps.barcodescanner.BarcodeView+startDecoderThread(),com.journeyapps.barcodescanner.BarcodeView+decodeMode com.journeyapps.barcodescanner.BarcodeView+decodeMode com.journeyapps.barcodescanner.BarcodeView+DecodeMode com.journeyapps.barcodescanner.BarcodeView+callback com.journeyapps.barcodescanner.BarcodeView+callback,367,12,1,"/** 
 * Decode a single barcode, then stop decoding. The callback will only be called on the UI thread.
 * @param callback called with the barcode result, as well as possible ResultPoints
 */
","/**
   * Decode a single barcode, then stop decoding.
   *
   * The callback will only be called on the UI thread.
   *
   * @param callback called with the barcode result, as well as possible ResultPoints
   */
  public void decodeSingle(BarcodeCallback callback) {
    this.decodeMode = DecodeMode.SINGLE;
    this.callback = callback;
    startDecoderThread();
  }",False,False,"This method is used to decode a single barcode and stop decoding. It sets the decode mode to single, sets the callback function, and starts the decoder thread.",True,"The `decodeSingle` method is used to decode a single barcode and stop decoding. It takes a callback as a parameter, which will be called on the UI thread and will receive the barcode result and possible ResultPoints. The method sets the decode mode to ""SINGLE"", assigns the callback, and starts the decoder thread."
37,decodeContinuous(BarcodeCallback),decode continuous callback continuously decode barcodes the same barcode may be returned multiple times per second the callback will only be called on the ui thread param callback called with the barcode result as well as possible result points ,Method,,com.journeyapps.barcodescanner.CaptureActivity2+onCreate(Bundle),com.journeyapps.barcodescanner.BarcodeView+startDecoderThread() com.journeyapps.barcodescanner.BarcodeView+startDecoderThread(),com.journeyapps.barcodescanner.BarcodeView+decodeMode com.journeyapps.barcodescanner.BarcodeView+decodeMode com.journeyapps.barcodescanner.BarcodeView+DecodeMode com.journeyapps.barcodescanner.BarcodeView+callback com.journeyapps.barcodescanner.BarcodeView+callback,420,12,1,"/** 
 * Continuously decode barcodes. The same barcode may be returned multiple times per second. The callback will only be called on the UI thread.
 * @param callback called with the barcode result, as well as possible ResultPoints
 */
","/**
   * Continuously decode barcodes. The same barcode may be returned multiple times per second.
   *
   * The callback will only be called on the UI thread.
   *
   * @param callback called with the barcode result, as well as possible ResultPoints
   */
  public void decodeContinuous(BarcodeCallback callback) {
    this.decodeMode = DecodeMode.CONTINUOUS;
    this.callback = callback;
    startDecoderThread();
  }",False,False,"This method is used to continuously decode barcodes. It sets the decode mode to continuous, sets the callback function to be called with the barcode result, and starts the decoder thread.",False,"The `decodeContinuous` method is used to continuously decode barcodes. It sets the decode mode to continuous, assigns a callback function to handle the barcode result, and starts a decoder thread. The callback function will be called on the UI thread."
38,stopDecoding(),stop decoding stop decoding but do not stop the preview ,Method,,,com.journeyapps.barcodescanner.BarcodeView+stopDecoderThread() com.journeyapps.barcodescanner.BarcodeView+stopDecoderThread(),com.journeyapps.barcodescanner.BarcodeView+decodeMode com.journeyapps.barcodescanner.BarcodeView+decodeMode com.journeyapps.barcodescanner.BarcodeView+DecodeMode com.journeyapps.barcodescanner.BarcodeView+callback com.journeyapps.barcodescanner.BarcodeView+callback,183,8,1,"/** 
 * Stop decoding, but do not stop the preview.
 */
","/**
   * Stop decoding, but do not stop the preview.
   */
  public void stopDecoding() {
    this.decodeMode = DecodeMode.NONE;
    this.callback = null;
    stopDecoderThread();
  }",False,False,"This method stops the decoding process, but keeps the preview running. It sets the decode mode to none, clears the callback, and stops the decoder thread.",False,"The `stopDecoding()` method is used to stop the decoding process without stopping the preview. It sets the decode mode to none, clears the callback, and stops the decoder thread."
39,resultCallback,result callback ,Field,,,,,1032,27,18,,"private final Handler.Callback resultCallback = new Handler.Callback() {
    @Override
    public boolean handleMessage(Message message) {
      if(message.what == R.id.zxing_decode_succeeded) {
        Result result = (Result) message.obj;

        if(result != null) {
          if(callback != null && decodeMode != DecodeMode.NONE) {
            callback.barcodeResult(result);
            if(decodeMode == DecodeMode.SINGLE) {
              stopDecoding();
            }
          }
        }
      } else if(message.what == R.id.zxing_decode_failed) {
        // Failed. Next preview is automatically tried.
      } else if(message.what == R.id.zxing_possible_result_points) {
        List<ResultPoint> resultPoints = (List<ResultPoint>) message.obj;
        if(callback != null && decodeMode != DecodeMode.NONE) {
          callback.possibleResultPoints(resultPoints);
        }
      } else if(message.what == R.id.zxing_prewiew_size_ready) {
        previewSized((Point)message.obj);
      }
      return false;
    }
  };

",False,False,,False,
40,createDefaultDecoder(),create default decoder ,Method,"initialize(Context,AttributeSet,int,int)",,com.journeyapps.barcodescanner.Decoder+Decoder(Reader),,338,8,4,,"protected Decoder createDefaultDecoder() {
    MultiFormatReader defaultReader = new MultiFormatReader();
    Map<DecodeHintType, Object> hints = new HashMap<>();
    Decoder decoder = new Decoder(defaultReader);
    hints.put(DecodeHintType.NEED_RESULT_POINT_CALLBACK, decoder);
    defaultReader.setHints(hints);
    return decoder;
  }",False,False,"This method creates a default decoder by initializing a MultiFormatReader, setting hints for decoding, and returning the decoder.",False,"The code defines a method called `createDefaultDecoder()` that creates and configures a `Decoder` object. It sets up a `MultiFormatReader` as the default reader, creates a `HashMap` to store decoding hints, and sets the hints for the reader. Finally, it returns the created `Decoder` object."
41,calculateFrames(),calculate frames ,Method,previewSized(Point),,"java.lang.IllegalStateException+IllegalStateException(String) com.journeyapps.barcodescanner.BarcodeView+calculateFramingRect(Rect,Rect) com.journeyapps.barcodescanner.BarcodeView+calculateFramingRect(Rect,Rect) java.lang.Object+Object() java.lang.Object+Object() com.journeyapps.barcodescanner.BarcodeView+firePreviewReady() com.journeyapps.barcodescanner.BarcodeView+firePreviewReady()",com.journeyapps.barcodescanner.BarcodeView+containerRect com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+framingRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+containerRect com.journeyapps.barcodescanner.BarcodeView+containerRect com.journeyapps.barcodescanner.BarcodeView+previewScaleMode com.journeyapps.barcodescanner.BarcodeView+PreviewScaleMode com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+framingRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+framingRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+framingRect com.journeyapps.barcodescanner.BarcodeView+TAG,1775,43,2,,"private void calculateFrames() {
    if(containerRect == null || previewSize == null) {
      previewFramingRect = null;
      framingRect = null;
      surfaceRect = null;
      throw new IllegalStateException(""containerRect or previewSize is not set yet"");
    }

    int previewWidth = previewSize.x;
    int previewHeight = previewSize.y;

    int width = containerRect.width();
    int height = containerRect.height();

    // Either crop or center the SurfaceView.
    boolean center = (previewScaleMode == PreviewScaleMode.CENTER);
    if (center ^ (width * previewHeight < height * previewWidth)) {
      final int scaledChildWidth = previewWidth * height / previewHeight;
      surfaceRect = new Rect((width - scaledChildWidth) / 2, 0, (width + scaledChildWidth) / 2, height);
    } else {
      final int scaledChildHeight = previewHeight * width / previewWidth;
      surfaceRect = new Rect(0, (height - scaledChildHeight) / 2,
              width, (height + scaledChildHeight) / 2);
    }

    Rect container = new Rect(0, 0, width, height);
    framingRect = calculateFramingRect(container, surfaceRect);
    Rect frameInPreview = new Rect(framingRect);
    frameInPreview.offset(-surfaceRect.left, -surfaceRect.top);

    previewFramingRect = new Rect(frameInPreview.left * previewWidth / surfaceRect.width(),
            frameInPreview.top * previewHeight / surfaceRect.height(),
            frameInPreview.right * previewWidth / surfaceRect.width(),
            frameInPreview.bottom * previewHeight / surfaceRect.height());

    if(previewFramingRect.width() <= 0 || previewFramingRect.height() <= 0) {
      previewFramingRect = null;
      framingRect = null;
      Log.w(TAG, ""Preview frame is too small"");
    } else {
      firePreviewReady();
    }
  }",False,True,The function of the method is to calculate the frames for the preview and surface view based on the container rectangle and preview size. It also handles cases where the preview frame is too small.,False,"The `calculateFrames()` method calculates the dimensions and positions of various rectangles used for previewing and framing an image. It checks if the necessary parameters are set, crops or centers the surface view based on the aspect ratio, and calculates the framing rectangle for the preview. If the preview frame is too small, it logs a warning, otherwise it triggers a callback indicating that the preview is ready."
42,containerSized(Rect),container sized container ,Method,"onLayout(boolean,int,int,int,int)",,com.journeyapps.barcodescanner.camera.CameraInstance+getDisplayConfiguration() com.journeyapps.barcodescanner.camera.CameraInstance+getDisplayConfiguration() com.journeyapps.barcodescanner.camera.CameraInstance+setDisplayConfiguration(DisplayConfiguration) com.journeyapps.barcodescanner.camera.CameraInstance+setDisplayConfiguration(DisplayConfiguration) com.journeyapps.barcodescanner.camera.DisplayConfiguration+DisplayConfiguration(int) com.journeyapps.barcodescanner.BarcodeView+getDisplayRotation() com.journeyapps.barcodescanner.BarcodeView+getDisplayRotation() java.lang.Object+Object() com.journeyapps.barcodescanner.camera.CameraInstance+configureCamera() com.journeyapps.barcodescanner.camera.CameraInstance+configureCamera(),com.journeyapps.barcodescanner.BarcodeView+containerRect com.journeyapps.barcodescanner.BarcodeView+containerRect com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+cameraInstance,382,9,2,,"private void containerSized(Rect container) {
    this.containerRect = container;
    if(cameraInstance != null) {
      if (cameraInstance.getDisplayConfiguration() == null) {
        cameraInstance.setDisplayConfiguration(new DisplayConfiguration(getDisplayRotation(), new Point(container.width(), container.height())));
        cameraInstance.configureCamera();
      }
    }
  }",True,True,"This method sets the size of the container and configures the camera instance based on the container's dimensions, if the camera instance and display configuration are not null.",False,"The `containerSized` method updates the `containerRect` variable with the provided `container` parameter. If the `cameraInstance` is not null and its display configuration is null, a new display configuration is set using the current display rotation and the dimensions of the container. Finally, the camera instance is configured."
43,previewSized(Point),preview sized size ,Method,,,com.journeyapps.barcodescanner.BarcodeView+calculateFrames() com.journeyapps.barcodescanner.BarcodeView+calculateFrames() com.journeyapps.barcodescanner.BarcodeView+startPreviewIfReady() com.journeyapps.barcodescanner.BarcodeView+startPreviewIfReady(),com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+containerRect,187,8,2,,"private void previewSized(Point size) {
    this.previewSize = size;
    if(containerRect != null) {
      calculateFrames();
      requestLayout();
      startPreviewIfReady();
    }
  }",False,True,"This method sets the preview size, calculates frames, requests layout, and starts the preview if the container rectangle is not null.",False,"The `previewSized` method updates the `previewSize` variable with the provided `size` parameter. If the `containerRect` is not null, it then proceeds to calculate frames, request layout, and start the preview if ready."
44,startPreviewIfReady(),start preview if ready ,Method,previewSized(Point) resume(),,com.journeyapps.barcodescanner.BarcodeView+startCameraPreview(SurfaceHolder) com.journeyapps.barcodescanner.BarcodeView+startCameraPreview(SurfaceHolder),com.journeyapps.barcodescanner.BarcodeView+hasSurface com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+surfaceView,141,5,2,,"private void startPreviewIfReady() {
    if(hasSurface && previewSize != null) {
      startCameraPreview(surfaceView.getHolder());
    }
  }",True,True,This method starts the camera preview if the surface is available and the preview size is not null.,True,"The `startPreviewIfReady` method checks if the surface is available and the preview size is not null. If both conditions are met, it calls the `startCameraPreview` method with the surface holder to start the camera preview."
45,"onLayout(boolean,int,int,int,int)",on layout changed l t r b ,Method,,,com.journeyapps.barcodescanner.BarcodeView+containerSized(Rect) com.journeyapps.barcodescanner.BarcodeView+containerSized(Rect),com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceView com.journeyapps.barcodescanner.BarcodeView+surfaceView com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect com.journeyapps.barcodescanner.BarcodeView+surfaceRect,514,13,4,,"@SuppressLint(""DrawAllocation"")
  @Override
  protected void onLayout(boolean changed, int l, int t, int r, int b) {
    containerSized(new Rect(0, 0, r - l, b - t));

    if (surfaceRect == null) {
      // Match the container, to reduce the risk of issues. The preview should never be drawn
      // while the surface has this size.
      surfaceView.layout(0, 0, getWidth(), getHeight());
    } else {
      surfaceView.layout(surfaceRect.left, surfaceRect.top, surfaceRect.right, surfaceRect.bottom);
    }
  }",True,True,This method is used to layout the view and set the size of the container. It also sets the size and position of the surface view based on the container size.,False,"This code is an overridden method that is responsible for laying out the view. It resizes the container based on the dimensions provided and then sets the layout of the surface view accordingly, either matching the container or using a specific rectangle."
46,getFramingRect(),get framing rect ,Method,,com.journeyapps.barcodescanner.ViewfinderView+onDraw(Canvas) com.journeyapps.barcodescanner.ViewfinderView+onDraw(Canvas),,com.journeyapps.barcodescanner.BarcodeView+framingRect,58,3,1,,"public Rect getFramingRect() {
    return framingRect;
  }",True,True,"The function of the method is to return the value of the variable ""framingRect"" of type Rect.",False,"The code defines a method named ""getFramingRect"" that returns a Rect object. This method is responsible for retrieving the framing rectangle, which is likely used for visual or spatial purposes in the program."
47,getPreviewFramingRect(),get preview framing rect ,Method,,com.journeyapps.barcodescanner.ViewfinderView+onDraw(Canvas) com.journeyapps.barcodescanner.ViewfinderView+onDraw(Canvas),,com.journeyapps.barcodescanner.BarcodeView+previewFramingRect,72,3,1,,"public Rect getPreviewFramingRect() {
    return previewFramingRect;
  }",True,True,"This method returns the value of the variable ""previewFramingRect"", which is likely a rectangle object representing the framing area of a preview.",False,"The code defines a method named ""getPreviewFramingRect"" that returns a Rect object. This method is responsible for retrieving the preview framing rectangle."
48,resume(),resume start the camera preview and decoding typically this should be called from the activity s on resume method call from ui thread only ,Method,rotationChanged(),com.journeyapps.barcodescanner.CaptureActivity2+orientationChanged() com.journeyapps.barcodescanner.CaptureActivity2+onResume() com.journeyapps.barcodescanner.CaptureActivity2+resume(View),com.journeyapps.barcodescanner.Util+validateMainThread() com.journeyapps.barcodescanner.Util+validateMainThread() com.journeyapps.barcodescanner.BarcodeView+initCamera() com.journeyapps.barcodescanner.BarcodeView+initCamera() com.journeyapps.barcodescanner.BarcodeView+startPreviewIfReady() com.journeyapps.barcodescanner.BarcodeView+startPreviewIfReady(),com.journeyapps.barcodescanner.BarcodeView+hasSurface com.journeyapps.barcodescanner.BarcodeView+surfaceView com.journeyapps.barcodescanner.BarcodeView+surfaceCallback com.journeyapps.barcodescanner.BarcodeView+rotationListener,823,26,1,"/** 
 * Start the camera preview and decoding. Typically this should be called from the Activity's onResume() method. Call from UI thread only.
 */
","/**
   * Start the camera preview and decoding. Typically this should be called from the Activity's
   * onResume() method.
   *
   * Call from UI thread only.
   */
  public void resume() {
    // This must be safe to call multiple times
    Util.validateMainThread();

    // initCamera() does nothing if called twice, but does log a warning
    initCamera();

    if (hasSurface) {
      // The activity was paused but not stopped, so the surface still exists. Therefore
      // surfaceCreated() won't be called, so init the camera here.
      startPreviewIfReady();
    } else {
      // Install the callback and wait for surfaceCreated() to init the camera.
      surfaceView.getHolder().addCallback(surfaceCallback);
    }

    // To trigger surfaceSized again
    requestLayout();
    rotationListener.enable();
  }",True,True,"The function of this method is to start the camera preview and decoding. It should be called from the Activity's onResume() method. It also validates that it is being called from the UI thread, initializes the camera, starts the preview if the surface exists, installs a callback for surface creation, triggers surface sizing, and enables the rotation listener.",True,"The `resume()` method is used to start the camera preview and decoding. It initializes the camera, checks if the surface exists, and either starts the preview or waits for the surface to be created. It also triggers the resizing of the surface and enables the rotation listener."
49,pause(),pause pause scanning and the camera preview typically this should be called from the activity s on pause method call from ui thread only ,Method,rotationChanged(),com.journeyapps.barcodescanner.CaptureActivity2+orientationChanged() com.journeyapps.barcodescanner.CaptureActivity2+onPause() com.journeyapps.barcodescanner.CaptureActivity2+pause(View),com.journeyapps.barcodescanner.Util+validateMainThread() com.journeyapps.barcodescanner.Util+validateMainThread() com.journeyapps.barcodescanner.BarcodeView+stopDecoderThread() com.journeyapps.barcodescanner.BarcodeView+stopDecoderThread() com.journeyapps.barcodescanner.camera.CameraInstance+close() com.journeyapps.barcodescanner.camera.CameraInstance+close(),com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+previewActive com.journeyapps.barcodescanner.BarcodeView+hasSurface com.journeyapps.barcodescanner.BarcodeView+surfaceView com.journeyapps.barcodescanner.BarcodeView+surfaceCallback com.journeyapps.barcodescanner.BarcodeView+containerRect com.journeyapps.barcodescanner.BarcodeView+containerRect com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+previewSize com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+rotationListener,698,27,1,"/** 
 * Pause scanning and the camera preview. Typically this should be called from the Activity's onPause() method. Call from UI thread only.
 */
","/**
   * Pause scanning and the camera preview. Typically this should be called from the Activity's
   * onPause() method.
   *
   * Call from UI thread only.
   */
  public void pause() {
    // This must be safe to call multiple times.
    Util.validateMainThread();

    stopDecoderThread();

    if(cameraInstance != null) {
      cameraInstance.close();
      cameraInstance = null;
      previewActive = false;
    }
    if (!hasSurface) {
      SurfaceHolder surfaceHolder = surfaceView.getHolder();
      surfaceHolder.removeCallback(surfaceCallback);
    }

    this.containerRect = null;
    this.previewSize = null;
    this.previewFramingRect = null;
    rotationListener.disable();
  }",False,True,"The function of this method is to pause the scanning and camera preview. It is typically called from the Activity's onPause() method. It stops the decoder thread, closes the camera instance, removes the surface callback, and disables the rotation listener.",False,"The `pause()` method is used to pause scanning and the camera preview. It stops the decoder thread, closes the camera instance, removes the surface callback, and disables the rotation listener. It is typically called from the `onPause()` method of an activity."
50,getDisplayRotation(),get display rotation ,Method,,,,com.journeyapps.barcodescanner.BarcodeView+activity,112,3,2,,"private int getDisplayRotation() {
    return activity.getWindowManager().getDefaultDisplay().getRotation();
  }",True,True,This method returns the rotation of the default display of the activity's window manager as an integer value.,False,"The code defines a private method named ""getDisplayRotation"" that returns an integer value. It retrieves the current rotation of the default display of the activity using the WindowManager and Display classes."
51,initCamera(),init camera ,Method,resume(),,com.journeyapps.barcodescanner.camera.CameraInstance+CameraInstance(Context) com.journeyapps.barcodescanner.camera.CameraInstance+setReadyHandler(Handler) com.journeyapps.barcodescanner.camera.CameraInstance+setReadyHandler(Handler) com.journeyapps.barcodescanner.camera.CameraInstance+open() com.journeyapps.barcodescanner.camera.CameraInstance+open(),com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+TAG com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+resultHandler com.journeyapps.barcodescanner.BarcodeView+cameraInstance,289,11,2,,"private void initCamera() {
    if(cameraInstance != null || decoderThread != null) {
      Log.w(TAG, ""initCamera called twice"");
      return;
    }

    cameraInstance = new CameraInstance(getContext());

    cameraInstance.setReadyHandler(resultHandler);
    cameraInstance.open();
  }",True,True,"The function of the method is to initialize the camera by creating a new instance of the CameraInstance class, setting a ready handler, and opening the camera. It also checks if the camera instance or decoder thread is already initialized to avoid calling the method twice.",False,"The `initCamera()` method initializes the camera by creating a new instance of `CameraInstance` and setting a result handler. It also opens the camera. If the camera instance or decoder thread already exist, it logs a warning and returns without performing any further actions."
52,stopDecoderThread(),stop decoder thread ,Method,stopDecoding() pause() startDecoderThread(),,com.journeyapps.barcodescanner.DecoderThread+stop() com.journeyapps.barcodescanner.DecoderThread+stop(),com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+decoderThread,132,6,2,,"private void stopDecoderThread() {
    if(decoderThread != null) {
      decoderThread.stop();
      decoderThread = null;
    }
  }",False,False,This method stops the decoder thread if it is not null by calling the stop() method on the decoder thread and setting it to null.,False,The `stopDecoderThread()` method is a private method that stops the `decoderThread` if it is not null. It does this by calling the `stop()` method on the `decoderThread` object and then setting it to null.
53,startCameraPreview(SurfaceHolder),start camera preview holder ,Method,startPreviewIfReady(),,com.journeyapps.barcodescanner.camera.CameraInstance+setSurfaceHolder(SurfaceHolder) com.journeyapps.barcodescanner.camera.CameraInstance+setSurfaceHolder(SurfaceHolder) com.journeyapps.barcodescanner.camera.CameraInstance+startPreview() com.journeyapps.barcodescanner.camera.CameraInstance+startPreview() com.journeyapps.barcodescanner.BarcodeView+startDecoderThread() com.journeyapps.barcodescanner.BarcodeView+startDecoderThread(),com.journeyapps.barcodescanner.BarcodeView+previewActive com.journeyapps.barcodescanner.BarcodeView+TAG com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+previewActive,267,10,2,,"private void startCameraPreview(SurfaceHolder holder) {
    if(!previewActive) {
      Log.i(TAG, ""Starting preview"");
      cameraInstance.setSurfaceHolder(holder);
      cameraInstance.startPreview();
      previewActive = true;
    }

    startDecoderThread();
  }",True,True,"This method starts the camera preview if it is not already active. It sets the surface holder for the camera instance, starts the preview, and sets the previewActive flag to true. It then calls the startDecoderThread method.",False,"The `startCameraPreview` method starts the camera preview if it is not already active. It sets the provided `SurfaceHolder` to the camera instance, starts the preview, and sets the `previewActive` flag to true. It then calls the `startDecoderThread` method."
54,startDecoderThread(),start decoder thread ,Method,decodeSingle(BarcodeCallback) decodeContinuous(BarcodeCallback) startCameraPreview(SurfaceHolder),,"com.journeyapps.barcodescanner.BarcodeView+stopDecoderThread() com.journeyapps.barcodescanner.BarcodeView+stopDecoderThread() com.journeyapps.barcodescanner.DecoderThread+DecoderThread(CameraInstance,Decoder,Handler) com.journeyapps.barcodescanner.DecoderThread+setCropRect(Rect) com.journeyapps.barcodescanner.DecoderThread+setCropRect(Rect) com.journeyapps.barcodescanner.DecoderThread+start() com.journeyapps.barcodescanner.DecoderThread+start()",com.journeyapps.barcodescanner.BarcodeView+decodeMode com.journeyapps.barcodescanner.BarcodeView+DecodeMode com.journeyapps.barcodescanner.BarcodeView+previewActive com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+cameraInstance com.journeyapps.barcodescanner.BarcodeView+decoder com.journeyapps.barcodescanner.BarcodeView+resultHandler com.journeyapps.barcodescanner.BarcodeView+decoderThread com.journeyapps.barcodescanner.BarcodeView+previewFramingRect com.journeyapps.barcodescanner.BarcodeView+decoderThread,305,9,2,,"private void startDecoderThread() {
    stopDecoderThread(); // To be safe

    if(decodeMode != DecodeMode.NONE && previewActive) {
      decoderThread = new DecoderThread(cameraInstance, decoder, resultHandler);
      decoderThread.setCropRect(previewFramingRect);
      decoderThread.start();
    }
  }",False,True,"This method starts a decoder thread if the decode mode is not ""NONE"" and the preview is active. It first stops the decoder thread to ensure safety, then creates a new decoder thread with the camera instance, decoder, and result handler. It sets the crop rectangle for the decoder thread and starts it.",False,"The `startDecoderThread()` method starts a new thread for decoding camera input if the decode mode is not set to ""NONE"" and the preview is active. It first stops any existing decoder thread to ensure safety, then creates a new `DecoderThread` object with the camera instance, decoder, and result handler, sets the crop rectangle, and starts the thread."
55,"calculateFramingRect(Rect,Rect)",calculate framing rect container surface calculate framing rectangle relative to the preview frame param container this container with left top 0 param surface the surface view relative to this container return the framing rect relative to this container ,Method,calculateFrames(),,"java.lang.Object+Object() java.lang.Math+min(int,int) java.lang.Math+min(int,int)",,815,20,4,"/** 
 * Calculate framing rectangle, relative to the preview frame.
 * @param container this container, with left = top = 0
 * @param surface the SurfaceView, relative to this container
 * @return the framing rect, relative to this container
 */
","/**
   * Calculate framing rectangle, relative to the preview frame.
   *
   * @param container this container, with left = top = 0
   * @param surface the SurfaceView, relative to this container
   * @return the framing rect, relative to this container
   */
  protected Rect calculateFramingRect(Rect container, Rect surface) {
    Rect intersection = new Rect(container);
    intersection.intersect(surface);

    // margin as 10% of the smaller of width, height
    int margin = Math.min(intersection.width() / 10, intersection.height() / 10);
    intersection.inset(margin, margin);
    if(intersection.height() > intersection.width()) {
      // We don't want a frame that is taller than wide.
      intersection.inset(0, (intersection.height() - intersection.width()) / 2);
    }
    return intersection;
  }",True,True,"This method calculates the framing rectangle for a preview frame, based on the given container and surface rectangles. It calculates the intersection of the two rectangles, then insets the intersection by a margin of 10% of the smaller dimension. If the height of the intersection is greater than the width, it insets the intersection vertically to make it square. The resulting rectangle is returned.",True,"This code defines a method called `calculateFramingRect` that takes two `Rect` objects as parameters. It calculates the framing rectangle by finding the intersection between the two rectangles, then insets the rectangle by a margin of 10% of the smaller dimension. If the height of the rectangle is greater than the width, it insets the rectangle vertically to make it square. The method returns the resulting framing rectangle."
56,displayFrameworkBugMessageAndExit(),display framework bug message and exit ,Method,,,java.lang.Object+Object() com.google.zxing.client.android.FinishListener+FinishListener(Activity) com.google.zxing.client.android.FinishListener+FinishListener(Activity),com.journeyapps.barcodescanner.BarcodeView+activity com.journeyapps.barcodescanner.BarcodeView+activity,457,8,2,,"private void displayFrameworkBugMessageAndExit() {
    AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
    builder.setTitle(getContext().getString(R.string.zxing_app_name));
    builder.setMessage(getContext().getString(R.string.zxing_msg_camera_framework_bug));
    builder.setPositiveButton(R.string.zxing_button_ok, new FinishListener(activity));
    builder.setOnCancelListener(new FinishListener(activity));
    builder.show();
  }",False,True,"This method displays an alert dialog with a specific title and message, and sets a positive button and a cancel listener. It is used to show a framework bug message and exit the application.",False,"The code defines a private method called ""displayFrameworkBugMessageAndExit"" that displays an alert dialog with a title and message. It also sets a positive button with a listener to finish the activity and a cancel listener to finish the activity when the dialog is canceled."
