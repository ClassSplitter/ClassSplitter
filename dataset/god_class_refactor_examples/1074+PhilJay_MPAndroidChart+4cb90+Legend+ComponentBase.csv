index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,LegendPosition,legend position ,Field,,,,,26,1,1,,public enum LegendPosition,False,False,,False,
2,LegendForm,legend form ,Field,,,,,22,1,1,,public enum LegendForm,False,False,,False,
3,mEnabled,m enabled flag indicating if the legend should be drawn or not ,Field,,,,,96,2,2,"/** 
 * flag indicating if the legend should be drawn or not 
 */
","/** flag indicating if the legend should be drawn or not */
    private boolean mEnabled = true;",False,False,"/** 
 * flag indicating if the legend should be drawn or not 
 */
",False,"/** 
 * flag indicating if the legend should be drawn or not 
 */
"
4,mColors,m colors the legend colors ,Field,"Legend(int[],String[]) Legend(ArrayList<Integer>,ArrayList<String>)",,,,51,2,2,"/** 
 * the legend colors 
 */
","/** the legend colors */
    private int[] mColors;",False,False,"/** 
 * the legend colors 
 */
",False,"/** 
 * the legend colors 
 */
"
5,mLabels,m labels the legend labels ,Field,"Legend(int[],String[]) Legend(ArrayList<Integer>,ArrayList<String>) setLegendLabels(String[])",,,,54,2,2,"/** 
 * the legend labels 
 */
","/** the legend labels */
    private String[] mLabels;",False,False,"/** 
 * the legend labels 
 */
",False,"/** 
 * the legend labels 
 */
"
6,mPosition,m position the position relative to the chart the legend is drawn on ,Field,,,,,136,2,2,"/** 
 * the position relative to the chart the legend is drawn on 
 */
","/** the position relative to the chart the legend is drawn on */
    private LegendPosition mPosition = LegendPosition.BELOW_CHART_LEFT;",False,False,"/** 
 * the position relative to the chart the legend is drawn on 
 */
",False,"/** 
 * the position relative to the chart the legend is drawn on 
 */
"
7,mShape,m shape the shape form the legend colors are drawn in ,Field,,,,,103,2,2,"/** 
 * the shape/form the legend colors are drawn in 
 */
","/** the shape/form the legend colors are drawn in */
    private LegendForm mShape = LegendForm.SQUARE;",False,False,"/** 
 * the shape/form the legend colors are drawn in 
 */
",False,"/** 
 * the shape/form the legend colors are drawn in 
 */
"
8,mTypeface,m typeface the typeface used for the legend labels ,Field,,,,,85,2,2,"/** 
 * the typeface used for the legend labels 
 */
","/** the typeface used for the legend labels */
    private Typeface mTypeface = null;",True,True,"/** 
 * the typeface used for the legend labels 
 */
",False,"/** 
 * the typeface used for the legend labels 
 */
"
9,mTextSize,m text size the text size of the legend labels ,Field,,,,,76,2,2,"/** 
 * the text size of the legend labels 
 */
","/** the text size of the legend labels */
    private float mTextSize = 10f;",True,True,"/** 
 * the text size of the legend labels 
 */
",False,"/** 
 * the text size of the legend labels 
 */
"
10,mTextColor,m text color the text color to use ,Field,,,,,70,2,2,"/** 
 * the text color to use 
 */
","/** the text color to use */
    private int mTextColor = Color.BLACK;",True,True,"/** 
 * the text color to use 
 */
",False,"/** 
 * the text color to use 
 */
"
11,mFormSize,m form size the size of the legend forms shapes ,Field,,,,,76,2,2,"/** 
 * the size of the legend forms/shapes 
 */
","/** the size of the legend forms/shapes */
    private float mFormSize = 8f;",False,False,"/** 
 * the size of the legend forms/shapes 
 */
",False,"/** 
 * the size of the legend forms/shapes 
 */
"
12,mXEntrySpace,m x entry space the space between the legend entries on a horizontal axis default 6f ,Field,,,,,125,4,2,"/** 
 * the space between the legend entries on a horizontal axis, default 6f
 */
","/**
     * the space between the legend entries on a horizontal axis, default 6f
     */
    private float mXEntrySpace = 6f;",False,False,"/** 
 * the space between the legend entries on a horizontal axis, default 6f
 */
",False,"/** 
 * the space between the legend entries on a horizontal axis, default 6f
 */
"
13,mYEntrySpace,m y entry space the space between the legend entries on a vertical axis default 5f ,Field,,,,,123,4,2,"/** 
 * the space between the legend entries on a vertical axis, default 5f
 */
","/**
     * the space between the legend entries on a vertical axis, default 5f
     */
    private float mYEntrySpace = 5f;",False,False,"/** 
 * the space between the legend entries on a vertical axis, default 5f
 */
",False,"/** 
 * the space between the legend entries on a vertical axis, default 5f
 */
"
14,mFormToTextSpace,m form to text space the space between the legend entries on a vertical axis default 2f private float m y entry space 2f the space between the form and the actual label text ,Field,setFormToTextSpace(float),,,,231,6,2,"/** 
 * the space between the legend entries on a vertical axis, default 2f private float mYEntrySpace = 2f; /** the space between the form and the actual label/text
 */
","/**
     * the space between the legend entries on a vertical axis, default 2f
     * private float mYEntrySpace = 2f; /** the space between the form and the
     * actual label/text
     */
    private float mFormToTextSpace = 5f;",False,False,"/** 
 * the space between the legend entries on a vertical axis, default 2f private float mYEntrySpace = 2f; /** the space between the form and the actual label/text
 */
",False,"/** 
 * the space between the legend entries on a vertical axis, default 2f private float mYEntrySpace = 2f; /** the space between the form and the actual label/text
 */
"
15,mStackSpace,m stack space the space that should be left between stacked forms ,Field,,,,,94,2,2,"/** 
 * the space that should be left between stacked forms 
 */
","/** the space that should be left between stacked forms */
    private float mStackSpace = 3f;",False,False,"/** 
 * the space that should be left between stacked forms 
 */
",False,"/** 
 * the space that should be left between stacked forms 
 */
"
16,mXOffset,m x offset the offset in pixels this axis labels have on the x axis ,Field,Legend(),,,,98,2,4,"/** 
 * the offset in pixels this axis labels have on the x-axis 
 */
","/** the offset in pixels this axis labels have on the x-axis */
    protected float mXOffset = 5f;",True,True,"/** 
 * the offset in pixels this axis labels have on the x-axis 
 */
",False,"/** 
 * the offset in pixels this axis labels have on the x-axis 
 */
"
17,mYOffset,m y offset the offset in pixels this axis labels have on the y axis ,Field,Legend(),,,,98,2,4,"/** 
 * the offset in pixels this axis labels have on the Y-axis 
 */
","/** the offset in pixels this axis labels have on the Y-axis */
    protected float mYOffset = 6f;",True,True,"/** 
 * the offset in pixels this axis labels have on the Y-axis 
 */
",False,"/** 
 * the offset in pixels this axis labels have on the Y-axis 
 */
"
18,Legend(),legend default constructor ,Method,,,com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mFormSize com.github.mikephil.charting.components.Legend+mXEntrySpace com.github.mikephil.charting.components.Legend+mYEntrySpace com.github.mikephil.charting.components.Legend+mFormToTextSpace com.github.mikephil.charting.components.Legend+mTextSize com.github.mikephil.charting.components.Legend+mStackSpace com.github.mikephil.charting.components.Legend+mXOffset com.github.mikephil.charting.components.Legend+mXOffset com.github.mikephil.charting.components.Legend+mYOffset com.github.mikephil.charting.components.Legend+mYOffset,463,12,1,"/** 
 * default constructor 
 */
","/** default constructor */
    public Legend() {

        mFormSize = Utils.convertDpToPixel(8f);
        mXEntrySpace = Utils.convertDpToPixel(6f);
        mYEntrySpace = Utils.convertDpToPixel(5f);
        mFormToTextSpace = Utils.convertDpToPixel(5f);
        mTextSize = Utils.convertDpToPixel(10f);
        mStackSpace = Utils.convertDpToPixel(3f);
        this.mXOffset = Utils.convertDpToPixel(5f);
        this.mYOffset = Utils.convertDpToPixel(6f);
    }",False,False,"This method serves as the default constructor for the Legend class. It initializes various properties of the Legend object, such as form size, entry space, form-to-text space, text size, stack space, and offsets.",False,"The code defines a default constructor for the Legend class. It initializes various properties of the Legend object, such as form size, entry space, form-to-text space, text size, stack space, and offsets, by converting the given values from dp to pixels using a utility method."
19,"Legend(int[],String[])",legend colors labels constructor provide colors and labels for the legend param colors param labels ,Method,,,java.lang.IllegalArgumentException+IllegalArgumentException(String) java.lang.IllegalArgumentException+IllegalArgumentException(String),com.github.mikephil.charting.components.Legend+mColors com.github.mikephil.charting.components.Legend+mColors com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels,589,21,1,"/** 
 * Constructor. Provide colors and labels for the legend.
 * @param colors
 * @param labels
 */
","/**
     * Constructor. Provide colors and labels for the legend.
     * 
     * @param colors
     * @param labels
     */
    public Legend(int[] colors, String[] labels) {
        this();

        if (colors == null || labels == null) {
            throw new IllegalArgumentException(""colors array or labels array is NULL"");
        }

        if (colors.length != labels.length) {
            throw new IllegalArgumentException(
                    ""colors array and labels array need to be of same size"");
        }

        this.mColors = colors;
        this.mLabels = labels;
    }",False,False,"This method serves as a constructor for the Legend class. It takes in an array of colors and an array of labels as parameters, and assigns them to the corresponding instance variables of the class. It also performs some error checking to ensure that the arrays are not null and have the same length.",False,"This code defines a constructor for a Legend class that takes in an array of colors and an array of labels as parameters. It checks if the arrays are not null and have the same length, and then assigns the arrays to the corresponding instance variables."
20,"Legend(ArrayList<Integer>,ArrayList<String>)",legend colors labels constructor provide colors and labels for the legend param colors param labels ,Method,,,java.lang.IllegalArgumentException+IllegalArgumentException(String) java.util.ArrayList+size() java.util.ArrayList+size() java.util.ArrayList+size() java.util.ArrayList+size() java.lang.IllegalArgumentException+IllegalArgumentException(String) com.github.mikephil.charting.utils.Utils+convertIntegers(ArrayList<Integer>) com.github.mikephil.charting.utils.Utils+convertIntegers(ArrayList<Integer>) com.github.mikephil.charting.utils.Utils+convertStrings(ArrayList<String>) com.github.mikephil.charting.utils.Utils+convertStrings(ArrayList<String>),com.github.mikephil.charting.components.Legend+mColors com.github.mikephil.charting.components.Legend+mColors com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels,656,21,1,"/** 
 * Constructor. Provide colors and labels for the legend.
 * @param colors
 * @param labels
 */
","/**
     * Constructor. Provide colors and labels for the legend.
     * 
     * @param colors
     * @param labels
     */
    public Legend(ArrayList<Integer> colors, ArrayList<String> labels) {
        this();

        if (colors == null || labels == null) {
            throw new IllegalArgumentException(""colors array or labels array is NULL"");
        }

        if (colors.size() != labels.size()) {
            throw new IllegalArgumentException(
                    ""colors array and labels array need to be of same size"");
        }

        this.mColors = Utils.convertIntegers(colors);
        this.mLabels = Utils.convertStrings(labels);
    }",False,False,"The function of this method is to create a Legend object with provided colors and labels for the legend. It checks if the colors and labels arrays are null or have different sizes, and then assigns the converted versions of the arrays to the corresponding instance variables.",False,"This code defines a constructor for a Legend class that takes in an ArrayList of colors and an ArrayList of labels. It checks if the input arrays are null or have different sizes, and then converts the arrays to the appropriate data types for further use."
21,getMaximumEntryWidth(Paint),get maximum entry width p returns the maximum length in pixels across all legend labels formsize formtotextspace param p the paint object used for rendering the text return ,Method,calculateDimensions(Paint) calculateDimensions(Paint),,"com.github.mikephil.charting.utils.Utils+calcTextWidth(Paint,String) com.github.mikephil.charting.utils.Utils+calcTextWidth(Paint,String)",com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mFormSize com.github.mikephil.charting.components.Legend+mFormToTextSpace,592,24,1,"/** 
 * returns the maximum length in pixels across all legend labels + formsize + formtotextspace
 * @param p the paint object used for rendering the text
 * @return
 */
","/**
     * returns the maximum length in pixels across all legend labels + formsize
     * + formtotextspace
     * 
     * @param p the paint object used for rendering the text
     * @return
     */
    public float getMaximumEntryWidth(Paint p) {

        float max = 0f;

        for (int i = 0; i < mLabels.length; i++) {

            if (mLabels[i] != null) {

                float length = (float) Utils.calcTextWidth(p, mLabels[i]);

                if (length > max)
                    max = length;
            }
        }

        return max + mFormSize + mFormToTextSpace;
    }",False,False,"The function of this method is to calculate the maximum width in pixels across all legend labels, including the form size and the space between the form and the text. It takes a Paint object as a parameter and returns a float value.",True,"This code defines a method called ""getMaximumEntryWidth"" that calculates the maximum width in pixels across all legend labels, including the form size and the space between the form and the text. It takes a Paint object as a parameter and returns the calculated maximum width."
22,getMaximumEntryHeight(Paint),get maximum entry height p returns the maximum height in pixels across all legend labels param p the paint object used for rendering the text return ,Method,calculateDimensions(Paint) calculateDimensions(Paint),,"com.github.mikephil.charting.utils.Utils+calcTextHeight(Paint,String) com.github.mikephil.charting.utils.Utils+calcTextHeight(Paint,String)",com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels,527,23,1,"/** 
 * returns the maximum height in pixels across all legend labels
 * @param p the paint object used for rendering the text
 * @return
 */
","/**
     * returns the maximum height in pixels across all legend labels
     * 
     * @param p the paint object used for rendering the text
     * @return
     */
    public float getMaximumEntryHeight(Paint p) {

        float max = 0f;

        for (int i = 0; i < mLabels.length; i++) {

            if (mLabels[i] != null) {

                float length = (float) Utils.calcTextHeight(p, mLabels[i]);

                if (length > max)
                    max = length;
            }
        }

        return max;
    }",False,False,This method calculates and returns the maximum height in pixels across all legend labels using the provided paint object for rendering the text.,True,"This code defines a method called ""getMaximumEntryHeight"" that calculates and returns the maximum height in pixels across all legend labels. It takes a Paint object as a parameter for rendering the text. The method iterates through the labels, calculates the height of each label using the provided Paint object, and updates the maximum height if a larger height is found."
23,getColors(),get colors returns all the colors the legend uses return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+drawForm(Canvas,float,float,int,Legend) com.github.mikephil.charting.renderer.LegendRenderer+drawForm(Canvas,float,float,int,Legend)",,com.github.mikephil.charting.components.Legend+mColors,141,8,1,"/** 
 * returns all the colors the legend uses
 * @return
 */
","/**
     * returns all the colors the legend uses
     * 
     * @return
     */
    public int[] getColors() {
        return mColors;
    }",False,False,This method returns an array of integers that represents the colors used in the legend.,False,"The code is a method named ""getColors"" that returns an array of integers representing the colors used in a legend. The method does not take any parameters and has no side effects."
24,getLegendLabels(),get legend labels returns all the labels the legend uses return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mLabels,150,8,1,"/** 
 * returns all the labels the legend uses
 * @return
 */
","/**
     * returns all the labels the legend uses
     * 
     * @return
     */
    public String[] getLegendLabels() {
        return mLabels;
    }",False,False,This method returns an array of strings that represents the labels used by the legend.,False,"The code contains a method named ""getLegendLabels"" that returns an array of strings representing the labels used by a legend. The method does not take any parameters and has no side effects."
25,setLegendLabels(String[]),set legend labels labels sets a custom array of labels for the legend make sure the labels array has the same length as the colors array param labels ,Method,,,java.lang.IllegalArgumentException+IllegalArgumentException(String),com.github.mikephil.charting.components.Legend+mColors com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels,441,15,1,"/** 
 * Sets a custom array of labels for the legend. Make sure the labels array has the same length as the colors array.
 * @param labels
 */
","/**
     * Sets a custom array of labels for the legend. Make sure the labels array
     * has the same length as the colors array.
     * 
     * @param labels
     */
    public void setLegendLabels(String[] labels) {

        if (mColors.length != labels.length) {
            throw new IllegalArgumentException(
                    ""colors array and labels array need to be of same size"");
        }

        this.mLabels = labels;
    }",False,False,"This method sets a custom array of labels for the legend. It checks if the length of the labels array is the same as the length of the colors array, and throws an exception if they are not the same. Finally, it assigns the labels array to the mLabels variable.",False,"This code defines a method called ""setLegendLabels"" that takes in an array of strings as a parameter. It checks if the length of the input array matches the length of another array called ""mColors"" and throws an exception if they are not equal. If they are equal, it assigns the input array to another array called ""mLabels""."
26,getLabel(int),get label index returns the legend label at the given index param index return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mLabels,183,9,1,"/** 
 * Returns the legend-label at the given index.
 * @param index
 * @return
 */
","/**
     * Returns the legend-label at the given index.
     * 
     * @param index
     * @return
     */
    public String getLabel(int index) {
        return mLabels[index];
    }",False,False,This method returns the legend-label at the given index.,False,"The code is a method named ""getLabel"" that takes an index as a parameter and returns the legend-label at that index. It is not clear what the ""mLabels"" variable is, but it is assumed to be an array or collection containing the legend-labels."
27,getPosition(),get position returns the position of the legend relative to the chart return ,Method,,"com.github.mikephil.charting.charts.BarLineChartBase+calculateOffsets() com.github.mikephil.charting.charts.BarLineChartBase+calculateOffsets() com.github.mikephil.charting.charts.BarLineChartBase+calculateOffsets() com.github.mikephil.charting.charts.BarLineChartBase+calculateOffsets() com.github.mikephil.charting.charts.BarLineChartBase+calculateOffsets() com.github.mikephil.charting.charts.HorizontalBarChart+calculateOffsets() com.github.mikephil.charting.charts.HorizontalBarChart+calculateOffsets() com.github.mikephil.charting.charts.HorizontalBarChart+calculateOffsets() com.github.mikephil.charting.charts.HorizontalBarChart+calculateOffsets() com.github.mikephil.charting.charts.HorizontalBarChart+calculateOffsets() com.github.mikephil.charting.charts.PieRadarChartBase+calculateOffsets() com.github.mikephil.charting.charts.PieRadarChartBase+calculateOffsets() com.github.mikephil.charting.charts.PieRadarChartBase+calculateOffsets() com.github.mikephil.charting.charts.PieRadarChartBase+calculateOffsets() com.github.mikephil.charting.charts.PieRadarChartBase+calculateOffsets() com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mPosition,172,8,1,"/** 
 * returns the position of the legend relative to the chart
 * @return
 */
","/**
     * returns the position of the legend relative to the chart
     * 
     * @return
     */
    public LegendPosition getPosition() {
        return mPosition;
    }",False,False,This method returns the position of the legend relative to the chart.,False,"This code defines a method called ""getPosition()"" that returns the position of the legend relative to a chart. The method returns an object of type ""LegendPosition""."
28,setPosition(LegendPosition),set position pos sets the position of the legend relative to the whole chart param pos ,Method,,"com.xxmassdeveloper.mpchartexample.BarChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.BarChartActivityMultiDataset+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.fragments.PieChartFrag+onCreateView(LayoutInflater,ViewGroup,Bundle) com.xxmassdeveloper.mpchartexample.HorizontalBarChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivity2+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.listviewitems.PieChartItem+getView(int,View,Context) com.xxmassdeveloper.mpchartexample.MultiLineChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.PieChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.RadarChartActivitry+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.ScatterChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.StackedBarActivity+onCreate(Bundle)",,com.github.mikephil.charting.components.Legend+mPosition,185,8,1,"/** 
 * sets the position of the legend relative to the whole chart
 * @param pos
 */
","/**
     * sets the position of the legend relative to the whole chart
     * 
     * @param pos
     */
    public void setPosition(LegendPosition pos) {
        mPosition = pos;
    }",False,False,This method sets the position of the legend on the chart. It takes a LegendPosition parameter and assigns it to the mPosition variable.,False,"This code defines a method called ""setPosition"" that takes a parameter of type ""LegendPosition"" and sets the value of the ""mPosition"" variable to the provided value. The method is used to set the position of the legend relative to the entire chart."
29,getForm(),get form returns the current form shape that is set for the legend return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+drawForm(Canvas,float,float,int,Legend)",,com.github.mikephil.charting.components.Legend+mShape,162,8,1,"/** 
 * returns the current form/shape that is set for the legend
 * @return
 */
","/**
     * returns the current form/shape that is set for the legend
     * 
     * @return
     */
    public LegendForm getForm() {
        return mShape;
    }",False,False,This method returns the current form or shape that is set for the legend.,False,"This code defines a method called ""getForm"" that returns the current form or shape set for the legend. The method returns an object of type ""LegendForm""."
30,setForm(LegendForm),set form shape sets the form shape of the legend forms param shape ,Method,,"com.xxmassdeveloper.mpchartexample.BarChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.InvertedLineChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivity1+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivity2+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivityColored+setupChart(LineChart,LineData,int) com.xxmassdeveloper.mpchartexample.RealtimeLineChartActivity+onCreate(Bundle)",,com.github.mikephil.charting.components.Legend+mShape,160,8,1,"/** 
 * sets the form/shape of the legend forms
 * @param shape
 */
","/**
     * sets the form/shape of the legend forms
     * 
     * @param shape
     */
    public void setForm(LegendForm shape) {
        mShape = shape;
    }",False,False,"This method sets the form or shape of the legend forms. It takes a parameter called ""shape"" which represents the desired form, and assigns it to the variable ""mShape"".",False,"This code defines a method called ""setForm"" that takes a parameter of type ""LegendForm"" and sets the value of the ""mShape"" variable to the provided parameter. The method is used to set the form or shape of the legend forms."
31,getTypeface(),get typeface returns the typeface used for the legend labels returns null if none is set return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+computeLegend(ChartData<?>,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mTypeface,193,9,1,"/** 
 * returns the typeface used for the legend labels, returns null if none is set
 * @return
 */
","/**
     * returns the typeface used for the legend labels, returns null if none is
     * set
     * 
     * @return
     */
    public Typeface getTypeface() {
        return mTypeface;
    }",True,True,This method returns the typeface used for the legend labels. It returns null if no typeface is set.,False,"This code defines a method called ""getTypeface"" that returns the typeface used for the legend labels. If no typeface is set, it returns null."
32,setTypeface(Typeface),set typeface tf sets a specific typeface for the legend labels param tf ,Method,,"com.xxmassdeveloper.mpchartexample.BarChartActivityMultiDataset+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.fragments.BarChartFrag+onCreateView(LayoutInflater,ViewGroup,Bundle) com.xxmassdeveloper.mpchartexample.fragments.ComplexityFragment+onCreateView(LayoutInflater,ViewGroup,Bundle) com.xxmassdeveloper.mpchartexample.fragments.ScatterChartFrag+onCreateView(LayoutInflater,ViewGroup,Bundle) com.xxmassdeveloper.mpchartexample.fragments.SineCosineFragment+onCreateView(LayoutInflater,ViewGroup,Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivity2+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivityColored+setupChart(LineChart,LineData,int) com.xxmassdeveloper.mpchartexample.RadarChartActivitry+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.RealtimeLineChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.ScatterChartActivity+onCreate(Bundle)",,com.github.mikephil.charting.components.Legend+mTypeface,163,8,1,"/** 
 * sets a specific typeface for the legend labels
 * @param tf
 */
","/**
     * sets a specific typeface for the legend labels
     * 
     * @param tf
     */
    public void setTypeface(Typeface tf) {
        mTypeface = tf;
    }",True,True,This method sets a specific typeface for the legend labels. It takes a Typeface as a parameter and assigns it to the mTypeface variable.,False,"This code defines a method called ""setTypeface"" that takes a Typeface object as a parameter and sets it as the typeface for the legend labels. The method does not return anything."
33,setFormSize(float),set form size size sets the size in pixels of the legend forms this is internally converted in dp default 8f param size ,Method,,"com.xxmassdeveloper.mpchartexample.BarChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.HorizontalBarChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivityColored+setupChart(LineChart,LineData,int) com.xxmassdeveloper.mpchartexample.StackedBarActivity+onCreate(Bundle)",com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mFormSize,242,9,1,"/** 
 * sets the size in pixels of the legend forms, this is internally converted in dp, default 8f
 * @param size
 */
","/**
     * sets the size in pixels of the legend forms, this is internally converted
     * in dp, default 8f
     * 
     * @param size
     */
    public void setFormSize(float size) {
        mFormSize = Utils.convertDpToPixel(size);
    }",False,False,This method sets the size of the legend forms in pixels. The size is internally converted to dp. The default size is 8f.,False,"This code defines a method called ""setFormSize"" that takes a float parameter ""size"" and sets the size of the legend forms in pixels. The size is internally converted from dp to pixels using a utility method. The default size is 8f."
34,getFormSize(),get form size returns the size in dp of the legend forms return ,Method,,"com.github.mikephil.charting.charts.PieRadarChartBase+getFullLegendWidth() com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+drawForm(Canvas,float,float,int,Legend)",,com.github.mikephil.charting.components.Legend+mFormSize,149,8,1,"/** 
 * returns the size in dp of the legend forms
 * @return
 */
","/**
     * returns the size in dp of the legend forms
     * 
     * @return
     */
    public float getFormSize() {
        return mFormSize;
    }",False,False,This method returns the size of the legend forms in dp.,False,"This code defines a method called ""getFormSize"" that returns the size of the legend forms in dp (density-independent pixels). The method does not take any parameters and simply returns the value of the ""mFormSize"" variable."
35,getXEntrySpace(),get x entry space returns the space between the legend entries on a horizontal axis in pixels return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mXEntrySpace,195,9,1,"/** 
 * returns the space between the legend entries on a horizontal axis in pixels
 * @return
 */
","/**
     * returns the space between the legend entries on a horizontal axis in
     * pixels
     * 
     * @return
     */
    public float getXEntrySpace() {
        return mXEntrySpace;
    }",False,False,"This method returns the amount of space, in pixels, between the legend entries on a horizontal axis.",False,"The code defines a method called ""getXEntrySpace"" which returns the space between the legend entries on a horizontal axis in pixels. It does not take any parameters and the return type is a float."
36,setXEntrySpace(float),set x entry space space sets the space between the legend entries on a horizontal axis in pixels converts to dp internally param space ,Method,,com.xxmassdeveloper.mpchartexample.BarChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.HorizontalBarChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.PieChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.RadarChartActivitry+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.StackedBarActivity+onCreate(Bundle),com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mXEntrySpace,259,9,1,"/** 
 * sets the space between the legend entries on a horizontal axis in pixels, converts to dp internally
 * @param space
 */
","/**
     * sets the space between the legend entries on a horizontal axis in pixels,
     * converts to dp internally
     * 
     * @param space
     */
    public void setXEntrySpace(float space) {
        mXEntrySpace = Utils.convertDpToPixel(space);
    }",False,False,This method sets the space between legend entries on a horizontal axis in pixels. It also converts the space value from dp to pixels internally.,False,"The method ""setXEntrySpace"" sets the space between legend entries on a horizontal axis in pixels. It takes a float value as a parameter, which is converted to dp internally using the ""convertDpToPixel"" method from the Utils class."
37,getYEntrySpace(),get y entry space returns the space between the legend entries on a vertical axis in pixels return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mYEntrySpace,186,8,1,"/** 
 * returns the space between the legend entries on a vertical axis in pixels
 * @return
 */
","/**
     * returns the space between the legend entries on a vertical axis in pixels
     * 
     * @return
     */
    public float getYEntrySpace() {
        return mYEntrySpace;
    }",False,False,"This method returns the amount of space, in pixels, between the legend entries on a vertical axis.",False,"The code snippet defines a method called ""getYEntrySpace"" which returns the space between the legend entries on a vertical axis in pixels. It does not take any parameters and the return type is a float."
38,setYEntrySpace(float),set y entry space space sets the space between the legend entries on a vertical axis in pixels converts to dp internally param space ,Method,,com.xxmassdeveloper.mpchartexample.PieChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.RadarChartActivitry+onCreate(Bundle),com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mYEntrySpace,257,9,1,"/** 
 * sets the space between the legend entries on a vertical axis in pixels, converts to dp internally
 * @param space
 */
","/**
     * sets the space between the legend entries on a vertical axis in pixels,
     * converts to dp internally
     * 
     * @param space
     */
    public void setYEntrySpace(float space) {
        mYEntrySpace = Utils.convertDpToPixel(space);
    }",False,False,This method sets the space between legend entries on a vertical axis in pixels. It also converts the space value from dp to pixels internally.,False,"The method ""setYEntrySpace"" sets the space between legend entries on a vertical axis in pixels. It takes a float value as a parameter, which is converted to dp internally using the ""convertDpToPixel"" method from the Utils class."
39,getFormToTextSpace(),get form to text space returns the space between the form and the actual label text return ,Method,,"com.github.mikephil.charting.charts.PieRadarChartBase+getFullLegendWidth() com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mFormToTextSpace,181,8,1,"/** 
 * returns the space between the form and the actual label/text
 * @return
 */
","/**
     * returns the space between the form and the actual label/text
     * 
     * @return
     */
    public float getFormToTextSpace() {
        return mFormToTextSpace;
    }",False,False,This method returns the value of the space between the form and the actual label/text.,False,"This code defines a method called ""getFormToTextSpace"" which returns the value of a variable called ""mFormToTextSpace"". This variable represents the space between a form and its corresponding label or text."
40,setFormToTextSpace(float),set form to text space space sets the space between the form and the actual label text converts to dp internally param m form to text space ,Method,,com.xxmassdeveloper.mpchartexample.StackedBarActivity+onCreate(Bundle),com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mFormToTextSpace com.github.mikephil.charting.components.Legend+mFormToTextSpace,268,9,1,"/** 
 * sets the space between the form and the actual label/text, converts to dp internally
 * @param mFormToTextSpace
 */
","/**
     * sets the space between the form and the actual label/text, converts to dp
     * internally
     * 
     * @param mFormToTextSpace
     */
    public void setFormToTextSpace(float space) {
        this.mFormToTextSpace = Utils.convertDpToPixel(space);
    }",False,False,"This method sets the space between a form and a label/text. It takes a float value as input, which represents the space in dp, and converts it to pixels internally.",False,This method sets the space between a form and a label/text. The space value is converted from dp to pixels internally.
41,apply(Legend),apply l applies the state from the legend in the parameter to this legend except colors labels and offsets param l ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+computeLegend(ChartData<?>,Legend)",,com.github.mikephil.charting.components.Legend+mPosition com.github.mikephil.charting.components.Legend+mPosition com.github.mikephil.charting.components.Legend+mShape com.github.mikephil.charting.components.Legend+mShape com.github.mikephil.charting.components.Legend+mTypeface com.github.mikephil.charting.components.Legend+mTypeface com.github.mikephil.charting.components.Legend+mFormSize com.github.mikephil.charting.components.Legend+mFormSize com.github.mikephil.charting.components.Legend+mXEntrySpace com.github.mikephil.charting.components.Legend+mXEntrySpace com.github.mikephil.charting.components.Legend+mYEntrySpace com.github.mikephil.charting.components.Legend+mYEntrySpace com.github.mikephil.charting.components.Legend+mFormToTextSpace com.github.mikephil.charting.components.Legend+mFormToTextSpace com.github.mikephil.charting.components.Legend+mTextSize com.github.mikephil.charting.components.Legend+mTextSize com.github.mikephil.charting.components.Legend+mStackSpace com.github.mikephil.charting.components.Legend+mStackSpace com.github.mikephil.charting.components.Legend+mTextColor com.github.mikephil.charting.components.Legend+mTextColor com.github.mikephil.charting.components.Legend+mEnabled com.github.mikephil.charting.components.Legend+mEnabled com.github.mikephil.charting.components.Legend+mXOffset com.github.mikephil.charting.components.Legend+mXOffset com.github.mikephil.charting.components.Legend+mYOffset com.github.mikephil.charting.components.Legend+mYOffset,641,22,1,"/** 
 * applies the state from the legend in the parameter to this legend (except colors, labels and offsets)
 * @param l
 */
","/**
     * applies the state from the legend in the parameter to this legend (except
     * colors, labels and offsets)
     * 
     * @param l
     */
    public void apply(Legend l) {

        mPosition = l.mPosition;
        mShape = l.mShape;
        mTypeface = l.mTypeface;
        mFormSize = l.mFormSize;
        mXEntrySpace = l.mXEntrySpace;
        mYEntrySpace = l.mYEntrySpace;
        mFormToTextSpace = l.mFormToTextSpace;
        mTextSize = l.mTextSize;
        mStackSpace = l.mStackSpace;
        mTextColor = l.mTextColor;
        mEnabled = l.mEnabled;
        mXOffset = l.mXOffset;
        mYOffset = l.mYOffset;
    }",False,False,"The function of this method is to copy the state of a given Legend object to the current Legend object, excluding the colors, labels, and offsets.",False,"The `apply` method in this code applies the state of a given `Legend` object to the current `Legend` object, except for the colors, labels, and offsets. It copies the position, shape, typeface, form size, entry spaces, form-to-text space, text size, stack space, text color, enabled status, and offsets from the given `Legend` object to the current one."
42,setTextSize(float),set text size size sets the text size of the legend labels default 9f param size ,Method,,com.xxmassdeveloper.mpchartexample.BarChartActivity+onCreate(Bundle),com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mTextSize,195,8,1,"/** 
 * sets the text size of the legend labels, default 9f
 * @param size
 */
","/**
     * sets the text size of the legend labels, default 9f
     * 
     * @param size
     */
    public void setTextSize(float size) {
        mTextSize = Utils.convertDpToPixel(size);
    }",True,True,This method sets the text size of the legend labels. It takes a float value as a parameter and converts it to pixels using a utility method.,False,"This code defines a method called ""setTextSize"" that sets the text size of the legend labels. The method takes a float parameter called ""size"" and converts it from dp to pixels using a utility method. The default text size is 9f."
43,getTextSize(),get text size returns the text size of the legend labels return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+computeLegend(ChartData<?>,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mTextSize,149,8,1,"/** 
 * returns the text size of the legend labels
 * @return
 */
","/**
     * returns the text size of the legend labels
     * 
     * @return
     */
    public float getTextSize() {
        return mTextSize;
    }",True,True,This method returns the text size of the legend labels.,False,"This code defines a method called ""getTextSize"" that returns the text size of the legend labels. The method does not take any parameters and simply returns the value of the variable ""mTextSize""."
44,getStackSpace(),get stack space returns the space that is left out between stacked forms with no label return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mStackSpace,183,8,1,"/** 
 * returns the space that is left out between stacked forms (with no label)
 * @return
 */
","/**
     * returns the space that is left out between stacked forms (with no label)
     * 
     * @return
     */
    public float getStackSpace() {
        return mStackSpace;
    }",False,False,This method returns the amount of space that is left between stacked forms with no label.,False,"This code defines a method called ""getStackSpace"" that returns the value of a variable called ""mStackSpace"". The method is used to retrieve the amount of space that is left between stacked forms without a label."
45,setStackSpace(float),set stack space space sets the space that is left out between stacked forms with no label param space ,Method,,,,com.github.mikephil.charting.components.Legend+mStackSpace,196,8,1,"/** 
 * sets the space that is left out between stacked forms (with no label)
 * @param space
 */
","/**
     * sets the space that is left out between stacked forms (with no label)
     * 
     * @param space
     */
    public void setStackSpace(float space) {
        mStackSpace = space;
    }",False,False,"This method sets the space between stacked forms that do not have a label. The space is specified by the parameter ""space"" and is stored in the variable ""mStackSpace"".",False,"This code defines a method called ""setStackSpace"" that sets the space between stacked forms with no label. The method takes a float parameter called ""space"" and assigns it to the variable ""mStackSpace""."
46,getFullWidth(Paint),get full width labelpaint calculates the full width the fully drawn legend will use in pixels return ,Method,calculateDimensions(Paint),,"com.github.mikephil.charting.utils.Utils+calcTextWidth(Paint,String) com.github.mikephil.charting.utils.Utils+calcTextWidth(Paint,String)",com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mColors com.github.mikephil.charting.components.Legend+mFormSize com.github.mikephil.charting.components.Legend+mFormToTextSpace com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mXEntrySpace com.github.mikephil.charting.components.Legend+mFormSize com.github.mikephil.charting.components.Legend+mStackSpace,698,27,1,"/** 
 * calculates the full width the fully drawn legend will use in pixels
 * @return
 */
","/**
     * calculates the full width the fully drawn legend will use in pixels
     * 
     * @return
     */
    public float getFullWidth(Paint labelpaint) {

        float width = 0f;

        for (int i = 0; i < mLabels.length; i++) {

            // grouped forms have null labels
            if (mLabels[i] != null) {

                // make a step to the left
                if (mColors[i] != -2)
                    width += mFormSize + mFormToTextSpace;

                width += Utils.calcTextWidth(labelpaint, mLabels[i])
                        + mXEntrySpace;
            } else {
                width += mFormSize + mStackSpace;
            }
        }

        return width;
    }",False,False,"The function calculates the total width in pixels that the legend will occupy when fully drawn. It iterates through the labels and calculates the width based on the form size, form-to-text space, text width, and entry space.",True,"This method calculates the total width in pixels that will be occupied by a fully drawn legend. It iterates through the labels and forms, adding their respective sizes and spaces to the total width. If a label is null, it adds the form size and stack space instead."
47,getFullHeight(Paint),get full height labelpaint calculates the full height of the drawn legend param m legend label paint return ,Method,calculateDimensions(Paint),,"com.github.mikephil.charting.utils.Utils+calcTextHeight(Paint,String) com.github.mikephil.charting.utils.Utils+calcTextHeight(Paint,String)",com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mLabels com.github.mikephil.charting.components.Legend+mYEntrySpace,503,22,1,"/** 
 * Calculates the full height of the drawn legend.
 * @param mLegendLabelPaint
 * @return
 */
","/**
     * Calculates the full height of the drawn legend.
     * 
     * @param mLegendLabelPaint
     * @return
     */
    public float getFullHeight(Paint labelpaint) {

        float height = 0f;

        for (int i = 0; i < mLabels.length; i++) {

            // grouped forms have null labels
            if (mLabels[i] != null) {

                height += Utils.calcTextHeight(labelpaint, mLabels[i])
                        + mYEntrySpace;
            }
        }

        return height;
    }",False,False,"This method calculates the total height of the legend by summing the height of each label, taking into account the spacing between labels.",True,This code calculates the total height of a legend by iterating through an array of labels and adding the height of each label plus a specified spacing. The height is then returned as a float value.
48,mNeededWidth,m needed width the total width of the legend needed width space ,Field,,,,,93,2,1,"/** 
 * the total width of the legend (needed width space) 
 */
","/** the total width of the legend (needed width space) */
    public float mNeededWidth = 0f;",False,False,"/** 
 * the total width of the legend (needed width space) 
 */
",False,"/** 
 * the total width of the legend (needed width space) 
 */
"
49,mNeededHeight,m needed height the total height of the legend needed height space ,Field,,,,,96,2,1,"/** 
 * the total height of the legend (needed height space) 
 */
","/** the total height of the legend (needed height space) */
    public float mNeededHeight = 0f;",False,False,"/** 
 * the total height of the legend (needed height space) 
 */
",False,"/** 
 * the total height of the legend (needed height space) 
 */
"
50,mTextHeightMax,m text height max ,Field,,,,,33,1,1,,public float mTextHeightMax = 0f;,False,False,,False,
51,mTextWidthMax,m text width max ,Field,,,,,32,1,1,,public float mTextWidthMax = 0f;,False,False,,False,
52,calculateDimensions(Paint),calculate dimensions labelpaint calculates the dimensions of the legend this includes the maximum width and height of a single entry as well as the total width and height of the legend param labelpaint ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+computeLegend(ChartData<?>,Legend)",com.github.mikephil.charting.components.Legend+getMaximumEntryWidth(Paint) com.github.mikephil.charting.components.Legend+getMaximumEntryWidth(Paint) com.github.mikephil.charting.components.Legend+getFullHeight(Paint) com.github.mikephil.charting.components.Legend+getFullHeight(Paint) com.github.mikephil.charting.components.Legend+getMaximumEntryHeight(Paint) com.github.mikephil.charting.components.Legend+getMaximumEntryHeight(Paint) com.github.mikephil.charting.components.Legend+getFullWidth(Paint) com.github.mikephil.charting.components.Legend+getFullWidth(Paint) com.github.mikephil.charting.components.Legend+getMaximumEntryHeight(Paint) com.github.mikephil.charting.components.Legend+getMaximumEntryHeight(Paint) com.github.mikephil.charting.components.Legend+getMaximumEntryWidth(Paint) com.github.mikephil.charting.components.Legend+getMaximumEntryWidth(Paint),com.github.mikephil.charting.components.Legend+mPosition com.github.mikephil.charting.components.Legend+LegendPosition com.github.mikephil.charting.components.Legend+mPosition com.github.mikephil.charting.components.Legend+LegendPosition com.github.mikephil.charting.components.Legend+mPosition com.github.mikephil.charting.components.Legend+LegendPosition com.github.mikephil.charting.components.Legend+mNeededWidth com.github.mikephil.charting.components.Legend+mNeededHeight com.github.mikephil.charting.components.Legend+mTextWidthMax com.github.mikephil.charting.components.Legend+mNeededWidth com.github.mikephil.charting.components.Legend+mTextHeightMax com.github.mikephil.charting.components.Legend+mNeededWidth com.github.mikephil.charting.components.Legend+mNeededHeight com.github.mikephil.charting.components.Legend+mTextWidthMax com.github.mikephil.charting.components.Legend+mTextHeightMax com.github.mikephil.charting.components.Legend+mNeededHeight,947,25,1,"/** 
 * Calculates the dimensions of the Legend. This includes the maximum width and height of a single entry, as well as the total width and height of the Legend.
 * @param labelpaint
 */
","/**
     * Calculates the dimensions of the Legend. This includes the maximum width
     * and height of a single entry, as well as the total width and height of
     * the Legend.
     * 
     * @param labelpaint
     */
    public void calculateDimensions(Paint labelpaint) {

        if (mPosition == LegendPosition.RIGHT_OF_CHART
                || mPosition == LegendPosition.RIGHT_OF_CHART_CENTER
                || mPosition == LegendPosition.PIECHART_CENTER) {
            mNeededWidth = getMaximumEntryWidth(labelpaint);
            mNeededHeight = getFullHeight(labelpaint);
            mTextWidthMax = mNeededWidth;
            mTextHeightMax = getMaximumEntryHeight(labelpaint);

        } else {

            mNeededWidth = getFullWidth(labelpaint);
            mNeededHeight = getMaximumEntryHeight(labelpaint);
            mTextWidthMax = getMaximumEntryWidth(labelpaint);
            mTextHeightMax = mNeededHeight;
        }
    }",False,False,"This method calculates the dimensions of a legend. It determines the maximum width and height of a single entry, as well as the total width and height of the legend. The dimensions are calculated based on the position of the legend and the provided label paint.",True,"This method calculates the dimensions of a legend, including the maximum width and height of a single entry, as well as the total width and height of the legend. The dimensions are calculated based on the position of the legend and the provided label paint."
53,setTextColor(int),set text color color sets the text color to use for the legend labels make sure to use get resources get color when using a color from the resources param color ,Method,,"com.xxmassdeveloper.mpchartexample.LineChartActivity2+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.LineChartActivityColored+setupChart(LineChart,LineData,int) com.xxmassdeveloper.mpchartexample.RealtimeLineChartActivity+onCreate(Bundle)",,com.github.mikephil.charting.components.Legend+mTextColor,264,9,1,"/** 
 * Sets the text color to use for the legend labels. Make sure to use getResources().getColor(...) when using a color from the resources.
 * @param color
 */
","/**
     * Sets the text color to use for the legend labels. Make sure to use
     * getResources().getColor(...) when using a color from the resources.
     * 
     * @param color
     */
    public void setTextColor(int color) {
        mTextColor = color;
    }",True,True,This method sets the text color to be used for the legend labels. The color is passed as a parameter and assigned to the mTextColor variable.,False,"This code defines a method called ""setTextColor"" that sets the text color for legend labels. The method takes an integer parameter representing the color and assigns it to the variable ""mTextColor"". It is recommended to use the getResources().getColor(...) method when using a color from resources."
54,getTextColor(),get text color returns the text color that is set for the legend labels return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+computeLegend(ChartData<?>,Legend) com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mTextColor,164,8,1,"/** 
 * Returns the text color that is set for the legend labels.
 * @return
 */
","/**
     * Returns the text color that is set for the legend labels.
     * 
     * @return
     */
    public int getTextColor() {
        return mTextColor;
    }",True,True,This method returns the text color that is set for the legend labels.,False,"This code defines a method called ""getTextColor"" which returns the text color that is set for the legend labels. The method does not take any parameters and returns an integer value representing the color."
55,setEnabled(boolean),set enabled enabled set this to true if the legend should be enabled should be drawn false if not default true param enabled ,Method,,com.xxmassdeveloper.mpchartexample.AnotherBarActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.CandleStickChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.CubicLineChartActivity+onCreate(Bundle) com.xxmassdeveloper.mpchartexample.DrawChartActivity+onCreate(Bundle),,com.github.mikephil.charting.components.Legend+mEnabled,231,9,1,"/** 
 * Set this to true if the legend should be enabled (should be drawn), false if not. Default: true
 * @param enabled
 */
","/**
     * Set this to true if the legend should be enabled (should be drawn), false
     * if not. Default: true
     * 
     * @param enabled
     */
    public void setEnabled(boolean enabled) {
        mEnabled = enabled;
    }",False,False,"This method sets the value of a boolean variable called mEnabled, which determines whether the legend should be enabled or not.",False,"This code defines a method called ""setEnabled"" that takes a boolean parameter. It sets the value of a variable called ""mEnabled"" to the value of the parameter. This variable determines whether the legend should be enabled or not."
56,isEnabled(),is enabled returns true if the legend is enabled should be drawn false if not return ,Method,,"com.github.mikephil.charting.charts.BarLineChartBase+calculateOffsets() com.github.mikephil.charting.charts.HorizontalBarChart+calculateOffsets() com.github.mikephil.charting.charts.PieRadarChartBase+calculateOffsets() com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mEnabled,176,8,1,"/** 
 * Returns true if the legend is enabled (should be drawn), false if not.
 * @return
 */
","/**
     * Returns true if the legend is enabled (should be drawn), false if not.
     * 
     * @return
     */
    public boolean isEnabled() {
        return mEnabled;
    }",False,False,"This method serves to check if the legend is enabled or not, and returns a boolean value indicating its status.",False,"This code defines a method called ""isEnabled()"" that returns a boolean value indicating whether the legend should be drawn or not. The method does not take any parameters and simply returns the value of the ""mEnabled"" variable."
57,getXOffset(),get x offset returns the used offset on the x axis for drawing the axis labels this offset is applied before and after the label return ,Method,,"com.github.mikephil.charting.charts.BarLineChartBase+calculateOffsets() com.github.mikephil.charting.charts.HorizontalBarChart+calculateOffsets() com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mXOffset,229,9,1,"/** 
 * Returns the used offset on the x-axis for drawing the axis labels. This offset is applied before and after the label.
 * @return
 */
","/**
     * Returns the used offset on the x-axis for drawing the axis labels. This
     * offset is applied before and after the label.
     * 
     * @return
     */
    public float getXOffset() {
        return mXOffset;
    }",True,True,The method returns the value of the used offset on the x-axis for drawing the axis labels.,False,"The code defines a method called ""getXOffset()"" which returns the value of the variable ""mXOffset"". This variable represents the offset used for drawing axis labels on the x-axis. The method does not take any parameters and returns a float value."
58,setXOffset(float),set x offset x offset sets the used x axis offset for the labels on this axis param x offset ,Method,,,com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mXOffset,207,8,1,"/** 
 * Sets the used x-axis offset for the labels on this axis.
 * @param xOffset
 */
","/**
     * Sets the used x-axis offset for the labels on this axis.
     * 
     * @param xOffset
     */
    public void setXOffset(float xOffset) {
        mXOffset = Utils.convertDpToPixel(xOffset);
    }",True,True,This method sets the x-axis offset for the labels on the axis. It takes a float value as input and converts it to pixels using a utility method.,False,This code defines a method called setXOffset that takes a float parameter xOffset. It sets the value of mXOffset to the converted value of xOffset in pixels using a utility method called convertDpToPixel.
59,getYOffset(),get y offset returns the used offset on the x axis for drawing the axis labels this offset is applied before and after the label return ,Method,,"com.github.mikephil.charting.renderer.LegendRenderer+renderLegend(Canvas,Legend)",,com.github.mikephil.charting.components.Legend+mYOffset,229,9,1,"/** 
 * Returns the used offset on the x-axis for drawing the axis labels. This offset is applied before and after the label.
 * @return
 */
","/**
     * Returns the used offset on the x-axis for drawing the axis labels. This
     * offset is applied before and after the label.
     * 
     * @return
     */
    public float getYOffset() {
        return mYOffset;
    }",True,True,This method returns the offset used on the y-axis for drawing the axis labels. The offset is applied before and after the label.,False,The code is a method in a Java class that returns the offset used for drawing axis labels on the y-axis. The offset is applied before and after the label.
60,setYOffset(float),set y offset y offset sets the used x axis offset for the labels on this axis param x offset ,Method,,,com.github.mikephil.charting.utils.Utils+convertDpToPixel(float) com.github.mikephil.charting.utils.Utils+convertDpToPixel(float),com.github.mikephil.charting.components.Legend+mYOffset,207,8,1,"/** 
 * Sets the used x-axis offset for the labels on this axis.
 * @param xOffset
 */
","/**
     * Sets the used x-axis offset for the labels on this axis.
     * 
     * @param xOffset
     */
    public void setYOffset(float yOffset) {
        mYOffset = Utils.convertDpToPixel(yOffset);
    }",True,True,This method sets the y-axis offset for the labels on the axis. It takes a float value as the offset and converts it to pixels using a utility method.,False,"This code defines a method called setYOffset that sets the y-axis offset for the labels on an axis. The method takes a float parameter called yOffset, which represents the desired offset value. The yOffset value is converted from dp to pixels using a utility method before being assigned to the mYOffset variable."
