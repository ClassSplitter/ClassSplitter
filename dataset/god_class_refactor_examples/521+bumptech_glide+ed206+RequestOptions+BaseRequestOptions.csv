index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,UNSET,unset ,Field,,,,,36,1,26,,private static final int UNSET = -1;,True,True,,False,
2,SIZE_MULTIPLIER,size multiplier ,Field,,,,,50,1,26,,private static final int SIZE_MULTIPLIER = 1 << 1;,True,True,,False,
3,DISK_CACHE_STRATEGY,disk cache strategy ,Field,,,,,54,1,26,,private static final int DISK_CACHE_STRATEGY = 1 << 2;,True,True,,False,
4,PRIORITY,priority ,Field,,,,,43,1,26,,private static final int PRIORITY = 1 << 3;,True,True,,False,
5,ERROR_PLACEHOLDER,error placeholder ,Field,,,,,52,1,26,,private static final int ERROR_PLACEHOLDER = 1 << 4;,True,True,,False,
6,ERROR_ID,error id ,Field,,,,,43,1,26,,private static final int ERROR_ID = 1 << 5;,True,True,,False,
7,PLACEHOLDER,placeholder ,Field,,,,,46,1,26,,private static final int PLACEHOLDER = 1 << 6;,True,True,,False,
8,PLACEHOLDER_ID,placeholder id ,Field,,,,,49,1,26,,private static final int PLACEHOLDER_ID = 1 << 7;,True,True,,False,
9,IS_CACHEABLE,is cacheable ,Field,,,,,47,1,26,,private static final int IS_CACHEABLE = 1 << 8;,True,True,,False,
10,OVERRIDE,override ,Field,,,,,43,1,26,,private static final int OVERRIDE = 1 << 9;,True,True,,False,
11,SIGNATURE,signature ,Field,,,,,45,1,26,,private static final int SIGNATURE = 1 << 10;,True,True,,False,
12,TRANSFORMATION,transformation ,Field,,,,,50,1,26,,private static final int TRANSFORMATION = 1 << 11;,True,True,,False,
13,RESOURCE_CLASS,resource class ,Field,,,,,50,1,26,,private static final int RESOURCE_CLASS = 1 << 12;,True,True,,False,
14,FALLBACK,fallback ,Field,,,,,44,1,26,,private static final int FALLBACK = 1 << 13;,True,True,,False,
15,FALLBACK_ID,fallback id ,Field,,,,,47,1,26,,private static final int FALLBACK_ID = 1 << 14;,True,True,,False,
16,THEME,theme ,Field,,,,,41,1,26,,private static final int THEME = 1 << 15;,True,True,,False,
17,TRANSFORMATION_ALLOWED,transformation allowed ,Field,,,,,58,1,26,,private static final int TRANSFORMATION_ALLOWED = 1 << 16;,True,True,,False,
18,TRANSFORMATION_REQUIRED,transformation required ,Field,,,,,59,1,26,,private static final int TRANSFORMATION_REQUIRED = 1 << 17;,True,True,,False,
19,USE_UNLIMITED_SOURCE_GENERATORS_POOL,use unlimited source generators pool ,Field,,,,,72,1,26,,private static final int USE_UNLIMITED_SOURCE_GENERATORS_POOL = 1 << 18;,True,True,,False,
20,ONLY_RETRIEVE_FROM_CACHE,only retrieve from cache ,Field,,,,,60,1,26,,private static final int ONLY_RETRIEVE_FROM_CACHE = 1 << 19;,True,True,,False,
21,USE_ANIMATION_POOL,use animation pool ,Field,,,,,54,1,26,,private static final int USE_ANIMATION_POOL = 1 << 20;,True,True,,False,
22,skipMemoryCacheTrueOptions,skip memory cache true options ,Field,,,,,69,2,10,,"@Nullable
  private static RequestOptions skipMemoryCacheTrueOptions;",False,False,,False,
23,skipMemoryCacheFalseOptions,skip memory cache false options ,Field,,,,,70,2,10,,"@Nullable
  private static RequestOptions skipMemoryCacheFalseOptions;",False,False,,False,
24,fitCenterOptions,fit center options ,Field,,,,,59,2,10,,"@Nullable
  private static RequestOptions fitCenterOptions;",False,False,,False,
25,centerInsideOptions,center inside options ,Field,,,,,62,2,10,,"@Nullable
  private static RequestOptions centerInsideOptions;",False,False,,False,
26,centerCropOptions,center crop options ,Field,,,,,60,2,10,,"@Nullable
  private static RequestOptions centerCropOptions;",False,False,,False,
27,circleCropOptions,circle crop options ,Field,,,,,60,2,10,,"@Nullable
  private static RequestOptions circleCropOptions;",False,False,,False,
28,noTransformOptions,no transform options ,Field,,,,,61,2,10,,"@Nullable
  private static RequestOptions noTransformOptions;",False,False,,False,
29,noAnimationOptions,no animation options ,Field,,,,,61,2,10,,"@Nullable
  private static RequestOptions noAnimationOptions;",False,False,,False,
30,fields,fields ,Field,,,,,19,1,2,,private int fields;,True,True,,False,
31,sizeMultiplier,size multiplier ,Field,sizeMultiplier(float),,,,34,1,2,,private float sizeMultiplier = 1f;,True,True,,False,
32,diskCacheStrategy,disk cache strategy ,Field,diskCacheStrategy(DiskCacheStrategy),,,,85,2,2,,"@NonNull
  private DiskCacheStrategy diskCacheStrategy = DiskCacheStrategy.AUTOMATIC;",True,True,,False,
33,priority,priority ,Field,priority(Priority),,,,55,2,2,,"@NonNull
  private Priority priority = Priority.NORMAL;",True,True,,False,
34,errorPlaceholder,error placeholder ,Field,error(Drawable) error(int),,,,46,2,2,,"@Nullable
  private Drawable errorPlaceholder;",True,True,,False,
35,errorId,error id ,Field,error(Drawable) error(int),,,,20,1,2,,private int errorId;,False,True,,False,
36,placeholderDrawable,placeholder drawable ,Field,placeholder(Drawable),,,,49,2,2,,"@Nullable
  private Drawable placeholderDrawable;",True,True,,False,
37,placeholderId,placeholder id ,Field,placeholder(int),,,,26,1,2,,private int placeholderId;,True,True,,False,
38,isCacheable,is cacheable ,Field,skipMemoryCache(boolean),,,,35,1,2,,private boolean isCacheable = true;,True,True,,False,
39,overrideHeight,override height ,Field,"override(int,int)",,,,50,1,2,,private int overrideHeight = RequestOptions.UNSET;,True,True,,False,
40,overrideWidth,override width ,Field,"override(int,int)",,,,49,1,2,,private int overrideWidth = RequestOptions.UNSET;,True,True,,False,
41,signature,signature ,Field,signature(Key),,,,59,2,2,,"@NonNull
  private Key signature = EmptySignature.obtain();",True,True,,False,
42,isTransformationRequired,is transformation required ,Field,,,,,41,1,2,,private boolean isTransformationRequired;,True,True,,False,
43,isTransformationAllowed,is transformation allowed ,Field,,,,,47,1,2,,private boolean isTransformationAllowed = true;,True,True,,False,
44,fallbackDrawable,fallback drawable ,Field,fallback(Drawable),,,,46,2,2,,"@Nullable
  private Drawable fallbackDrawable;",True,True,,False,
45,fallbackId,fallback id ,Field,fallback(int),,,,23,1,2,,private int fallbackId;,True,True,,False,
46,options,options ,Field,,,,,51,2,2,,"@NonNull
  private Options options = new Options();",True,True,,False,
47,transformations,transformations ,Field,,,,,101,2,2,,"@NonNull
  private Map<Class<?>, Transformation<?>> transformations = new CachedHashCodeArrayMap<>();",True,True,,False,
48,resourceClass,resource class ,Field,decode(Class<?>),,,,57,2,2,,"@NonNull
  private Class<?> resourceClass = Object.class;",True,True,,False,
49,isLocked,is locked ,Field,,,,,25,1,2,,private boolean isLocked;,True,True,,False,
50,theme,theme ,Field,theme(Resources.Theme),,,,42,2,2,,"@Nullable
  private Resources.Theme theme;",True,True,,False,
51,isAutoCloneEnabled,is auto clone enabled ,Field,,,,,35,1,2,,private boolean isAutoCloneEnabled;,True,True,,False,
52,useUnlimitedSourceGeneratorsPool,use unlimited source generators pool ,Field,useUnlimitedSourceGeneratorsPool(boolean),,,,49,1,2,,private boolean useUnlimitedSourceGeneratorsPool;,True,True,,False,
53,onlyRetrieveFromCache,only retrieve from cache ,Field,onlyRetrieveFromCache(boolean),,,,38,1,2,,private boolean onlyRetrieveFromCache;,True,True,,False,
54,isScaleOnlyOrNoTransform,is scale only or no transform ,Field,,,,,48,1,2,,private boolean isScaleOnlyOrNoTransform = true;,True,True,,False,
55,useAnimationPool,use animation pool ,Field,,,,,33,1,2,,private boolean useAnimationPool;,True,True,,False,
56,sizeMultiplierOf(float),size multiplier of size multiplier returns a link request options object with link size multiplier float set ,Method,,,com.bumptech.glide.request.RequestOptions+sizeMultiplier(float) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+sizeMultiplier(float),,348,10,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #sizeMultiplier(float)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #sizeMultiplier(float)} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions sizeMultiplierOf(
      @FloatRange(from = 0, to = 1) float sizeMultiplier) {
    return new RequestOptions().sizeMultiplier(sizeMultiplier);
  }",False,False,This method serves to create and return a RequestOptions object with the sizeMultiplier set to the specified value.,True,"This code defines a public static method called ""sizeMultiplierOf"" that takes a float value as input and returns a RequestOptions object with the sizeMultiplier set to the input value. The method is annotated with @CheckResult to indicate that the return value should be used."
57,diskCacheStrategyOf(DiskCacheStrategy),disk cache strategy of disk cache strategy returns a link request options object with link disk cache strategy disk cache strategy set ,Method,,,com.bumptech.glide.request.RequestOptions+diskCacheStrategy(DiskCacheStrategy) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+diskCacheStrategy(DiskCacheStrategy),,309,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #diskCacheStrategy(DiskCacheStrategy)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #diskCacheStrategy(DiskCacheStrategy)} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions diskCacheStrategyOf(@NonNull DiskCacheStrategy diskCacheStrategy) {
    return new RequestOptions().diskCacheStrategy(diskCacheStrategy);
  }",False,False,This method returns a RequestOptions object with the disk cache strategy set based on the input DiskCacheStrategy.,True,"The given code is a method named ""diskCacheStrategyOf"" that returns a RequestOptions object with the disk cache strategy set. It takes a DiskCacheStrategy parameter and creates a new RequestOptions object with the specified disk cache strategy."
58,priorityOf(Priority),priority of priority returns a link request options object with link priority priority set ,Method,,,com.bumptech.glide.request.RequestOptions+priority(Priority) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+priority(Priority),,297,9,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #priority(Priority)}} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #priority(Priority)}} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions priorityOf(@NonNull Priority priority) {
    return new RequestOptions().priority(priority);
  }",False,False,This method serves to create and return a RequestOptions object with a specified priority set.,True,The code defines a method called `priorityOf` that returns a new `RequestOptions` object with the priority set to the provided value. The method is part of a public API and is annotated with `@NonNull` and `@CheckResult` to indicate its behavior and usage.
59,placeholderOf(Drawable),placeholder of placeholder returns a link request options object with link placeholder drawable set ,Method,,,com.bumptech.glide.request.RequestOptions+placeholder(Drawable) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+placeholder(Drawable),,262,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #placeholder(Drawable)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #placeholder(Drawable)} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions placeholderOf(@Nullable Drawable placeholder) {
    return new RequestOptions().placeholder(placeholder);
  }",False,False,This method returns a RequestOptions object with a specified placeholder Drawable set.,True,"The code defines a method called ""placeholderOf"" that returns a RequestOptions object with a specified Drawable set as a placeholder. This method is used to create a RequestOptions object with a placeholder for loading images asynchronously."
60,placeholderOf(int),placeholder of placeholder id returns a link request options object with link placeholder int set ,Method,,,com.bumptech.glide.request.RequestOptions+placeholder(int) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+placeholder(int),,259,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #placeholder(int)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #placeholder(int)} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions placeholderOf(@DrawableRes int placeholderId) {
    return new RequestOptions().placeholder(placeholderId);
  }",False,False,"This method returns a RequestOptions object with a placeholder image set, based on the provided placeholderId.",True,The code defines a method called `placeholderOf` that returns a `RequestOptions` object with a placeholder image set. The method takes an integer parameter representing the resource ID of the placeholder image. The returned `RequestOptions` object can be used to customize image loading requests.
61,errorOf(Drawable),error of error drawable returns a link request options object with link error drawable set ,Method,,,com.bumptech.glide.request.RequestOptions+error(Drawable) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+error(Drawable),,248,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #error(Drawable)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #error(Drawable)} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions errorOf(@Nullable Drawable errorDrawable) {
    return new RequestOptions().error(errorDrawable);
  }",False,False,This method returns a RequestOptions object with the errorDrawable set as the error image.,True,"The code defines a static method called `errorOf` that returns a new `RequestOptions` object with the provided `errorDrawable` set as the error image. The method is annotated with `@NonNull` and `@CheckResult`, indicating that it cannot return null and the return value should be used."
62,errorOf(int),error of error id returns a link request options object with link error int set ,Method,,,com.bumptech.glide.request.RequestOptions+error(int) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+error(int),,230,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #error(int)}} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #error(int)}} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions errorOf(@DrawableRes int errorId) {
    return new RequestOptions().error(errorId);
  }",False,False,This method returns a RequestOptions object with the error image set to the provided errorId.,True,"The code defines a static method called ""errorOf"" that returns a RequestOptions object with the error image set to the provided drawable resource ID. The method is annotated with @NonNull and @CheckResult to indicate that it cannot return null and the return value should be used."
63,skipMemoryCacheOf(boolean),skip memory cache of skip memory cache returns a link request options object with link skip memory cache boolean set ,Method,,,com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+skipMemoryCache(boolean) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+skipMemoryCache(boolean) com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+skipMemoryCache(boolean) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+skipMemoryCache(boolean) com.bumptech.glide.request.RequestOptions+autoClone(),com.bumptech.glide.request.RequestOptions+skipMemoryCacheTrueOptions com.bumptech.glide.request.RequestOptions+skipMemoryCacheTrueOptions com.bumptech.glide.request.RequestOptions+skipMemoryCacheTrueOptions com.bumptech.glide.request.RequestOptions+skipMemoryCacheFalseOptions com.bumptech.glide.request.RequestOptions+skipMemoryCacheFalseOptions com.bumptech.glide.request.RequestOptions+skipMemoryCacheFalseOptions,634,18,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #skipMemoryCache(boolean)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #skipMemoryCache(boolean)} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions skipMemoryCacheOf(boolean skipMemoryCache) {
    if (skipMemoryCache) {
      if (skipMemoryCacheTrueOptions == null) {
        skipMemoryCacheTrueOptions = new RequestOptions().skipMemoryCache(true).autoClone();
      }
      return skipMemoryCacheTrueOptions;
    } else {
      if (skipMemoryCacheFalseOptions == null) {
        skipMemoryCacheFalseOptions = new RequestOptions().skipMemoryCache(false).autoClone();
      }
      return skipMemoryCacheFalseOptions;
    }
  }",False,False,"This method returns a RequestOptions object with the skipMemoryCache value set based on the input parameter. If skipMemoryCache is true, it returns an object with skipMemoryCache set to true. If skipMemoryCache is false, it returns an object with skipMemoryCache set to false.",True,This code defines a method called `skipMemoryCacheOf` that returns a `RequestOptions` object. The method takes a boolean parameter `skipMemoryCache` and sets the `skipMemoryCache` property of the `RequestOptions` object accordingly. The method uses caching to optimize memory usage when loading images.
64,"overrideOf(int,int)",override of width height returns a link request options object with link override int int set ,Method,overrideOf(int),,"com.bumptech.glide.request.RequestOptions+override(int,int) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+override(int,int)",,350,11,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #override(int,int)}} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #override(int, int)}} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions overrideOf(
      @IntRange(from = 0) int width,
      @IntRange(from = 0) int height) {
    return new RequestOptions().override(width, height);
  }",False,False,This method serves to create and return a RequestOptions object with the override width and height set.,True,"The code defines a public static method called `overrideOf` that returns a `RequestOptions` object with the `override` method set. This method takes two integer parameters for width and height, and creates a new `RequestOptions` object with the specified width and height values."
65,overrideOf(int),override of size returns a link request options with link override int int set where both the width andheight are the given size ,Method,,,"com.bumptech.glide.request.RequestOptions+overrideOf(int,int) com.bumptech.glide.request.RequestOptions+overrideOf(int,int)",,330,10,9,"/** 
 * Returns a  {@link RequestOptions} with {@link #override(int,int)} set where both the width andheight are the given size.
 */
","/**
   * Returns a {@link RequestOptions} with {@link #override(int, int)} set where both the width and
   * height are the given size.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions overrideOf(@IntRange(from = 0) int size) {
    return overrideOf(size, size);
  }",False,False,This method returns a RequestOptions object with the override method set to the given size for both width and height.,True,This code defines a method called `overrideOf` that returns a `RequestOptions` object. The method takes an integer size as a parameter and sets both the width and height of the `RequestOptions` to the given size.
66,signatureOf(Key),signature of signature returns a link request options object with link signature set ,Method,,,com.bumptech.glide.request.RequestOptions+signature(Key) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+signature(Key),,236,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #signature} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #signature} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions signatureOf(@NonNull Key signature) {
    return new RequestOptions().signature(signature);
  }",False,False,This method returns a RequestOptions object with the signature set.,True,The code defines a static method called `signatureOf` that returns a new `RequestOptions` object with a specified signature. The method takes a `Key` object as a parameter and sets it as the signature for the `RequestOptions` object. The method is annotated with `@NonNull` and `@CheckResult` to indicate that it cannot return null and the return value should be used.
67,fitCenterTransform(),fit center transform returns a link request options object with link fit center set ,Method,,,com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+fitCenter() com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+fitCenter() com.bumptech.glide.request.RequestOptions+autoClone(),com.bumptech.glide.request.RequestOptions+fitCenterOptions com.bumptech.glide.request.RequestOptions+fitCenterOptions com.bumptech.glide.request.RequestOptions+fitCenterOptions,333,13,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #fitCenter()} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #fitCenter()} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions fitCenterTransform() {
    if (fitCenterOptions == null) {
      fitCenterOptions = new RequestOptions()
          .fitCenter()
          .autoClone();
    }
    return fitCenterOptions;
  }",False,False,"This method returns a RequestOptions object with fitCenter() set. It checks if fitCenterOptions is null, and if so, creates a new RequestOptions object with fitCenter() and autoClone() set. It then returns fitCenterOptions.",True,"This code defines a method named `fitCenterTransform()` that returns a `RequestOptions` object with the `fitCenter()` transformation set. The method checks if the `fitCenterOptions` object is null, and if so, it creates a new `RequestOptions` object with the `fitCenter()` transformation and auto cloning enabled. The method then returns the `fitCenterOptions` object."
68,centerInsideTransform(),center inside transform returns a link request options object with link center inside set ,Method,,,com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+centerInside() com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+centerInside() com.bumptech.glide.request.RequestOptions+autoClone(),com.bumptech.glide.request.RequestOptions+centerInsideOptions com.bumptech.glide.request.RequestOptions+centerInsideOptions com.bumptech.glide.request.RequestOptions+centerInsideOptions,409,14,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #centerInside()} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #centerInside()} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions centerInsideTransform() {
    if (centerInsideOptions == null) {
      centerInsideOptions = new RequestOptions()
              .centerInside()
              .autoClone();
    }
    return centerInsideOptions;
  }",False,False,This method returns a RequestOptions object with centerInside() set. It is a public API method that is used to create a RequestOptions object for centering an image inside an ImageView.,True,The code defines a method called `centerInsideTransform()` that returns a `RequestOptions` object with the `centerInside()` transformation set. This method ensures that the `centerInsideOptions` object is initialized only once and then reused for subsequent calls.
69,centerCropTransform(),center crop transform returns a link request options object with link center crop set ,Method,,,com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+centerCrop() com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+centerCrop() com.bumptech.glide.request.RequestOptions+autoClone(),com.bumptech.glide.request.RequestOptions+centerCropOptions com.bumptech.glide.request.RequestOptions+centerCropOptions com.bumptech.glide.request.RequestOptions+centerCropOptions,389,14,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #centerCrop()} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #centerCrop()} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions centerCropTransform() {
    if (centerCropOptions == null) {
      centerCropOptions = new RequestOptions()
          .centerCrop()
          .autoClone();
    }
    return centerCropOptions;
  }",False,False,This method returns a RequestOptions object with centerCrop() set. It is a public API method that is used to apply the center crop transformation to an image.,True,"This code defines a method called `centerCropTransform()` that returns a `RequestOptions` object with the `centerCrop()` transformation set. The method checks if the `centerCropOptions` object is null, and if so, it creates a new `RequestOptions` object with the `centerCrop()` transformation and auto cloning enabled. The method then returns the `centerCropOptions` object."
70,circleCropTransform(),circle crop transform returns a link request options object with link request options circle crop set ,Method,,,com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+circleCrop() com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+circleCrop() com.bumptech.glide.request.RequestOptions+autoClone(),com.bumptech.glide.request.RequestOptions+circleCropOptions com.bumptech.glide.request.RequestOptions+circleCropOptions com.bumptech.glide.request.RequestOptions+circleCropOptions,403,14,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link RequestOptions#circleCrop()} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link RequestOptions#circleCrop()} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions circleCropTransform() {
    if (circleCropOptions == null) {
      circleCropOptions = new RequestOptions()
          .circleCrop()
          .autoClone();
    }
    return circleCropOptions;
  }",False,False,This method returns a RequestOptions object with circleCrop() set. It is a public API method that applies a circular crop transformation to an image.,True,"This code defines a method called `circleCropTransform()` that returns a `RequestOptions` object with the `circleCrop()` transformation set. The method checks if the `circleCropOptions` object is null, and if so, it creates a new `RequestOptions` object with the `circleCrop()` transformation and auto cloning enabled. The method then returns the `circleCropOptions` object."
71,bitmapTransform(Transformation<Bitmap>),bitmap transform transformation returns a link request options object with link transform transformation set ,Method,,,com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>),,335,9,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #transform(Transformation)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #transform(Transformation)} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions bitmapTransform(@NonNull Transformation<Bitmap> transformation) {
    return new RequestOptions().transform(transformation);
  }",False,False,This method returns a RequestOptions object with a specified transformation set.,True,"The code defines a public static method called `bitmapTransform` that takes a `Transformation` object as a parameter and returns a `RequestOptions` object. The method sets the transformation for the `RequestOptions` object, which can be used to apply transformations to bitmaps."
72,noTransformation(),no transformation returns a link request options object with link dont transform set ,Method,,,com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+dontTransform() com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+dontTransform() com.bumptech.glide.request.RequestOptions+autoClone(),com.bumptech.glide.request.RequestOptions+noTransformOptions com.bumptech.glide.request.RequestOptions+noTransformOptions com.bumptech.glide.request.RequestOptions+noTransformOptions,381,14,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #dontTransform()} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #dontTransform()} set.
   */
  @SuppressWarnings(""WeakerAccess"")
  @NonNull
  @CheckResult
  public static RequestOptions noTransformation() {
    if (noTransformOptions == null) {
      noTransformOptions = new RequestOptions()
          .dontTransform()
          .autoClone();
    }
    return noTransformOptions;
  }",False,False,"This method returns a RequestOptions object with the dontTransform() method set. It is annotated with NonNull and CheckResult, and is accessible from outside the class.",True,"This code defines a method called `noTransformation()` that returns a `RequestOptions` object with the `dontTransform()` method called on it. It also sets the `autoClone()` method on the `RequestOptions` object. The method is annotated with `@NonNull` and `@CheckResult`, and a static instance of `RequestOptions` is lazily initialized and returned."
73,"option(Option<T>,T)",option option value returns a link request options object with the given link option set via link set option object ,Method,,,"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+set(Option<T>,T)",,298,9,9,"/** 
 * Returns a  {@link RequestOptions} object with the given {@link Option} set via{@link #set(Option,Object)}.
 */
","/**
   * Returns a {@link RequestOptions} object with the given {@link Option} set via
   * {@link #set(Option, Object)}.
   */
  @NonNull
  @CheckResult
  public static <T> RequestOptions option(@NonNull Option<T> option, @NonNull T value) {
    return new RequestOptions().set(option, value);
  }",False,False,This method serves to create and return a RequestOptions object with a given Option set via the set() method.,True,"This code defines a method called ""option"" that returns a RequestOptions object with a given Option set. The method takes an Option object and a value as parameters and uses the set method to set the value for the given option. The method is annotated with @NonNull and @CheckResult to indicate that it cannot return null and the return value should be checked."
74,decodeTypeOf(Class<?>),decode type of resource class returns a link request options object with link decode class set ,Method,,,com.bumptech.glide.request.RequestOptions+decode(Class<?>) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+decode(Class<?>),,251,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #decode(Class)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #decode(Class)} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions decodeTypeOf(@NonNull Class<?> resourceClass) {
    return new RequestOptions().decode(resourceClass);
  }",False,False,This method returns a RequestOptions object with the decode method set to the provided resourceClass.,True,"This code defines a static method called `decodeTypeOf` that returns a `RequestOptions` object. The method takes a `Class` parameter and sets the `decode` method of the `RequestOptions` object with the provided `resourceClass`. The method is annotated with `@NonNull` and `@CheckResult`, indicating that it cannot return null and the return value should be used."
75,formatOf(DecodeFormat),format of format returns a link request options object with link format decode format set ,Method,,,com.bumptech.glide.request.RequestOptions+format(DecodeFormat) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+format(DecodeFormat),,294,9,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #format(DecodeFormat)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #format(DecodeFormat)} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions formatOf(@NonNull DecodeFormat format) {
    return new RequestOptions().format(format);
  }",False,False,This method returns a RequestOptions object with the format set to the specified DecodeFormat.,True,"This code defines a public static method called ""formatOf"" that returns a RequestOptions object with the specified DecodeFormat set. The method takes a DecodeFormat parameter and creates a new RequestOptions object with the format set using the format() method."
76,frameOf(long),frame of frame time micros returns a link request options object with link frame long set ,Method,,,com.bumptech.glide.request.RequestOptions+frame(long) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+frame(long),,304,9,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #frame(long)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #frame(long)} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions frameOf(@IntRange(from = 0) long frameTimeMicros) {
    return new RequestOptions().frame(frameTimeMicros);
  }",False,False,This method returns a RequestOptions object with the frame time set.,True,The code defines a public static method called `frameOf` that returns a `RequestOptions` object with the `frame` property set to the specified `frameTimeMicros` value. The method is annotated with `@CheckResult` to indicate that the return value should be used.
77,downsampleOf(DownsampleStrategy),downsample of strategy returns a link request options object with link downsample downsample strategy set ,Method,,,com.bumptech.glide.request.RequestOptions+downsample(DownsampleStrategy) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+downsample(DownsampleStrategy),,322,9,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #downsample(DownsampleStrategy)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #downsample(DownsampleStrategy)} set.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions downsampleOf(@NonNull DownsampleStrategy strategy) {
    return new RequestOptions().downsample(strategy);
  }",False,False,This method returns a RequestOptions object with the downsample strategy set.,True,"The code defines a method called ""downsampleOf"" that returns a RequestOptions object with the downsample strategy set. The method takes a DownsampleStrategy parameter and creates a new RequestOptions object with the specified strategy."
78,timeoutOf(int),timeout of timeout returns a link request options object with link timeout int set ,Method,,,com.bumptech.glide.request.RequestOptions+timeout(int) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+timeout(int),,242,8,9,"/** 
 * Returns a  {@link RequestOptions} object with {@link #timeout(int)} set.
 */
","/**
   * Returns a {@link RequestOptions} object with {@link #timeout(int)} set.
   */
  @NonNull
  @CheckResult
  public static RequestOptions timeoutOf(@IntRange(from = 0) int timeout) {
    return new RequestOptions().timeout(timeout);
  }",False,False,This method returns a RequestOptions object with the timeout value set.,True,The code defines a static method `timeoutOf` that returns a new `RequestOptions` object with the timeout value set. The timeout value is passed as a parameter to the method. The method is annotated with `@NonNull` and `@CheckResult` to indicate that it cannot return null and the return value should be checked.
79,encodeQualityOf(int),encode quality of quality returns a link com bumptech glide request request options with link encode quality int called with the given quality ,Method,,,com.bumptech.glide.request.RequestOptions+encodeQuality(int) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+encodeQuality(int),,371,10,9,"/** 
 * Returns a  {@link com.bumptech.glide.request.RequestOptions} with {@link #encodeQuality(int)} called with the given quality.
 */
","/**
   * Returns a {@link com.bumptech.glide.request.RequestOptions} with {@link
   * #encodeQuality(int)} called with the given quality.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions encodeQualityOf(@IntRange(from = 0, to = 100) int quality) {
    return new RequestOptions().encodeQuality(quality);
  }",False,False,This method returns a RequestOptions object with the encodeQuality method called with the given quality.,True,"This code is a public API method that returns a RequestOptions object with the encodeQuality method called, passing in the given quality parameter. The quality parameter should be an integer between 0 and 100."
80,encodeFormatOf(Bitmap.CompressFormat),encode format of format returns a link com bumptech glide request request options with link encode format android graphics bitmap compress format called with the given format ,Method,,,com.bumptech.glide.request.RequestOptions+encodeFormat(CompressFormat) com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+encodeFormat(CompressFormat),,397,10,9,"/** 
 * Returns a  {@link com.bumptech.glide.request.RequestOptions} with {@link #encodeFormat(android.graphics.Bitmap.CompressFormat)} called with the given format.
 */
","/**
   * Returns a {@link com.bumptech.glide.request.RequestOptions} with {@link
   * #encodeFormat(android.graphics.Bitmap.CompressFormat)} called with the given format.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions encodeFormatOf(@NonNull Bitmap.CompressFormat format) {
    return new RequestOptions().encodeFormat(format);
  }",False,False,This method returns a RequestOptions object with the encodeFormat method called with the given Bitmap.CompressFormat format.,True,This code defines a public static method called `encodeFormatOf` that takes a `Bitmap.CompressFormat` parameter and returns a `RequestOptions` object. The method creates a new `RequestOptions` instance and calls the `encodeFormat` method on it with the given format.
81,noAnimation(),no animation returns a new link com bumptech glide request request options with link dont animate called ,Method,,,com.bumptech.glide.request.RequestOptions+autoClone() com.bumptech.glide.request.RequestOptions+dontAnimate() com.bumptech.glide.request.RequestOptions+RequestOptions() com.bumptech.glide.request.RequestOptions+dontAnimate() com.bumptech.glide.request.RequestOptions+autoClone(),com.bumptech.glide.request.RequestOptions+noAnimationOptions com.bumptech.glide.request.RequestOptions+noAnimationOptions com.bumptech.glide.request.RequestOptions+noAnimationOptions,418,15,9,"/** 
 * Returns a new  {@link com.bumptech.glide.request.RequestOptions} with {@link #dontAnimate()}called.
 */
","/**
   * Returns a new {@link com.bumptech.glide.request.RequestOptions} with {@link #dontAnimate()}
   * called.
   */
  @SuppressWarnings(""WeakerAccess"") // Public API
  @NonNull
  @CheckResult
  public static RequestOptions noAnimation() {
    if (noAnimationOptions == null) {
      noAnimationOptions = new RequestOptions()
          .dontAnimate()
          .autoClone();
    }
    return noAnimationOptions;
  }",False,False,This method returns a new RequestOptions object with the dontAnimate() method called. It is a public API method that disables animation for Glide image loading library.,True,"The code defines a method called ""noAnimation()"" that returns a new RequestOptions object with the ""dontAnimate()"" method called. This method is used to create RequestOptions with a specific configuration for disabling animation. The method also utilizes a static variable to cache the RequestOptions object for efficiency."
82,"isSet(int,int)",is set fields flag ,Method,apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) apply(RequestOptions) isSet(int),,,,89,3,10,,"private static boolean isSet(int fields, int flag) {
    return (fields & flag) != 0;
  }",True,True,"This method checks if a specific flag is set in a given set of fields. It returns true if the flag is set, and false otherwise.",False,"The code defines a private static method named ""isSet"" that takes two integer parameters. It checks if a specific flag is set in a given set of fields by performing a bitwise AND operation. The method returns true if the flag is set, and false otherwise."
83,sizeMultiplier(float),size multiplier size multiplier applies a multiplier to the link com bumptech glide request target target s size before loading the resource useful for loading thumbnails or trying to avoid loading huge resources particularly link bitmap s on devices with overly dense screens param size multiplier the multiplier to apply to the link com bumptech glide request target target s dimensions when loading the resource return this request builder ,Method,sizeMultiplierOf(float) sizeMultiplier(float),"com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode()",com.bumptech.glide.request.RequestOptions+sizeMultiplier(float) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+sizeMultiplier(float) java.lang.IllegalArgumentException+IllegalArgumentException(String) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+sizeMultiplier com.bumptech.glide.request.RequestOptions+sizeMultiplier com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+SIZE_MULTIPLIER,983,25,1,"/** 
 * Applies a multiplier to the  {@link com.bumptech.glide.request.target.Target}'s size before loading the resource. Useful for loading thumbnails or trying to avoid loading huge resources (particularly  {@link Bitmap}s on devices with overly dense screens.
 * @param sizeMultiplier The multiplier to apply to the{@link com.bumptech.glide.request.target.Target}'s dimensions when loading the resource.
 * @return This request builder.
 */
","/**
   * Applies a multiplier to the {@link com.bumptech.glide.request.target.Target}'s size before
   * loading the resource. Useful for loading thumbnails or trying to avoid loading huge resources
   * (particularly {@link Bitmap}s on devices with overly dense screens.
   *
   * @param sizeMultiplier The multiplier to apply to the
   *                       {@link com.bumptech.glide.request.target.Target}'s dimensions when
   *                       loading the resource.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions sizeMultiplier(@FloatRange(from = 0, to = 1) float sizeMultiplier) {
    if (isAutoCloneEnabled) {
      return clone().sizeMultiplier(sizeMultiplier);
    }

    if (sizeMultiplier < 0f || sizeMultiplier > 1f) {
      throw new IllegalArgumentException(""sizeMultiplier must be between 0 and 1"");
    }
    this.sizeMultiplier = sizeMultiplier;
    fields |= SIZE_MULTIPLIER;

    return selfOrThrowIfLocked();
  }",True,True,"This method sets a multiplier to the size of the target before loading a resource. It is useful for loading thumbnails or avoiding loading large resources, especially on devices with high screen density. The method returns the request builder.",False,"This method sets a multiplier to be applied to the dimensions of a target before loading a resource. It is useful for loading thumbnails or avoiding loading large resources, such as bitmaps on devices with high screen density. The method returns the request builder itself."
84,useUnlimitedSourceGeneratorsPool(boolean),use unlimited source generators pool flag if set to code true uses a cached unlimited link java util concurrent executor to runthe request this method should only be used when a glide load is started recursively on one of glide s threads as part of another request using this method in other scenarios can lead to excessive memory usage and oo ms and or a significant decrease in performance across an application if both this method and link use animation pool boolean are set this method will bepreferred and link use animation pool boolean will be ignored ,Method,useUnlimitedSourceGeneratorsPool(boolean),com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool(boolean) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool(boolean) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+USE_UNLIMITED_SOURCE_GENERATORS_POOL,948,24,1,"/** 
 * If set to  {@code true}, uses a cached unlimited  {@link java.util.concurrent.Executor} to runthe request. <p>This method should <em>ONLY</em> be used when a Glide load is started recursively on one of Glide's threads as part of another request. Using this method in other scenarios can lead to excessive memory usage and OOMs and/or a significant decrease in performance across an application. <p>If both this method and  {@link #useAnimationPool(boolean)} are set, this method will bepreferred and  {@link #useAnimationPool(boolean)} will be ignored.
 */
","/**
   * If set to {@code true}, uses a cached unlimited {@link java.util.concurrent.Executor} to run
   * the request.
   *
   * <p>This method should <em>ONLY</em> be used when a Glide load is started recursively on one
   * of Glide's threads as part of another request. Using this method in other scenarios can lead
   * to excessive memory usage and OOMs and/or a significant decrease in performance across an
   * application.
   *
   * <p>If both this method and {@link #useAnimationPool(boolean)} are set, this method will be
   * preferred and {@link #useAnimationPool(boolean)} will be ignored.
   */
  @NonNull
  @CheckResult
  public RequestOptions useUnlimitedSourceGeneratorsPool(boolean flag) {
    if (isAutoCloneEnabled) {
      return clone().useUnlimitedSourceGeneratorsPool(flag);
    }

    this.useUnlimitedSourceGeneratorsPool = flag;
    fields |= USE_UNLIMITED_SOURCE_GENERATORS_POOL;

    return selfOrThrowIfLocked();
  }",True,True,"This method is used to set whether to use a cached unlimited executor to run the request in Glide. It should only be used when a Glide load is started recursively on one of Glide's threads as part of another request. Using this method in other scenarios can lead to excessive memory usage and decreased performance. If both this method and the useAnimationPool method are set, this method will be preferred.",False,"The method `useUnlimitedSourceGeneratorsPool` is used to set a flag that determines whether a cached unlimited executor should be used to run a Glide request. It is recommended to only use this method when starting a recursive Glide load on one of Glide's threads as part of another request, as using it in other scenarios can lead to excessive memory usage and decreased performance."
85,useAnimationPool(boolean),use animation pool flag if set to code true uses a special link java util concurrent executor that is usedexclusively for decoding frames of animated resources like gi fs the animation executor disallows network operations and must not be used for loads that may load remote data the animation executor has fewer threads available to it than glide s normal executors and is only useful as a way of avoiding blocking on longer and more expensive reads for critical requests like those in an animating gif if both link use unlimited source generators pool boolean and this method are set link use unlimited source generators pool boolean will be preferred and this method will beignored ,Method,useAnimationPool(boolean),,com.bumptech.glide.request.RequestOptions+useAnimationPool(boolean) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+useAnimationPool(boolean) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+useAnimationPool com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+USE_ANIMATION_POOL,1014,25,1,"/** 
 * If set to  {@code true}, uses a special  {@link java.util.concurrent.Executor} that is usedexclusively for decoding frames of animated resources, like GIFs. <p>The animation executor disallows network operations and must not be used for loads that may load remote data. The animation executor has fewer threads available to it than Glide's normal executors and is only useful as a way of avoiding blocking on longer and more expensive reads for critical requests like those in an animating GIF. <p>If both  {@link #useUnlimitedSourceGeneratorsPool(boolean)} and this method are set,{@link #useUnlimitedSourceGeneratorsPool(boolean)} will be preferred and this method will beignored.
 */
","/**
   * If set to {@code true}, uses a special {@link java.util.concurrent.Executor} that is used
   * exclusively for decoding frames of animated resources, like GIFs.
   *
   * <p>The animation executor disallows network operations and must not be used for loads that
   * may load remote data. The animation executor has fewer threads available to it than Glide's
   * normal executors and is only useful as a way of avoiding blocking on longer and more expensive
   * reads for critical requests like those in an animating GIF.
   *
   * <p>If both {@link #useUnlimitedSourceGeneratorsPool(boolean)} and this method are set,
   * {@link #useUnlimitedSourceGeneratorsPool(boolean)} will be preferred and this method will be
   * ignored.
   */
  @NonNull
  @CheckResult
  public RequestOptions useAnimationPool(boolean flag) {
    if (isAutoCloneEnabled) {
      return clone().useAnimationPool(flag);
    }

    useAnimationPool = flag;
    fields |= USE_ANIMATION_POOL;

    return selfOrThrowIfLocked();
  }",True,True,"The function of this method is to set whether to use a special executor for decoding frames of animated resources, such as GIFs. This executor is designed to avoid blocking on longer and more expensive reads for critical requests in an animating GIF.",False,"The `useAnimationPool` method in this code allows for the use of a special executor exclusively for decoding frames of animated resources, such as GIFs. This executor is designed to avoid blocking on longer and more expensive reads for critical requests, but it disallows network operations and has fewer available threads compared to Glide's normal executors."
86,onlyRetrieveFromCache(boolean),only retrieve from cache flag if set to true will only load an item if found in the cache and will not fetch from source ,Method,onlyRetrieveFromCache(boolean),com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache(boolean) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache(boolean) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ONLY_RETRIEVE_FROM_CACHE,406,16,1,"/** 
 * If set to true, will only load an item if found in the cache, and will not fetch from source.
 */
","/**
   *
   * If set to true, will only load an item if found in the cache, and will not fetch from source.
   */
  @NonNull
  @CheckResult
  public RequestOptions onlyRetrieveFromCache(boolean flag) {
    if (isAutoCloneEnabled) {
      return clone().onlyRetrieveFromCache(flag);
    }

    this.onlyRetrieveFromCache = flag;
    fields |= ONLY_RETRIEVE_FROM_CACHE;

    return selfOrThrowIfLocked();
  }",True,True,This method sets a flag to determine whether an item should be loaded only from the cache or fetched from the source. It returns a RequestOptions object.,False,"This code defines a method called `onlyRetrieveFromCache` which sets a flag to determine whether an item should be loaded from the cache or fetched from the source. If the flag is set to true, the method returns a cloned instance of the current object with the flag set, otherwise it updates the flag and returns the current object."
87,diskCacheStrategy(DiskCacheStrategy),disk cache strategy strategy sets the link disk cache strategy to use for this load defaults to link disk cache strategy automatic for most applications link disk cache strategy resource isideal applications that use the same resource multiple times in multiple sizes and are willing to trade off some speed and disk space in return for lower bandwidth usage may want to consider using link disk cache strategy data or link disk cache strategy all param strategy the strategy to use return this request builder ,Method,diskCacheStrategyOf(DiskCacheStrategy) diskCacheStrategy(DiskCacheStrategy),com.bumptech.glide.request.RequestOptionsTest+isDiskCacheStrategySet_withDiskCacheStrategyDefault_isTrue() com.bumptech.glide.request.RequestOptionsTest+isDiskCacheStrategySet_withDiskCacheStrategyNonDefault_isTrue() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+diskCacheStrategy(DiskCacheStrategy) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+diskCacheStrategy(DiskCacheStrategy) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+diskCacheStrategy com.bumptech.glide.request.RequestOptions+diskCacheStrategy com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+DISK_CACHE_STRATEGY,917,25,1,"/** 
 * Sets the  {@link DiskCacheStrategy} to use for this load.<p> Defaults to  {@link DiskCacheStrategy#AUTOMATIC}. </p> <p> For most applications  {@link DiskCacheStrategy#RESOURCE} isideal. Applications that use the same resource multiple times in multiple sizes and are willing to trade off some speed and disk space in return for lower bandwidth usage may want to consider using  {@link DiskCacheStrategy#DATA} or{@link DiskCacheStrategy#ALL}. </p>
 * @param strategy The strategy to use.
 * @return This request builder.
 */
","/**
   * Sets the {@link DiskCacheStrategy} to use for this load.
   *
   * <p> Defaults to {@link DiskCacheStrategy#AUTOMATIC}. </p>
   *
   * <p> For most applications {@link DiskCacheStrategy#RESOURCE} is
   * ideal. Applications that use the same resource multiple times in multiple sizes and are willing
   * to trade off some speed and disk space in return for lower bandwidth usage may want to consider
   * using {@link DiskCacheStrategy#DATA} or
   * {@link DiskCacheStrategy#ALL}. </p>
   *
   * @param strategy The strategy to use.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions diskCacheStrategy(@NonNull DiskCacheStrategy strategy) {
    if (isAutoCloneEnabled) {
      return clone().diskCacheStrategy(strategy);
    }
    this.diskCacheStrategy = Preconditions.checkNotNull(strategy);
    fields |= DISK_CACHE_STRATEGY;

    return selfOrThrowIfLocked();
  }",True,True,This method sets the disk cache strategy for a load. It takes a DiskCacheStrategy as a parameter and returns a RequestOptions object.,False,"This code defines a method called `diskCacheStrategy` that sets the disk cache strategy for a load. It allows the user to specify the desired strategy, such as `AUTOMATIC`, `RESOURCE`, `DATA`, or `ALL`. The method returns the request builder object."
88,priority(Priority),priority priority sets the priority for this load param priority a priority return this request builder ,Method,priorityOf(Priority) priority(Priority),com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+priority(Priority) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+priority(Priority) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+priority com.bumptech.glide.request.RequestOptions+priority com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PRIORITY,408,18,1,"/** 
 * Sets the priority for this load.
 * @param priority A priority.
 * @return This request builder.
 */
","/**
   * Sets the priority for this load.
   *
   * @param priority A priority.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions priority(@NonNull Priority priority) {
    if (isAutoCloneEnabled) {
      return clone().priority(priority);
    }

    this.priority = Preconditions.checkNotNull(priority);
    fields |= PRIORITY;

    return selfOrThrowIfLocked();
  }",True,True,"This method sets the priority for a load. It takes a priority as a parameter and returns the request builder. If auto clone is enabled, it clones the request and sets the priority. It also updates the priority field and returns the request builder.",False,"This code defines a method called ""priority"" that sets the priority for a load. It takes a priority parameter and returns the request builder. If auto clone is enabled, it clones the request builder and recursively calls the priority method. It then sets the priority, updates the fields, and returns the request builder."
89,placeholder(Drawable),placeholder drawable sets an link drawable to display while a resource is loading replaces any previous calls to this method or link placeholder int param drawable the drawable to display as a placeholder return this request builder ,Method,placeholderOf(Drawable) placeholder(Drawable),com.bumptech.glide.request.RequestOptionsTest+getPlaceholder_afterSettingPlaceholderId_returnsNul() com.bumptech.glide.request.RequestOptionsTest+getPlaceholder_afterApplyingOptionsWithPlaceholderId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getPlaceholder_afterApplyingOptionsWithPlaceholderId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getPlaceholder_afterApplyingOptionsWithPlaceholderDrawable_returnsNewDrawable() com.bumptech.glide.request.RequestOptionsTest+getPlaceholder_afterApplyingOptionsWithPlaceholderDrawable_returnsNewDrawable() com.bumptech.glide.request.RequestOptionsTest+placeholderIdFlag_afterApplyingIdViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+placeholderIdFlag_afterApplyingIdViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+getPlaceholderId_afterSettingPlaceholderDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getPlaceholderId_afterApplyingOptionsWithPlaceholderDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getPlaceholderId_afterApplyingOptionsWithPlaceholderDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getPlaceholderId_afterApplyingOptionsWithId_returnsNewId() com.bumptech.glide.request.RequestOptionsTest+placeholderFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+placeholderFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+placeholder(Drawable) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+placeholder(Drawable) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER_ID,604,23,1,"/** 
 * Sets an  {@link Drawable} to display while a resource is loading.<p>Replaces any previous calls to this method or  {@link #placeholder(int)}.
 * @param drawable The drawable to display as a placeholder.
 * @return This request builder.
 */
","/**
   * Sets an {@link Drawable} to display while a resource is loading.
   *
   * <p>Replaces any previous calls to this method or {@link #placeholder(int)}.
   *
   * @param drawable The drawable to display as a placeholder.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions placeholder(@Nullable Drawable drawable) {
    if (isAutoCloneEnabled) {
      return clone().placeholder(drawable);
    }

    this.placeholderDrawable = drawable;
    fields |= PLACEHOLDER;

    placeholderId = 0;
    fields &= ~PLACEHOLDER_ID;

    return selfOrThrowIfLocked();
  }",True,True,This method sets a drawable as a placeholder to display while a resource is loading. It replaces any previous calls to this method or the placeholder(int) method. It returns the request builder.,False,"This code defines a method called ""placeholder"" that sets a Drawable as a placeholder for a resource while it is loading. It replaces any previous calls to this method or the ""placeholder"" method. The method returns the request builder and throws an exception if the builder is locked."
90,placeholder(int),placeholder resource id sets an android resource id for a link drawable resource todisplay while a resource is loading replaces any previous calls to this method or link placeholder drawable param resource id the id of the resource to use as a placeholder return this request builder ,Method,placeholderOf(int) placeholder(int),com.bumptech.glide.request.RequestOptionsTest+getPlaceholderId_afterApplyingOptionsWithId_returnsNewId() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+placeholder(int) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+placeholder(int) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER_ID com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER,662,24,1,"/** 
 * Sets an Android resource id for a  {@link Drawable} resource todisplay while a resource is loading. <p>Replaces any previous calls to this method or  {@link #placeholder(Drawable)}
 * @param resourceId The id of the resource to use as a placeholder
 * @return This request builder.
 */
","/**
   * Sets an Android resource id for a {@link Drawable} resource to
   * display while a resource is loading.
   *
   * <p>Replaces any previous calls to this method or {@link #placeholder(Drawable)}
   *
   * @param resourceId The id of the resource to use as a placeholder
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions placeholder(@DrawableRes int resourceId) {
    if (isAutoCloneEnabled) {
      return clone().placeholder(resourceId);
    }

    this.placeholderId = resourceId;
    fields |= PLACEHOLDER_ID;

    placeholderDrawable = null;
    fields &= ~PLACEHOLDER;

    return selfOrThrowIfLocked();
  }",True,True,This method sets an Android resource id for a Drawable resource to display as a placeholder while a resource is loading. It replaces any previous calls to this method or the placeholder(Drawable) method.,False,This method sets an Android resource id for a Drawable resource to be displayed as a placeholder while the actual resource is loading. It replaces any previous calls to this method or the placeholder(Drawable) method. The method returns the request builder object.
91,fallback(Drawable),fallback drawable sets an link drawable to display if the model provided to link com bumptech glide request builder load object is code null if a fallback is not set null models will cause the error drawable to be displayed if the error drawable is not set the placeholder will be displayed replaces any previous calls to this method or link fallback int see placeholder drawable see placeholder int param drawable the drawable to display as a placeholder return this request builder ,Method,fallback(Drawable),com.bumptech.glide.request.RequestOptionsTest+getFallback_afterSettingFallbackId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getFallback_afterApplyingOptionsWithFallbackId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getFallback_afterApplyingOptionsWithFallbackId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getFallback_afterApplyingOptionsWithFallbackDrawable_returnsNewDrawable() com.bumptech.glide.request.RequestOptionsTest+fallbackFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+fallbackFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+getFallbackId_afterSettingFallbackDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getFallbackId_afterApplyingOptionsWithFallbackDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getFallbackId_afterApplyingOptionsWithFallbackDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getFallbackId_afterApplyingOptionsWithFallbackId_returnsNewFallbackId() com.bumptech.glide.request.RequestOptionsTest+getFallbackId_afterApplyingOptionsWithFallbackId_returnsNewFallbackId() com.bumptech.glide.request.RequestOptionsTest+fallbackIdFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+fallbackIdFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+fallback(Drawable) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+fallback(Drawable) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK_ID,895,30,1,"/** 
 * Sets an  {@link Drawable} to display if the model provided to{@link com.bumptech.glide.RequestBuilder#load(Object)} is {@code null}. <p> If a fallback is not set, null models will cause the error drawable to be displayed. If the error drawable is not set, the placeholder will be displayed. <p>Replaces any previous calls to this method or  {@link #fallback(int)}.
 * @see #placeholder(Drawable)
 * @see #placeholder(int)
 * @param drawable The drawable to display as a placeholder.
 * @return This request builder.
 */
","/**
   * Sets an {@link Drawable} to display if the model provided to
   * {@link com.bumptech.glide.RequestBuilder#load(Object)} is {@code null}.
   *
   * <p> If a fallback is not set, null models will cause the error drawable to be displayed. If the
   * error drawable is not set, the placeholder will be displayed.
   *
   * <p>Replaces any previous calls to this method or {@link #fallback(int)}.
   *
   * @see #placeholder(Drawable)
   * @see #placeholder(int)
   *
   * @param drawable The drawable to display as a placeholder.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions fallback(@Nullable Drawable drawable) {
    if (isAutoCloneEnabled) {
      return clone().fallback(drawable);
    }

    this.fallbackDrawable = drawable;
    fields |= FALLBACK;

    fallbackId = 0;
    fields &= ~FALLBACK_ID;

    return selfOrThrowIfLocked();
  }",True,True,This method sets a fallback drawable to display if the model provided to the load method is null. It replaces any previous calls to this method or the fallback(int) method.,False,The `fallback()` method sets a `Drawable` to be displayed if the model provided to the `load()` method is null. It replaces any previous calls to `fallback()` or `fallback(int)`. The method returns the request builder itself.
92,fallback(int),fallback resource id sets a resource to display if the model provided to link com bumptech glide request builder load object is code null if a fallback is not set null models will cause the error drawable to be displayed if the error drawable is not set the placeholder will be displayed replaces any previous calls to this method or link fallback drawable see placeholder drawable see placeholder int param resource id the id of the resource to use as a fallback return this request builder ,Method,fallback(int),com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+fallback(int) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+fallback(int) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK_ID com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK,903,30,1,"/** 
 * Sets a resource to display if the model provided to {@link com.bumptech.glide.RequestBuilder#load(Object)} is {@code null}. <p> If a fallback is not set, null models will cause the error drawable to be displayed. If the error drawable is not set, the placeholder will be displayed. <p>Replaces any previous calls to this method or  {@link #fallback(Drawable)}.
 * @see #placeholder(Drawable)
 * @see #placeholder(int)
 * @param resourceId The id of the resource to use as a fallback.
 * @return This request builder.
 */
","/**
   * Sets a resource to display if the model provided to
   * {@link com.bumptech.glide.RequestBuilder#load(Object)} is {@code null}.
   *
   * <p> If a fallback is not set, null models will cause the error drawable to be displayed. If
   * the error drawable is not set, the placeholder will be displayed.
   *
   * <p>Replaces any previous calls to this method or {@link #fallback(Drawable)}.
   *
   * @see #placeholder(Drawable)
   * @see #placeholder(int)
   *
   * @param resourceId The id of the resource to use as a fallback.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions fallback(@DrawableRes int resourceId) {
    if (isAutoCloneEnabled) {
      return clone().fallback(resourceId);
    }

    this.fallbackId = resourceId;
    fields |= FALLBACK_ID;

    fallbackDrawable = null;
    fields &= ~FALLBACK;

    return selfOrThrowIfLocked();
  }",True,True,This method sets a fallback resource to display if the model provided to the load method is null. It replaces any previous calls to this method or fallback(Drawable).,False,"The `fallback` method in this code sets a resource to be displayed if the model provided to the `load` method is null. It replaces any previous calls to this method or the `fallback` method, and returns the request builder."
93,error(Drawable),error drawable sets a link drawable to display if a load fails replaces any previous calls to this method or link error int param drawable the drawable to display return this request builder ,Method,errorOf(Drawable) error(Drawable),com.bumptech.glide.request.RequestOptionsTest+getError_afterSettingErrorId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getError_afterApplyingOptionsWithErrorId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getError_afterApplyingOptionsWithErrorId_returnsNull() com.bumptech.glide.request.RequestOptionsTest+getError_afterApplyingOptionsWithErrorDrawable_returnsNewErrorDrawable() com.bumptech.glide.request.RequestOptionsTest+getError_afterApplyingOptionsWithErrorDrawable_returnsNewErrorDrawable() com.bumptech.glide.request.RequestOptionsTest+errorFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+errorFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+getErrorId_afterSettingErrorDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getErrorId_afterApplyingOptionsWithErrorDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getErrorId_afterApplyingOptionsWithErrorDrawable_returnsZero() com.bumptech.glide.request.RequestOptionsTest+getErrorId_afterApplyingOptionsWithErrorId_returnsNewErrorId() com.bumptech.glide.request.RequestOptionsTest+getErrorId_afterApplyingOptionsWithErrorId_returnsNewErrorId() com.bumptech.glide.request.RequestOptionsTest+errorIdFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+errorIdFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.SingleRequestTest+SingleRequestBuilder.build(),com.bumptech.glide.request.RequestOptions+error(Drawable) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+error(Drawable) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_PLACEHOLDER com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_ID,551,23,1,"/** 
 * Sets a  {@link Drawable} to display if a load fails.<p>Replaces any previous calls to this method or  {@link #error(int)}
 * @param drawable The drawable to display.
 * @return This request builder.
 */
","/**
   * Sets a {@link Drawable} to display if a load fails.
   *
   * <p>Replaces any previous calls to this method or {@link #error(int)}
   *
   * @param drawable The drawable to display.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions error(@Nullable Drawable drawable) {
    if (isAutoCloneEnabled) {
      return clone().error(drawable);
    }

    this.errorPlaceholder = drawable;
    fields |= ERROR_PLACEHOLDER;

    this.errorId = 0;
    fields &= ~ERROR_ID;

    return selfOrThrowIfLocked();
  }",True,True,This method sets a drawable to display if a load fails. It replaces any previous calls to this method or the error(int) method. It returns the request builder.,False,"This code defines a method called ""error"" that sets a Drawable to display if a load fails. It replaces any previous calls to this method or the ""error"" method with an integer parameter. The method returns a RequestOptions object."
94,error(int),error resource id sets a resource to display if a load fails replaces any previous calls to this method or link error drawable param resource id the id of the resource to use as a placeholder return this request builder ,Method,errorOf(int) error(int),com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+error(int) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+error(int) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_ID com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_PLACEHOLDER,579,22,1,"/** 
 * Sets a resource to display if a load fails. <p>Replaces any previous calls to this method or  {@link #error(Drawable)}
 * @param resourceId The id of the resource to use as a placeholder.
 * @return This request builder.
 */
","/**
   * Sets a resource to display if a load fails.
   *
   * <p>Replaces any previous calls to this method or {@link #error(Drawable)}
   *
   * @param resourceId The id of the resource to use as a placeholder.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions error(@DrawableRes int resourceId) {
    if (isAutoCloneEnabled) {
      return clone().error(resourceId);
    }
    this.errorId = resourceId;
    fields |= ERROR_ID;

    this.errorPlaceholder = null;
    fields &= ~ERROR_PLACEHOLDER;

    return selfOrThrowIfLocked();
  }",True,True,This method sets a resource to display as a placeholder if a load fails. It replaces any previous calls to this method or the error() method. It returns the request builder.,False,"This code defines a method called ""error"" that sets a resource to display if a load fails. It replaces any previous calls to this method or the ""error"" method with a Drawable parameter. The method returns a RequestOptions object and throws an exception if the object is locked."
95,theme(Resources.Theme),theme theme sets the link android content res resources theme to apply when loading link drawable s for resource ids provided via link error int link placeholder int and link fallback drawable the theme is not applied in the decoder that will attempt to decode a given resource id model on glide s background threads the theme is used exclusively on the main thread to obtain placeholder error fallback drawables to avoid leaking activities if the link android content context of the link android app fragment or link android app activity used to start this load has a different link android content res resources theme the link android content res resources theme provided here will override the link android content res resources theme of the link android content context param theme the theme to use when loading drawables return this request builder ,Method,,,com.bumptech.glide.request.RequestOptions+theme(Theme) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+theme(Theme) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+theme com.bumptech.glide.request.RequestOptions+theme com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+THEME,1245,30,1,"/** 
 * Sets the  {@link android.content.res.Resources.Theme} to apply when loading {@link Drawable}s for resource ids provided via  {@link #error(int)},  {@link #placeholder(int)}, and {@link #fallback(Drawable)}. <p>The theme is <em>NOT</em> applied in the decoder that will attempt to decode a given resource id model on Glide's background threads. The theme is used exclusively on the main thread to obtain placeholder/error/fallback drawables to avoid leaking Activities. <p>If the  {@link android.content.Context} of the {@link android.app.Fragment} or{@link android.app.Activity} used to start this load has a different{@link android.content.res.Resources.Theme}, the  {@link android.content.res.Resources.Theme}provided here will override the  {@link android.content.res.Resources.Theme} of the{@link android.content.Context}.
 * @param theme The theme to use when loading Drawables.
 * @return this request builder.
 */
","/**
   * Sets the {@link android.content.res.Resources.Theme} to apply when loading {@link Drawable}s
   * for resource ids provided via {@link #error(int)}, {@link #placeholder(int)}, and
   * {@link #fallback(Drawable)}.
   *
   * <p>The theme is <em>NOT</em> applied in the decoder that will attempt to decode a given
   * resource id model on Glide's background threads. The theme is used exclusively on the main
   * thread to obtain placeholder/error/fallback drawables to avoid leaking Activities.
   *
   * <p>If the {@link android.content.Context} of the {@link android.app.Fragment} or
   * {@link android.app.Activity} used to start this load has a different
   * {@link android.content.res.Resources.Theme}, the {@link android.content.res.Resources.Theme}
   * provided here will override the {@link android.content.res.Resources.Theme} of the
   * {@link android.content.Context}.
   *
   * @param theme The theme to use when loading Drawables.
   * @return this request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions theme(@Nullable Resources.Theme theme) {
    if (isAutoCloneEnabled) {
      return clone().theme(theme);
    }

    this.theme = theme;
    fields |= THEME;

    return selfOrThrowIfLocked();
  }",True,True,"This method sets the theme to be used when loading drawables for resource ids provided via error(), placeholder(), and fallback(). The theme is used on the main thread to obtain drawables and avoid leaking activities. If a different theme is already set in the context, this theme will override it.",False,"The `theme` method sets the `Resources.Theme` to be used when loading drawables for error, placeholder, and fallback resources in Glide. It ensures that the theme is applied on the main thread to obtain the appropriate drawables and overrides the theme of the context if necessary."
96,skipMemoryCache(boolean),skip memory cache skip allows the loaded resource to skip the memory cache note this is not a guarantee if a request is already pending for this resource and that request is not also skipping the memory cache the resource will be cached in memory param skip true to allow the resource to skip the memory cache return this request builder ,Method,skipMemoryCacheOf(boolean) skipMemoryCacheOf(boolean) skipMemoryCache(boolean),com.bumptech.glide.request.RequestOptionsTest+isSkipMemoryCacheSet_withSkipMemoryCacheTrue_isTrue() com.bumptech.glide.request.RequestOptionsTest+isSkipMemoryCacheSet_withSkipMemoryCacheFalse_isTrue() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+skipMemoryCache(boolean) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+skipMemoryCache(boolean) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+isCacheable com.bumptech.glide.request.RequestOptions+isCacheable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+IS_CACHEABLE,637,21,1,"/** 
 * Allows the loaded resource to skip the memory cache. <p> Note - this is not a guarantee. If a request is already pending for this resource and that request is not also skipping the memory cache, the resource will be cached in memory.</p>
 * @param skip True to allow the resource to skip the memory cache.
 * @return This request builder.
 */
","/**
   * Allows the loaded resource to skip the memory cache.
   *
   * <p> Note - this is not a guarantee. If a request is already pending for this resource and that
   * request is not also skipping the memory cache, the resource will be cached in memory.</p>
   *
   * @param skip True to allow the resource to skip the memory cache.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions skipMemoryCache(boolean skip) {
    if (isAutoCloneEnabled) {
      return clone().skipMemoryCache(true);
    }

    this.isCacheable = !skip;
    fields |= IS_CACHEABLE;

    return selfOrThrowIfLocked();
  }",True,True,"The function of this method is to allow the loaded resource to skip the memory cache. It takes a boolean parameter ""skip"" to determine whether the resource should be skipped or not. It returns the request builder.",False,"This code defines a method called ""skipMemoryCache"" that allows a loaded resource to bypass the memory cache. If the method is called with ""skip"" set to true, the resource will not be cached in memory. The method returns the current request builder object."
97,"override(int,int)",override width height overrides the link com bumptech glide request target target s width and height with the given values this is useful for thumbnails and should only be used for other cases when you need a very specific image size param width the width in pixels to use to load the resource param height the height in pixels to use to load the resource return this request builder ,Method,"overrideOf(int,int) override(int,int) override(int)","com.bumptech.glide.test.Extension+override(RequestOptions,int,int) com.bumptech.glide.GlideTest+testLoadColorDrawable_withUnitBitmapTransformation_returnsColorDrawable() com.bumptech.glide.GlideTest+testLoadColorDrawable_withNonUnitBitmapTransformation_returnsBitmapDrawable() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode()","com.bumptech.glide.request.RequestOptions+override(int,int) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+override(int,int) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked()",com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+overrideHeight com.bumptech.glide.request.RequestOptions+overrideHeight com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+OVERRIDE,715,22,1,"/** 
 * Overrides the  {@link com.bumptech.glide.request.target.Target}'s width and height with the given values. This is useful for thumbnails, and should only be used for other cases when you need a very specific image size.
 * @param width  The width in pixels to use to load the resource.
 * @param height The height in pixels to use to load the resource.
 * @return This request builder.
 */
","/**
   * Overrides the {@link com.bumptech.glide.request.target.Target}'s width and height with the
   * given values. This is useful for thumbnails, and should only be used for other cases when you
   * need a very specific image size.
   *
   * @param width  The width in pixels to use to load the resource.
   * @param height The height in pixels to use to load the resource.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions override(int width, int height) {
    if (isAutoCloneEnabled) {
      return clone().override(width, height);
    }

    this.overrideWidth = width;
    this.overrideHeight = height;
    fields |= OVERRIDE;

    return selfOrThrowIfLocked();
  }",True,True,"This method overrides the width and height of a target with the given values. It is useful for setting specific image sizes, such as thumbnails. The method returns a request builder.",False,"This code defines a method called ""override"" in the RequestOptions class. It allows the user to specify a specific width and height for loading an image resource, overriding the default values. The method returns the current request builder object."
98,override(int),override size overrides the link com bumptech glide request target target s width and height with the given size see override int int param size the width and height to use return this request builder ,Method,,com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.samples.contacturi.MainActivity+showContact(long) com.bumptech.glide.samples.flickr.FlickrGlideExtension+squareMiniThumb(RequestOptions),"com.bumptech.glide.request.RequestOptions+override(int,int) com.bumptech.glide.request.RequestOptions+override(int,int)",,346,13,1,"/** 
 * Overrides the  {@link com.bumptech.glide.request.target.Target}'s width and height with the given size.
 * @see #override(int,int)
 * @param size The width and height to use.
 * @return This request builder.
 */
","/**
   * Overrides the {@link com.bumptech.glide.request.target.Target}'s width and height with the
   * given size.
   *
   * @see #override(int, int)
   * @param size The width and height to use.
   * @return This request builder.
   */
  @NonNull
  @CheckResult
  public RequestOptions override(int size) {
    return override(size, size);
  }",True,True,This method overrides the width and height of a target with a given size. It returns a request builder.,False,"This code is a method that overrides the width and height of a target in Glide, a popular image loading library in Android, with a given size. It returns a RequestOptions object, which is used to customize the image loading behavior. The method can be called with a single size parameter, which will be used for both width and height."
99,signature(Key),signature signature sets some additional data to be mixed in to the memory and disk cache keys allowing the caller more control over when cached data is invalidated note the signature does not replace the cache key it is purely additive param signature a unique non null link key representing the currentstate of the model that will be mixed in to the cache key return this request builder see com bumptech glide signature object key ,Method,signatureOf(Key) signature(Key),com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+signature(Key) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+signature(Key) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+signature com.bumptech.glide.request.RequestOptions+signature com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+SIGNATURE,796,22,1,"/** 
 * Sets some additional data to be mixed in to the memory and disk cache keys allowing the caller more control over when cached data is invalidated. <p> Note - The signature does not replace the cache key, it is purely additive. </p>
 * @param signature A unique non-null {@link Key} representing the currentstate of the model that will be mixed in to the cache key.
 * @return This request builder.
 * @see com.bumptech.glide.signature.ObjectKey
 */
","/**
   * Sets some additional data to be mixed in to the memory and disk cache keys allowing the caller
   * more control over when cached data is invalidated.
   *
   * <p> Note - The signature does not replace the cache key, it is purely additive. </p>
   *
   * @param signature A unique non-null {@link Key} representing the current
   *                  state of the model that will be mixed in to the cache key.
   * @return This request builder.
   * @see com.bumptech.glide.signature.ObjectKey
   */
  @NonNull
  @CheckResult
  public RequestOptions signature(@NonNull Key signature) {
    if (isAutoCloneEnabled) {
      return clone().signature(signature);
    }

    this.signature = Preconditions.checkNotNull(signature);
    fields |= SIGNATURE;
    return selfOrThrowIfLocked();
  }",True,True,"This method sets additional data to be mixed into the cache keys, allowing the caller to have more control over when cached data is invalidated. It takes a unique non-null Key representing the current state of the model and returns the request builder.",False,"This code defines a method called ""signature"" in the RequestOptions class. It allows the caller to set additional data to be mixed into the cache keys, providing more control over when cached data is invalidated. The method returns the current request builder with the updated signature."
100,clone(),clone returns a copy of this request builder with all of the options put so far on this builder this method returns a deep copy in that all non immutable arguments are copied such that changes to one builder will not affect the other builder however in addition to immutable arguments the current model is not copied copied so changes to the model will affect both builders even if this object was locked the cloned object returned from this method will not be locked ,Method,"sizeMultiplier(float) useUnlimitedSourceGeneratorsPool(boolean) useAnimationPool(boolean) onlyRetrieveFromCache(boolean) diskCacheStrategy(DiskCacheStrategy) priority(Priority) placeholder(Drawable) placeholder(int) fallback(Drawable) fallback(int) error(Drawable) error(int) theme(Resources.Theme) skipMemoryCache(boolean) override(int,int) signature(Key) set(Option<T>,T) decode(Class<?>) optionalTransform(DownsampleStrategy,Transformation<Bitmap>) transform(DownsampleStrategy,Transformation<Bitmap>) transform(Transformation<Bitmap>,boolean) transform(Class<T>,Transformation<T>,boolean) dontTransform() apply(RequestOptions)","com.bumptech.glide.RequestBuilder+getMutableOptions() com.bumptech.glide.RequestBuilder+clone() com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestManager+setRequestOptions(RequestOptions)",java.lang.Object+clone() com.bumptech.glide.load.Options+Options() com.bumptech.glide.load.Options+putAll(Options) com.bumptech.glide.load.Options+putAll(Options) java.util.Map+putAll(Map) java.util.Map+putAll(Map) java.lang.RuntimeException+RuntimeException(Throwable),com.bumptech.glide.request.RequestOptions+options com.bumptech.glide.request.RequestOptions+options com.bumptech.glide.request.RequestOptions+options com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+isLocked com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled,1202,32,1,"/** 
 * Returns a copy of this request builder with all of the options put so far on this builder. <p> This method returns a ""deep"" copy in that all non-immutable arguments are copied such that changes to one builder will not affect the other builder. However, in addition to immutable arguments, the current model is not copied copied so changes to the model will affect both builders. </p> <p> Even if this object was locked, the cloned object returned from this method will not be locked. </p>
 */
","/**
   * Returns a copy of this request builder with all of the options put so far on this builder.
   *
   * <p> This method returns a ""deep"" copy in that all non-immutable arguments are copied such that
   * changes to one builder will not affect the other builder. However, in addition to immutable
   * arguments, the current model is not copied copied so changes to the model will affect both
   * builders. </p>
   *
   * <p> Even if this object was locked, the cloned object returned from this method will not be
   * locked. </p>
   */
  @SuppressWarnings({
      ""unchecked"",
      // we don't want to throw to be user friendly
      ""PMD.CloneThrowsCloneNotSupportedException""
  })
  @CheckResult
  @Override
  public RequestOptions clone() {
    try {
      RequestOptions result = (RequestOptions) super.clone();
      result.options = new Options();
      result.options.putAll(options);
      result.transformations = new CachedHashCodeArrayMap<>();
      result.transformations.putAll(transformations);
      result.isLocked = false;
      result.isAutoCloneEnabled = false;
      return result;
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }
  }",False,True,"This method serves to create a copy of the current request builder with all of its options. The copy is a ""deep"" copy, meaning that non-immutable arguments are copied to ensure that changes to one builder do not affect the other. However, the current model is not copied, so changes to the model will affect both builders. The cloned object returned from this method is not locked, even if the original object was locked.",False,This code defines a method called `clone()` that returns a deep copy of the current object. The method creates a new instance of `RequestOptions` and copies the values of its non-immutable fields from the original object to the new instance. The new instance is then returned.
101,"set(Option<T>,T)",set option value ,Method,"option(Option<T>,T) set(Option<T>,T) encodeFormat(Bitmap.CompressFormat) encodeQuality(int) frame(long) format(DecodeFormat) disallowHardwareConfig() downsample(DownsampleStrategy) timeout(int) dontAnimate()",com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.load.Options+set(Option<T>,T) com.bumptech.glide.load.Options+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked()",com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+options,329,12,1,,"@NonNull
  @CheckResult
  public <T> RequestOptions set(@NonNull Option<T> option, @NonNull T value) {
    if (isAutoCloneEnabled) {
      return clone().set(option, value);
    }

    Preconditions.checkNotNull(option);
    Preconditions.checkNotNull(value);
    options.set(option, value);
    return selfOrThrowIfLocked();
  }",True,True,"This method sets a given option with a given value in the RequestOptions object. If auto cloning is enabled, it clones the object and sets the option in the cloned object. It also checks for null values and returns the object itself or throws an exception if it is locked.",False,"This code defines a method called ""set"" that allows the user to set a specific option with a given value. It checks if auto cloning is enabled, and if so, it clones the current instance and calls the ""set"" method on the cloned instance. It then sets the option and value in the options object and returns either the current instance or throws an exception if it is locked."
102,decode(Class<?>),decode resource class ,Method,decodeTypeOf(Class<?>) decode(Class<?>),com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),com.bumptech.glide.request.RequestOptions+decode(Class<?>) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+decode(Class<?>) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+resourceClass com.bumptech.glide.request.RequestOptions+resourceClass com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+RESOURCE_CLASS,306,11,1,,"@NonNull
  @CheckResult
  public RequestOptions decode(@NonNull Class<?> resourceClass) {
    if (isAutoCloneEnabled) {
      return clone().decode(resourceClass);
    }

    this.resourceClass = Preconditions.checkNotNull(resourceClass);
    fields |= RESOURCE_CLASS;
    return selfOrThrowIfLocked();
  }",True,True,"This method decodes a resource based on the given resource class. If auto cloning is enabled, it clones itself and calls the decode method again. It sets the resource class, updates the fields, and returns the result.",False,"This code defines a method called ""decode"" that takes a resource class as a parameter. If auto cloning is enabled, it recursively calls the method on a cloned instance. Otherwise, it sets the resource class and returns the instance itself or throws an exception if it is locked."
103,isTransformationAllowed(),is transformation allowed ,Method,,com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.request.RequestOptionsTest+testIsTransformationAllowed_byDefault_isTrue() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationAllowed_afterDontTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testApplyingTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withDontTransform_retainsDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withTransform_retrainsTransform(),,com.bumptech.glide.request.RequestOptions+isTransformationAllowed,88,3,17,,"public final boolean isTransformationAllowed() {
    return isTransformationAllowed;
  }",True,True,The function of the method isTransformationAllowed() is to return a boolean value indicating whether a transformation is allowed or not.,False,"The code defines a method named ""isTransformationAllowed"" that returns a boolean value. It checks and returns the value of a variable named ""isTransformationAllowed"", indicating whether a transformation is allowed or not."
104,isTransformationSet(),is transformation set ,Method,,com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.request.RequestOptionsTest+testIsTransformationSet_byDefault_isFalse() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationSet_afterApplyingOptionsWithTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationSet_afterDontTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testApplyingDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withTransformation_overridesDontTransform(),com.bumptech.glide.request.RequestOptions+isSet(int) com.bumptech.glide.request.RequestOptions+isSet(int),com.bumptech.glide.request.RequestOptions+TRANSFORMATION,82,3,17,,"public final boolean isTransformationSet() {
    return isSet(TRANSFORMATION);
  }",True,True,The function of the given method is to check if a transformation is set. It does this by calling the isSet method with the TRANSFORMATION parameter and returning the result as a boolean value.,False,"The code defines a method named ""isTransformationSet()"" which returns a boolean value. It checks if a certain transformation is set by calling another method named ""isSet()"" and returns the result."
105,isLocked(),is locked ,Method,,,,com.bumptech.glide.request.RequestOptions+isLocked,58,3,17,,"public final boolean isLocked() {
    return isLocked;
  }",True,True,This method returns a boolean value indicating whether an object is locked or not.,False,"The code defines a method named ""isLocked"" that returns a boolean value indicating whether an object is locked or not. The method is marked as final, meaning it cannot be overridden by subclasses."
106,encodeFormat(Bitmap.CompressFormat),encode format format sets the value for key link com bumptech glide load resource bitmap bitmap encoder compression format ,Method,,,"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T)",com.bumptech.glide.load.resource.bitmap.BitmapEncoder+COMPRESSION_FORMAT,318,9,1,"/** 
 * Sets the value for key {@link com.bumptech.glide.load.resource.bitmap.BitmapEncoder#COMPRESSION_FORMAT}.
 */
","/**
   * Sets the value for key
   * {@link com.bumptech.glide.load.resource.bitmap.BitmapEncoder#COMPRESSION_FORMAT}.
   */
  @NonNull
  @CheckResult
  public RequestOptions encodeFormat(@NonNull Bitmap.CompressFormat format) {
    return set(BitmapEncoder.COMPRESSION_FORMAT, Preconditions.checkNotNull(format));
  }",True,True,"This method sets the value for the key ""COMPRESSION_FORMAT"" in the RequestOptions object to the specified Bitmap.CompressFormat value.",False,This code is a method called `encodeFormat` that sets the value for a key called `COMPRESSION_FORMAT` in the `RequestOptions` class. It takes a `Bitmap.CompressFormat` as a parameter and returns a `RequestOptions` object.
107,encodeQuality(int),encode quality quality sets the value for key link bitmap encoder compression quality ,Method,encodeQualityOf(int),,"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T)",com.bumptech.glide.load.resource.bitmap.BitmapEncoder+COMPRESSION_QUALITY,258,9,1,"/** 
 * Sets the value for key {@link BitmapEncoder#COMPRESSION_QUALITY}.
 */
","/**
   * Sets the value for key
   * {@link BitmapEncoder#COMPRESSION_QUALITY}.
   */
  @NonNull
  @CheckResult
  public RequestOptions encodeQuality(@IntRange(from = 0, to = 100) int quality) {
    return set(BitmapEncoder.COMPRESSION_QUALITY, quality);
  }",True,True,"This method sets the value for the key ""BitmapEncoder.COMPRESSION_QUALITY"" in the RequestOptions object, using the provided quality value.",False,"This code defines a method called `encodeQuality` in the `RequestOptions` class. It sets the value for the key `BitmapEncoder.COMPRESSION_QUALITY` to the specified `quality` value, which should be an integer between 0 and 100. The method returns a new `RequestOptions` object."
108,frame(long),frame frame time micros sets the time position of the frame to extract from a video this is a component option specific to link video decoder if the default video decoder is replaced or skipped because of your configuration this option may be ignored see video decoder target fram e param frame time micros the time position in microseconds of the desired frame if negative the android framework implementation return a representative frame ,Method,frameOf(long),,"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T)",com.bumptech.glide.load.resource.bitmap.VideoDecoder+TARGET_FRAME,663,15,1,"/** 
 * Sets the time position of the frame to extract from a video. <p>This is a component option specific to  {@link VideoDecoder}. If the default video decoder is replaced or skipped because of your configuration, this option may be ignored.
 * @see VideoDecoder#TARGET_FRAME
 * @param frameTimeMicros The time position in microseconds of the desired frame. If negative, theAndroid framework implementation return a representative frame.
 */
","/**
   * Sets the time position of the frame to extract from a video.
   *
   * <p>This is a component option specific to {@link VideoDecoder}. If the default video
   * decoder is replaced or skipped because of your configuration, this option may be ignored.
   *
   * @see VideoDecoder#TARGET_FRAME
   * @param frameTimeMicros The time position in microseconds of the desired frame. If negative, the
   *                        Android framework implementation return a representative frame.
   */
  @NonNull
  @CheckResult
  public RequestOptions frame(@IntRange(from = 0) long frameTimeMicros) {
    return set(VideoDecoder.TARGET_FRAME, frameTimeMicros);
  }",True,True,This method sets the time position of the frame to extract from a video. It is specific to the VideoDecoder component and returns a RequestOptions object.,False,"This code defines a method called ""frame"" that sets the time position of a frame to extract from a video. It is specific to the VideoDecoder component and returns a RequestOptions object. The frameTimeMicros parameter specifies the desired frame's time position in microseconds."
109,format(DecodeFormat),format format sets the link decode format to use when decoding link bitmap objects using link downsampler and glide s default gif decoders link decode format is a request not a requirement it s possible the resource will bedecoded using a decoder that cannot control the format link android media media metadata retriever for example or that the decoder may choose toignore the requested format if it can t display the image i e rgb 565 is requested but the image has alpha this is a component option specific to link downsampler and glide s gif decoders if thedefault bitmap decoders are replaced or skipped because of your configuration this option may be ignored to set only the format used when decoding link bitmap s use link option option object and link downsampler decode format to set only the format used when decoding gif frames use link option option object and link gif options decode format see downsampler decode forma t see gif options decode forma t ,Method,formatOf(DecodeFormat),"com.bumptech.glide.samples.flickr.FlickrGlideModule+applyOptions(Context,GlideBuilder)","com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T)",com.bumptech.glide.load.resource.bitmap.Downsampler+DECODE_FORMAT com.bumptech.glide.load.resource.gif.GifOptions+DECODE_FORMAT,1355,29,1,"/** 
 * Sets the  {@link DecodeFormat} to use when decoding {@link Bitmap} objects using{@link Downsampler} and Glide's default GIF decoders.<p> {@link DecodeFormat} is a request, not a requirement. It's possible the resource will bedecoded using a decoder that cannot control the format ( {@link android.media.MediaMetadataRetriever} for example), or that the decoder may choose toignore the requested format if it can't display the image (i.e. RGB_565 is requested, but the image has alpha). <p>This is a component option specific to  {@link Downsampler} and Glide's GIF decoders. If thedefault Bitmap decoders are replaced or skipped because of your configuration, this option may be ignored. <p>To set only the format used when decoding  {@link Bitmap}s, use {@link #option(Option,Object)} and {@link Downsampler#DECODE_FORMAT}. To set only the format used when decoding GIF frames, use  {@link #option(Option,Object)} and{@link GifOptions#DECODE_FORMAT}.
 * @see Downsampler#DECODE_FORMAT
 * @see GifOptions#DECODE_FORMAT
 */
","/**
   * Sets the {@link DecodeFormat} to use when decoding {@link Bitmap} objects using
   * {@link Downsampler} and Glide's default GIF decoders.
   *
   * <p>{@link DecodeFormat} is a request, not a requirement. It's possible the resource will be
   * decoded using a decoder that cannot control the format
   * ({@link android.media.MediaMetadataRetriever} for example), or that the decoder may choose to
   * ignore the requested format if it can't display the image (i.e. RGB_565 is requested, but the
   * image has alpha).
   *
   * <p>This is a component option specific to {@link Downsampler} and Glide's GIF decoders. If the
   * default Bitmap decoders are replaced or skipped because of your configuration, this option may
   * be ignored.
   *
   * <p>To set only the format used when decoding {@link Bitmap}s, use
   * {@link #option(Option, Object)} and {@link Downsampler#DECODE_FORMAT}. To set only the format
   * used when decoding GIF frames, use {@link #option(Option, Object)} and
   * {@link GifOptions#DECODE_FORMAT}.
   *
   * @see Downsampler#DECODE_FORMAT
   * @see GifOptions#DECODE_FORMAT
   */
  @NonNull
  @CheckResult
  public RequestOptions format(@NonNull DecodeFormat format) {
    Preconditions.checkNotNull(format);
    return set(Downsampler.DECODE_FORMAT, format)
        .set(GifOptions.DECODE_FORMAT, format);
  }",True,True,"The function of this method is to set the DecodeFormat to be used when decoding Bitmap objects using Downsampler and Glide's default GIF decoders. It is a request, not a requirement, and may be ignored depending on the decoder or configuration.",False,"The `format` method sets the `DecodeFormat` to be used when decoding `Bitmap` objects using `Downsampler` and Glide's default GIF decoders. It is a request, not a requirement, and may be ignored depending on the decoder and configuration. This method allows you to specify the format used for decoding both `Bitmap`s and GIF frames."
110,disallowHardwareConfig(),disallow hardware config disables the use of link android graphics bitmap config hardware in link downsampler toavoid errors caused by inspecting bitmap pixels drawing with hardware support disabled drawing to link android graphics canvas s backed by link bitmap s etc it s almost never safe to set link downsampler allow hardware config to code true sowe only provide a way to disable hardware configs entirely if no option is set for link downsampler allow hardware config glide will set the value per request based on whether or not a link transformation is applied and if one is the type of link transformation applied built in transformations like link fit center and link com bumptech glide load resource bitmap downsample strategy center outside can safely use link android graphics bitmap config hardware because they can be entirely replaced byscaling within link downsampler link transformation s like link circle crop thatcan t be replicated by link downsampler cannot use link bitmap config hardware because link android graphics bitmap config hardware cannot be drawn to link android graphics canvas s which is required by most link transformation s ,Method,,,"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T)",com.bumptech.glide.load.resource.bitmap.Downsampler+ALLOW_HARDWARE_CONFIG,1432,22,1,"/** 
 * Disables the use of  {@link android.graphics.Bitmap.Config#HARDWARE} in {@link Downsampler} toavoid errors caused by inspecting Bitmap pixels, drawing with hardware support disabled, drawing to  {@link android.graphics.Canvas}s backed by  {@link Bitmap}s etc. <p>It's almost never safe to set  {@link Downsampler#ALLOW_HARDWARE_CONFIG} to {@code true} sowe only provide a way to disable hardware configs entirely. If no option is set for {@link Downsampler#ALLOW_HARDWARE_CONFIG}, Glide will set the value per request based on whether or not a  {@link Transformation} is applied and if one is, the type of{@link Transformation} applied. Built in transformations like {@link FitCenter} and{@link com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CenterOutside} can safely use{@link android.graphics.Bitmap.Config#HARDWARE} because they can be entirely replaced byscaling within  {@link Downsampler}.  {@link Transformation}s like  {@link #circleCrop()} thatcan't be replicated by  {@link Downsampler} cannot use {@link Bitmap.Config#HARDWARE} because{@link android.graphics.Bitmap.Config#HARDWARE} cannot be drawn to{@link android.graphics.Canvas}s, which is required by most  {@link Transformation}s.
 */
","/**
   * Disables the use of {@link android.graphics.Bitmap.Config#HARDWARE} in {@link Downsampler} to
   * avoid errors caused by inspecting Bitmap pixels, drawing with hardware support disabled,
   * drawing to {@link android.graphics.Canvas}s backed by {@link Bitmap}s etc.
   *
   * <p>It's almost never safe to set {@link Downsampler#ALLOW_HARDWARE_CONFIG} to {@code true} so
   * we only provide a way to disable hardware configs entirely. If no option is set for
   * {@link Downsampler#ALLOW_HARDWARE_CONFIG}, Glide will set the value per request based on
   * whether or not a {@link Transformation} is applied and if one is, the type of
   * {@link Transformation} applied. Built in transformations like {@link FitCenter} and
   * {@link com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CenterOutside} can safely use
   * {@link android.graphics.Bitmap.Config#HARDWARE} because they can be entirely replaced by
   * scaling within {@link Downsampler}. {@link Transformation}s like {@link #circleCrop()} that
   * can't be replicated by {@link Downsampler} cannot use {@link Bitmap.Config#HARDWARE} because
   * {@link android.graphics.Bitmap.Config#HARDWARE} cannot be drawn to
   * {@link android.graphics.Canvas}s, which is required by most {@link Transformation}s.
   */
  @NonNull
  @CheckResult
  public RequestOptions disallowHardwareConfig() {
    return set(Downsampler.ALLOW_HARDWARE_CONFIG, false);
  }",False,True,"This method serves to disable the use of hardware configurations in the Downsampler class of Glide. It prevents errors caused by inspecting Bitmap pixels, drawing with hardware support disabled, and drawing to Canvases backed by Bitmaps.",False,"The code defines a method called `disallowHardwareConfig()` that returns a `RequestOptions` object. This method is used to disable the use of hardware configurations in the `Downsampler` class, which prevents errors caused by inspecting bitmap pixels, drawing with hardware support disabled, and drawing to canvases backed by bitmaps."
111,downsample(DownsampleStrategy),downsample strategy sets the link downsample strategy to use when decoding link bitmap bitmaps using link downsampler this is a component option specific to link downsampler if the defautlt bitmap decoder is replaced or skipped because of your configuration this option may be ignored ,Method,"downsampleOf(DownsampleStrategy) optionalTransform(DownsampleStrategy,Transformation<Bitmap>) transform(DownsampleStrategy,Transformation<Bitmap>)",com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withDownsampleStrategy_isTrue(),"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T)",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+OPTION,503,12,1,"/** 
 * Sets the  {@link DownsampleStrategy} to use when decoding {@link Bitmap Bitmaps} using{@link Downsampler}. <p>This is a component option specific to  {@link Downsampler}. If the defautlt Bitmap decoder is replaced or skipped because of your configuration, this option may be ignored.
 */
","/**
   * Sets the {@link DownsampleStrategy} to use when decoding {@link Bitmap Bitmaps} using
   * {@link Downsampler}.
   *
   * <p>This is a component option specific to {@link Downsampler}. If the defautlt Bitmap decoder
   * is replaced or skipped because of your configuration, this option may be ignored.
   */
  @NonNull
  @CheckResult
  public RequestOptions downsample(@NonNull DownsampleStrategy strategy) {
    return set(DownsampleStrategy.OPTION, Preconditions.checkNotNull(strategy));
  }",False,True,This method sets the downsample strategy to be used when decoding bitmaps using the Downsampler. It returns a RequestOptions object.,False,"This code defines a method called ""downsample"" that sets the downsample strategy to be used when decoding bitmaps. It takes a DownsampleStrategy object as a parameter and returns a RequestOptions object. The method is specific to the Downsampler component and may be ignored if the default bitmap decoder is replaced or skipped."
112,timeout(int),timeout timeout ms sets the read and write timeout for the http requests used to load the image this is a component option specific to glide s default networking library and link com bumptech glide load model stream http glide url loader if you use any other networking library including glide s volley or ok http integration libraries this option will be ignored see com bumptech glide load model stream http glide url loader timeou t param timeout ms the read and write timeout in milliseconds ,Method,timeoutOf(int),,"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T)",com.bumptech.glide.load.model.stream.HttpGlideUrlLoader+TIMEOUT,689,16,1,"/** 
 * Sets the read and write timeout for the http requests used to load the image. <p>This is a component option specific to Glide's default networking library and {@link com.bumptech.glide.load.model.stream.HttpGlideUrlLoader}. If you use any other networking library including Glide's Volley or OkHttp integration libraries, this option will be ignored.
 * @see com.bumptech.glide.load.model.stream.HttpGlideUrlLoader#TIMEOUT
 * @param timeoutMs The read and write timeout in milliseconds.
 */
","/**
   * Sets the read and write timeout for the http requests used to load the image.
   *
   * <p>This is a component option specific to Glide's default networking library and
   * {@link com.bumptech.glide.load.model.stream.HttpGlideUrlLoader}. If you use any other
   * networking library including Glide's Volley or OkHttp integration libraries, this option will
   * be ignored.
   *
   * @see com.bumptech.glide.load.model.stream.HttpGlideUrlLoader#TIMEOUT
   * @param timeoutMs The read and write timeout in milliseconds.
   */
  @NonNull
  @CheckResult
  public RequestOptions timeout(@IntRange(from = 0) int timeoutMs) {
    return set(HttpGlideUrlLoader.TIMEOUT, timeoutMs);
  }",True,True,This method sets the read and write timeout for http requests used to load images in Glide. The timeout is specified in milliseconds.,False,"This code defines a method called ""timeout"" in the RequestOptions class. It sets the read and write timeout for http requests used to load images in Glide. The timeout value is specified in milliseconds."
113,optionalCenterCrop(),optional center crop applies link com bumptech glide load resource bitmap center crop to all default types andignores unknown types this will override previous calls to link dont transform see optional transform class transformation see center crop ,Method,,com.bumptech.glide.DrawableTransformationTest+load_withColorDrawable_sizeOriginal_optionalTransform_returnsColorDrawable() com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),"com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.CenterCrop+CenterCrop()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+CENTER_OUTSIDE,452,14,1,"/** 
 * Applies  {@link com.bumptech.glide.load.resource.bitmap.CenterCrop} to all default types, andignores unknown types. <p>This will override previous calls to  {@link #dontTransform()}.
 * @see #optionalTransform(Class,Transformation)
 * @see #centerCrop()
 */
","/**
   * Applies {@link com.bumptech.glide.load.resource.bitmap.CenterCrop} to all default types, and
   * ignores unknown types.
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @see #optionalTransform(Class, Transformation)
   * @see #centerCrop()
   */
  @NonNull
  @CheckResult
  public RequestOptions optionalCenterCrop() {
    return optionalTransform(DownsampleStrategy.CENTER_OUTSIDE, new CenterCrop());
  }",False,True,"The method serves to apply the CenterCrop transformation to all default types of images, while ignoring unknown types. It overrides previous calls to dontTransform() and returns a RequestOptions object.",False,"The method `optionalCenterCrop()` applies the `CenterCrop` transformation to all default types of images in Glide, while ignoring unknown types. It overrides any previous calls to `dontTransform()`. It returns a `RequestOptions` object that can be used to further customize the image loading process."
114,centerCrop(),center crop applies link center crop to all default types andthrows an exception if asked to transform an unknown type this will override previous calls to link dont transform see transform class transformation see optional center crop ,Method,centerCropTransform(),"com.bumptech.glide.test.Extension+test(RequestOptions) com.bumptech.glide.test.Extension+centerCrop(RequestOptions) com.bumptech.glide.test.Extension+override(RequestOptions,int,int) com.bumptech.glide.test.Extension+centerCrop(RequestOptions) com.bumptech.glide.test.Extension+test(RequestOptions) com.bumptech.glide.test.Extension+test(RequestOptions) com.bumptech.glide.test.ExtensionWithOption+squareThumb(RequestOptions) com.bumptech.glide.test.Extension+test(RequestOptions) com.bumptech.glide.test.Extension+centerCrop(RequestOptions) com.bumptech.glide.test.Extension+centerCrop(RequestOptions) com.bumptech.glide.test.Extension+test(RequestOptions) com.bumptech.glide.test.Extension+test(RequestOptions) com.bumptech.glide.test.ExtensionWithOption+squareThumb(RequestOptions) com.bumptech.glide.DrawableTransformationTest+load_withColorDrawable_fixedSize_requiredUnitTransform_returnsOriginalDrawable() com.bumptech.glide.DrawableTransformationTest+run() com.bumptech.glide.GlideTest+testLoadColorDrawable_withUnitBitmapTransformation_returnsColorDrawable() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode() com.bumptech.glide.samples.flickr.FlickrGlideExtension+squareThumb(RequestOptions) com.bumptech.glide.samples.flickr.FlickrGlideExtension+squareMiniThumb(RequestOptions)","com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.CenterCrop+CenterCrop()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+CENTER_OUTSIDE,435,14,1,"/** 
 * Applies  {@link CenterCrop} to all default types andthrows an exception if asked to transform an unknown type. <p>this will override previous calls to  {@link #dontTransform()} ()}.
 * @see #transform(Class,Transformation)
 * @see #optionalCenterCrop()
 */
","/**
   * Applies {@link CenterCrop} to all default types and
   * throws an exception if asked to transform an unknown type.
   *
   * <p>this will override previous calls to {@link #dontTransform()} ()}.
   *
   * @see #transform(Class, Transformation)
   * @see #optionalCenterCrop()
   */
  @NonNull
  @CheckResult
  public RequestOptions centerCrop() {
    return transform(DownsampleStrategy.CENTER_OUTSIDE, new CenterCrop());
  }",False,True,The function of this method is to apply the CenterCrop transformation to all default types of images and throw an exception if an unknown type is requested. It overrides previous calls to dontTransform() and returns a RequestOptions object.,False,"The code defines a method called ""centerCrop()"" that applies the ""CenterCrop"" transformation to all default types of images. It also throws an exception if asked to transform an unknown type. This method overrides any previous calls to ""dontTransform()"" and returns a RequestOptions object."
115,optionalFitCenter(),optional fit center applies link fit center and to all default types link downsample strategy fit center toimage types and ignores unknown types this will override previous calls to link dont transform and previous calls to link downsample downsample strategy see optional transform class transformation see fit center ,Method,,com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withFitCenter_isTrue(),"com.bumptech.glide.request.RequestOptions+optionalScaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+optionalScaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.FitCenter+FitCenter()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+FIT_CENTER,543,16,1,"/** 
 * Applies  {@link FitCenter} and to all default types, {@link DownsampleStrategy#FIT_CENTER} toimage types, and ignores unknown types. <p>This will override previous calls to  {@link #dontTransform()} and previous calls to{@link #downsample(DownsampleStrategy)}.
 * @see #optionalTransform(Class,Transformation)
 * @see #fitCenter()
 */
","/**
   *
   * Applies {@link FitCenter} and to all default types, {@link DownsampleStrategy#FIT_CENTER} to
   * image types, and ignores unknown types.
   *
   * <p>This will override previous calls to {@link #dontTransform()} and previous calls to
   * {@link #downsample(DownsampleStrategy)}.
   *
   * @see #optionalTransform(Class, Transformation)
   * @see #fitCenter()
   */
  @NonNull
  @CheckResult
  public RequestOptions optionalFitCenter() {
    return optionalScaleOnlyTransform(DownsampleStrategy.FIT_CENTER, new FitCenter());
  }",False,True,"The function of this method is to apply the FitCenter transformation to all default types, apply the FIT_CENTER downsample strategy to image types, and ignore unknown types. It overrides previous calls to dontTransform() and downsample(DownsampleStrategy).",False,"The code defines a method called `optionalFitCenter()` that returns a `RequestOptions` object. This method applies the `FitCenter` transformation to all default types and the `FIT_CENTER` downsample strategy to image types, overriding any previous transformations or downsample strategies. It is recommended to use this method when applying optional transformations to images."
116,fitCenter(),fit center applies link fit center and to all default types link downsample strategy fit center toimage types and throws an exception if asked to transform an unknown type this will override previous calls to link dont transform and previous calls to link downsample downsample strategy see transform class transformation see optional fit center ,Method,fitCenterTransform(),com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withFitCenter_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withDontTransformAndAppliedNonScaleTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnly_andAppliedWithScaleOnly_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withScaleOnlyAndAppliedWithoutTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),"com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.FitCenter+FitCenter()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+FIT_CENTER,563,16,1,"/** 
 * Applies  {@link FitCenter} and to all default types, {@link DownsampleStrategy#FIT_CENTER} toimage types, and throws an exception if asked to transform an unknown type. <p>This will override previous calls to  {@link #dontTransform()} and previous calls to{@link #downsample(DownsampleStrategy)}.
 * @see #transform(Class,Transformation)
 * @see #optionalFitCenter()
 */
","/**
   * Applies {@link FitCenter} and to all default types, {@link DownsampleStrategy#FIT_CENTER} to
   * image types, and throws an exception if asked to transform an unknown
   * type.
   *
   * <p>This will override previous calls to {@link #dontTransform()} and previous calls to
   * {@link #downsample(DownsampleStrategy)}.
   *
   * @see #transform(Class, Transformation)
   * @see #optionalFitCenter()
   */
  @NonNull
  @CheckResult
  public RequestOptions fitCenter() {
    return scaleOnlyTransform(DownsampleStrategy.FIT_CENTER, new FitCenter());
  }",False,True,"The function of this method is to apply the FitCenter transformation to all default types of images, apply the DownsampleStrategy.FIT_CENTER to image types, and throw an exception if an unknown type is requested for transformation. It overrides previous calls to dontTransform() and downsample(DownsampleStrategy).",False,The `fitCenter()` method applies the `FitCenter` transformation to all default types and the `DownsampleStrategy.FIT_CENTER` transformation to image types. It overrides previous calls to `dontTransform()` and `downsample(DownsampleStrategy)`.
117,optionalCenterInside(),optional center inside applies link com bumptech glide load resource bitmap center inside to all default types link downsample strategy center inside to image types and ignores unknown types this will override previous calls to link dont transform and previous calls to link downsample downsample strategy see optional transform class transformation see center inside ,Method,,com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.RequestBuilder+into(ImageView) com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterInside_isTrue(),"com.bumptech.glide.request.RequestOptions+optionalScaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+optionalScaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.CenterInside+CenterInside()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+CENTER_INSIDE,592,15,1,"/** 
 * Applies  {@link com.bumptech.glide.load.resource.bitmap.CenterInside} to all default types,{@link DownsampleStrategy#CENTER_INSIDE} to image types, and ignores unknown types.<p>This will override previous calls to  {@link #dontTransform()} and previous calls to{@link #downsample(DownsampleStrategy)}.
 * @see #optionalTransform(Class,Transformation)
 * @see #centerInside()
 */
","/**
   * Applies {@link com.bumptech.glide.load.resource.bitmap.CenterInside} to all default types,
   * {@link DownsampleStrategy#CENTER_INSIDE} to image types, and ignores unknown types.
   *
   * <p>This will override previous calls to {@link #dontTransform()} and previous calls to
   * {@link #downsample(DownsampleStrategy)}.
   *
   * @see #optionalTransform(Class, Transformation)
   * @see #centerInside()
   */
  @NonNull
  @CheckResult
  public RequestOptions optionalCenterInside() {
    return optionalScaleOnlyTransform(DownsampleStrategy.CENTER_INSIDE, new CenterInside());
  }",False,True,"The method serves to apply the CenterInside transformation to all default types, the CENTER_INSIDE downsample strategy to image types, and ignores unknown types. It overrides previous calls to dontTransform() and downsample(DownsampleStrategy).",False,"The method `optionalCenterInside()` in the given code applies the `CenterInside` transformation to all default types of resources, `DownsampleStrategy.CENTER_INSIDE` to image types, and ignores unknown types. It overrides previous calls to `dontTransform()` and `downsample(DownsampleStrategy)`."
118,centerInside(),center inside applies link center inside to all default types link downsample strategy center inside toimage types and throws an exception if asked to transform an unknown type this will override previous calls to link dont transform and previous calls to link downsample downsample strategy see transform class transformation see optional center inside ,Method,centerInsideTransform(),com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterInside_isTrue() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),"com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.CenterInside+CenterInside()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+CENTER_INSIDE,571,15,1,"/** 
 * Applies  {@link CenterInside} to all default types, {@link DownsampleStrategy#CENTER_INSIDE} toimage types and throws an exception if asked to transform an unknown type. <p>This will override previous calls to  {@link #dontTransform()} and previous calls to{@link #downsample(DownsampleStrategy)}.
 * @see #transform(Class,Transformation)
 * @see #optionalCenterInside()
 */
","/**
   * Applies {@link CenterInside} to all default types, {@link DownsampleStrategy#CENTER_INSIDE} to
   * image types and throws an exception if asked to transform an unknown type.
   *
   * <p>This will override previous calls to {@link #dontTransform()} and previous calls to
   * {@link #downsample(DownsampleStrategy)}.
   *
   * @see #transform(Class, Transformation)
   * @see #optionalCenterInside()
   */
  @NonNull
  @CheckResult
  public RequestOptions centerInside() {
    return scaleOnlyTransform(DownsampleStrategy.CENTER_INSIDE, new CenterInside());
  }",False,True,"The function of this method is to apply the ""CenterInside"" transformation to all default types, apply the ""CENTER_INSIDE"" downsample strategy to image types, and throw an exception if an unknown type is requested for transformation. It overrides previous calls to ""dontTransform()"" and ""downsample(DownsampleStrategy)"".",False,The `centerInside()` method applies the `CenterInside` transformation to all default types and the `DownsampleStrategy.CENTER_INSIDE` to image types. It overrides previous calls to `dontTransform()` and `downsample()` methods.
119,optionalCircleCrop(),optional circle crop applies link circle crop to all default types and ignores unknown types this will override previous calls to link dont transform see optional transform transformation see circle crop ,Method,,,"com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.CircleCrop+CircleCrop()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+CENTER_OUTSIDE,400,13,1,"/** 
 * Applies  {@link CircleCrop} to all default types, and ignores unknown types.<p>This will override previous calls to  {@link #dontTransform()}.
 * @see #optionalTransform(Transformation)
 * @see #circleCrop()
 */
","/**
   * Applies {@link CircleCrop} to all default types, and ignores unknown types.
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @see #optionalTransform(Transformation)
   * @see #circleCrop()
   */
  @NonNull
  @CheckResult
  public RequestOptions optionalCircleCrop() {
    return optionalTransform(DownsampleStrategy.CENTER_OUTSIDE, new CircleCrop());
  }",False,True,The method applies the CircleCrop transformation to all default types and ignores unknown types. It overrides previous calls to dontTransform(). It returns RequestOptions.,False,"The method ""optionalCircleCrop()"" applies the ""CircleCrop"" transformation to all default types of images, while ignoring unknown types. It overrides any previous calls to ""dontTransform()"" and returns a RequestOptions object."
120,circleCrop(),circle crop applies link circle crop to all default types and throws an exception if asked to transforman unknown type this will override previous calls to link dont transform see transform class transformation see optional center crop ,Method,circleCropTransform(),com.bumptech.glide.DrawableTransformationTest+load_withColorDrawable_fixedSize_nonUnitRequiredTransform_returnsBitmapDrawable() com.bumptech.glide.GlideTest+testLoadColorDrawable_withNonUnitBitmapTransformation_returnsBitmapDrawable() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCircleCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCircleCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleAndThenDontTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleAndAppliedDontTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withDontTransformAndAppliedNonScaleTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnly_andAppliedWithScaleOnly_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnlyAndAppliedWithoutTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testEqualsHashCode(),"com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.load.resource.bitmap.CircleCrop+CircleCrop()",com.bumptech.glide.load.resource.bitmap.DownsampleStrategy+CENTER_INSIDE,430,14,1,"/** 
 * Applies  {@link CircleCrop} to all default types and throws an exception if asked to transforman unknown type. <p>This will override previous calls to  {@link #dontTransform()}.
 * @see #transform(Class,Transformation)
 * @see #optionalCenterCrop()
 */
","/**
   * Applies {@link CircleCrop} to all default types and throws an exception if asked to transform
   * an unknown type.
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @see #transform(Class, Transformation)
   * @see #optionalCenterCrop()
   */
  @NonNull
  @CheckResult
  public RequestOptions circleCrop() {
    return transform(DownsampleStrategy.CENTER_INSIDE, new CircleCrop());
  }",False,True,The function of this method is to apply the CircleCrop transformation to all default types and throw an exception if asked to transform an unknown type. It overrides previous calls to dontTransform().,False,"The code defines a method called ""circleCrop()"" that applies the ""CircleCrop"" transformation to all default types of images. It overrides any previous calls to ""dontTransform()"" and returns a RequestOptions object. The method also provides links to other related methods for further reference."
121,"optionalTransform(DownsampleStrategy,Transformation<Bitmap>)",optional transform downsample strategy transformation ,Method,"optionalCenterCrop() optionalCircleCrop() optionalTransform(DownsampleStrategy,Transformation<Bitmap>) scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>,boolean)",,"com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+downsample(DownsampleStrategy) com.bumptech.glide.request.RequestOptions+downsample(DownsampleStrategy) com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean)",com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled,420,11,16,,"@SuppressWarnings({""WeakerAccess"", ""CheckResult""})
  @NonNull
  final RequestOptions optionalTransform(@NonNull DownsampleStrategy downsampleStrategy,
      @NonNull Transformation<Bitmap> transformation) {
    if (isAutoCloneEnabled) {
      return clone().optionalTransform(downsampleStrategy, transformation);
    }

    downsample(downsampleStrategy);
    return transform(transformation, /*isRequired=*/ false);
  }",True,True,This method serves to apply an optional transformation to an image using a specified downsample strategy. It also checks if auto cloning is enabled and performs the transformation accordingly.,False,"This code defines a method named ""optionalTransform"" that takes a downsample strategy and a bitmap transformation as parameters. It checks if auto cloning is enabled, and if so, it calls the method recursively with the same parameters. Otherwise, it applies the downsample strategy and returns the result of applying the transformation."
122,"transform(DownsampleStrategy,Transformation<Bitmap>)",transform downsample strategy transformation ,Method,"centerCrop() circleCrop() transform(DownsampleStrategy,Transformation<Bitmap>) scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>,boolean)",,"com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+downsample(DownsampleStrategy) com.bumptech.glide.request.RequestOptions+downsample(DownsampleStrategy) com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>)",com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled,396,12,16,,"@SuppressWarnings({""WeakerAccess"", ""CheckResult""})
  @NonNull
  @CheckResult
  final RequestOptions transform(@NonNull DownsampleStrategy downsampleStrategy,
      @NonNull Transformation<Bitmap> transformation) {
    if (isAutoCloneEnabled) {
      return clone().transform(downsampleStrategy, transformation);
    }

    downsample(downsampleStrategy);
    return transform(transformation);
  }",True,True,This method is used to transform an image using a specified downsample strategy and transformation. It also checks if auto cloning is enabled and performs the transformation accordingly.,False,"This code defines a method called ""transform"" that takes a downsample strategy and a bitmap transformation as parameters. It checks if auto cloning is enabled, and if so, it creates a clone of the current object and calls the transform method on the clone. Otherwise, it applies the downsample strategy and calls the transform method on the current object. The method returns a RequestOptions object."
123,"scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>)",scale only transform strategy transformation ,Method,fitCenter() centerInside(),,"com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>,boolean)",,243,5,2,,"@NonNull
  private RequestOptions scaleOnlyTransform(
      @NonNull DownsampleStrategy strategy, @NonNull Transformation<Bitmap> transformation) {
    return scaleOnlyTransform(strategy, transformation, true /*isTransformationRequired*/);
  }",True,True,"This method returns a RequestOptions object that applies a scale-only transformation to a Bitmap. It takes a DownsampleStrategy and a Transformation as parameters, and sets the isTransformationRequired flag to true.",False,"The code defines a private method named ""scaleOnlyTransform"" that takes a DownsampleStrategy and a Transformation as parameters. It returns a RequestOptions object. This method internally calls another overloaded version of the same method with an additional boolean parameter."
124,"optionalScaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>)",optional scale only transform strategy transformation ,Method,optionalFitCenter() optionalCenterInside(),,"com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>,boolean)",,252,5,2,,"@NonNull
  private RequestOptions optionalScaleOnlyTransform(
      @NonNull DownsampleStrategy strategy, @NonNull Transformation<Bitmap> transformation) {
    return scaleOnlyTransform(strategy, transformation, false /*isTransformationRequired*/);
  }",True,True,This method returns a RequestOptions object with a specified DownsampleStrategy and Transformation. It is used to apply a scale-only transformation to a Bitmap.,False,"The code defines a private method named ""optionalScaleOnlyTransform"" that takes in two parameters: a DownsampleStrategy object and a Transformation object. It returns a RequestOptions object by calling another method named ""scaleOnlyTransform"" with the provided parameters and a boolean value."
125,"scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>,boolean)",scale only transform strategy transformation is transformation required ,Method,"scaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>) optionalScaleOnlyTransform(DownsampleStrategy,Transformation<Bitmap>)",,"com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+transform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+optionalTransform(DownsampleStrategy,Transformation<Bitmap>)",com.bumptech.glide.request.RequestOptions+isScaleOnlyOrNoTransform,408,10,2,,"@NonNull
  private RequestOptions scaleOnlyTransform(
      @NonNull DownsampleStrategy strategy,
      @NonNull Transformation<Bitmap> transformation,
      boolean isTransformationRequired) {
    RequestOptions result = isTransformationRequired
          ? transform(strategy, transformation) : optionalTransform(strategy, transformation);
    result.isScaleOnlyOrNoTransform = true;
    return result;
  }",True,True,"This method returns a RequestOptions object with a scale-only transformation applied, based on the provided DownsampleStrategy, Transformation, and a boolean indicating if the transformation is required. The isScaleOnlyOrNoTransform flag is set to true in the returned RequestOptions object.",False,"This code defines a private method called ""scaleOnlyTransform"" that takes in a downsample strategy, a bitmap transformation, and a boolean flag indicating if the transformation is required. It returns a RequestOptions object that is either transformed or optionally transformed based on the flag, and sets a flag indicating that only scaling or no transformation is applied."
126,transform(Transformation<Bitmap>),transform transformation applies the given link transformation for link bitmap bitmaps to the default types link bitmap link android graphics drawable bitmap drawable and link com bumptech glide load resource gif gif drawable and throws an exception if asked to transform an unknown type this will override previous calls to link dont transform param transformation any link transformation for link bitmap s see optional transform transformation see optional transform class transformation ,Method,"bitmapTransform(Transformation<Bitmap>) transform(DownsampleStrategy,Transformation<Bitmap>)","com.bumptech.glide.load.resource.gif.GifDrawableTransformation+setFrameTransformation(Transformation<Bitmap>,Bitmap) com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withBitmapTransformation_isFalse() com.bumptech.glide.request.RequestOptionsTest+testApplyingDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withTransform_retrainsTransform()","com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean)",,854,20,1,"/** 
 * Applies the given  {@link Transformation} for{@link Bitmap Bitmaps} to the default types ({@link Bitmap}, {@link android.graphics.drawable.BitmapDrawable}, and {@link com.bumptech.glide.load.resource.gif.GifDrawable}) and throws an exception if asked to transform an unknown type. <p>This will override previous calls to  {@link #dontTransform()}.
 * @param transformation Any {@link Transformation} for {@link Bitmap}s.
 * @see #optionalTransform(Transformation)
 * @see #optionalTransform(Class,Transformation)
 */
","/**
   * Applies the given {@link Transformation} for
   * {@link Bitmap Bitmaps} to the default types ({@link Bitmap},
   * {@link android.graphics.drawable.BitmapDrawable}, and
   * {@link com.bumptech.glide.load.resource.gif.GifDrawable})
   * and throws an exception if asked to transform an unknown type.
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @param transformation Any {@link Transformation} for {@link Bitmap}s.
   * @see #optionalTransform(Transformation)
   * @see #optionalTransform(Class, Transformation)
   */
  // Guaranteed to modify the current object by the isAutoCloneEnabledCheck.
  @SuppressWarnings(""CheckResult"")
  @NonNull
  @CheckResult
  public RequestOptions transform(@NonNull Transformation<Bitmap> transformation) {
    return transform(transformation, /*isRequired=*/ true);
  }",True,True,"The function of this method is to apply a given transformation to Bitmaps and throw an exception if an unknown type is encountered. It overrides previous calls to ""dontTransform()"" and modifies the current object.",False,"The code defines a method called ""transform"" in the RequestOptions class, which applies a given Transformation to Bitmaps. It overrides previous calls to ""dontTransform"" and throws an exception if asked to transform an unknown type."
127,transforms(Transformation<Bitmap>),transforms transformations applies the given link transformation s in the given order for link bitmap bitmaps to the default types link bitmap link android graphics drawable bitmap drawable and link com bumptech glide load resource gif gif drawable and throws an exception if asked to transform an unknown type this will override previous calls to link dont transform param transformations one or more link transformation s for link bitmap s see optional transform transformation see optional transform class transformation ,Method,,,"com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean)",,943,20,1,"/** 
 * Applies the given  {@link Transformation}s in the given order for {@link Bitmap Bitmaps} to the default types ({@link Bitmap}, {@link android.graphics.drawable.BitmapDrawable}, and {@link com.bumptech.glide.load.resource.gif.GifDrawable}) and throws an exception if asked to transform an unknown type. <p>This will override previous calls to  {@link #dontTransform()}.
 * @param transformations One or more {@link Transformation}s for  {@link Bitmap}s.
 * @see #optionalTransform(Transformation)
 * @see #optionalTransform(Class,Transformation)
 */
","/**
   * Applies the given {@link Transformation}s in the given order for
   * {@link Bitmap Bitmaps} to the default types ({@link Bitmap},
   * {@link android.graphics.drawable.BitmapDrawable}, and
   * {@link com.bumptech.glide.load.resource.gif.GifDrawable})
   * and throws an exception if asked to transform an unknown type.
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @param transformations One or more {@link Transformation}s for {@link Bitmap}s.
   * @see #optionalTransform(Transformation)
   * @see #optionalTransform(Class, Transformation)
   */
  // Guaranteed to modify the current object by the isAutoCloneEnabledCheck.
  @SuppressWarnings({""unchecked"", ""varargs"", ""CheckResult""})
  @NonNull
  @CheckResult
  public RequestOptions transforms(@NonNull Transformation<Bitmap>... transformations) {
    return transform(new MultiTransformation<>(transformations), /*isRequired=*/ true);
  }",False,True,The function of this method is to apply the given transformations to Bitmaps in the given order. It throws an exception if asked to transform an unknown type. This method overrides previous calls to dontTransform().,False,The code defines a method called `transforms` which applies the given transformations to Bitmaps in a specific order. It overrides previous calls to `dontTransform()` and throws an exception if an unknown type is encountered. The method returns a `RequestOptions` object.
128,optionalTransform(Transformation<Bitmap>),optional transform transformation applies the given link transformation for link bitmap bitmaps to the default types link bitmap link android graphics drawable bitmap drawable and link com bumptech glide load resource gif gif drawable and ignores unknown types this will override previous calls to link dont transform param transformation any link transformation for link bitmap s see transform transformation see transform class transformation ,Method,,com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withBitmapTransformation_isFalse(),"com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean)",,806,19,1,"/** 
 * Applies the given  {@link Transformation} for{@link Bitmap Bitmaps} to the default types ({@link Bitmap}, {@link android.graphics.drawable.BitmapDrawable}, and {@link com.bumptech.glide.load.resource.gif.GifDrawable}) and ignores unknown types. <p>This will override previous calls to  {@link #dontTransform()}.
 * @param transformation Any {@link Transformation} for {@link Bitmap}s.
 * @see #transform(Transformation)
 * @see #transform(Class,Transformation)
 */
","/**
   * Applies the given {@link Transformation} for
   * {@link Bitmap Bitmaps} to the default types ({@link Bitmap},
   * {@link android.graphics.drawable.BitmapDrawable}, and
   * {@link com.bumptech.glide.load.resource.gif.GifDrawable}) and ignores unknown types.
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @param transformation Any {@link Transformation} for {@link Bitmap}s.
   * @see #transform(Transformation)
   * @see #transform(Class, Transformation)
   */
  // Guaranteed to modify the current object by the isAutoCloneEnabledCheck.
  @SuppressWarnings(""CheckResult"")
  @NonNull
  @CheckResult
  public RequestOptions optionalTransform(@NonNull Transformation<Bitmap> transformation) {
    return transform(transformation, /*isRequired=*/ false);
  }",True,True,"The function of this method is to apply a given transformation to Bitmaps, specifically to the default types of Bitmap, BitmapDrawable, and GifDrawable. It ignores unknown types and overrides previous calls to dontTransform().",False,The code defines a method called `optionalTransform` in the `RequestOptions` class. This method applies a given transformation to default types of Bitmaps and ignores unknown types. It overrides previous calls to `dontTransform()` and returns the modified `RequestOptions` object.
129,"transform(Transformation<Bitmap>,boolean)",transform transformation is required ,Method,"optionalTransform(DownsampleStrategy,Transformation<Bitmap>) transform(Transformation<Bitmap>) transforms(Transformation<Bitmap>) optionalTransform(Transformation<Bitmap>) transform(Transformation<Bitmap>,boolean)",,"com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+transform(Transformation<Bitmap>,boolean) com.bumptech.glide.load.resource.bitmap.DrawableTransformation+DrawableTransformation(Transformation<Bitmap>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.load.resource.bitmap.DrawableTransformation+asBitmapDrawable() com.bumptech.glide.load.resource.bitmap.DrawableTransformation+asBitmapDrawable() com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.load.resource.gif.GifDrawableTransformation+GifDrawableTransformation(Transformation<Bitmap>) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked()",com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled,976,19,2,,"@NonNull
  private RequestOptions transform(
      @NonNull Transformation<Bitmap> transformation, boolean isRequired) {
    if (isAutoCloneEnabled) {
      return clone().transform(transformation, isRequired);
    }

    DrawableTransformation drawableTransformation =
        new DrawableTransformation(transformation, isRequired);
    transform(Bitmap.class, transformation, isRequired);
    transform(Drawable.class, drawableTransformation, isRequired);
    // TODO: remove BitmapDrawable decoder and this transformation.
    // Registering as BitmapDrawable is simply an optimization to avoid some iteration and
    // isAssignableFrom checks when obtaining the transformation later on. It can be removed without
    // affecting the functionality.
    transform(BitmapDrawable.class, drawableTransformation.asBitmapDrawable(), isRequired);
    transform(GifDrawable.class, new GifDrawableTransformation(transformation), isRequired);
    return selfOrThrowIfLocked();
  }",True,True,The function of this method is to transform a given bitmap or drawable using a specified transformation. It also registers the transformation for different types of drawables.,False,"This code defines a private method called ""transform"" that takes a bitmap transformation and a boolean flag as parameters. It performs various transformations on different types of drawables, including bitmaps, drawables, bitmap drawables, and gif drawables. It returns the modified RequestOptions object."
130,"optionalTransform(Class<T>,Transformation<T>)",optional transform resource class transformation applies the given link transformation for any decoded resource ofthe given type and allows unknown resource types to be ignored users can apply different transformations for each resource class applying a link transformation for a resource type that already has a link transformation will override the previous call if any calls are made to the non optional transform methods then attempting to transform an unknown resource class will throw an exception to allow unknown types users must always call the optional version of each method this will override previous calls to link dont transform param resource class the type of resource to transform param transformation the link transformation to apply ,Method,,com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCustomTransformation_isFalse(),"com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean)",,1075,23,1,"/** 
 * Applies the given  {@link Transformation} for any decoded resource ofthe given type and allows unknown resource types to be ignored. <p> Users can apply different transformations for each resource class. Applying a {@link Transformation} for a resource type that already has a{@link Transformation} will override the previous call. </p><p> If any calls are made to the non-optional transform methods, then attempting to transform an unknown resource class will throw an exception. To allow unknown types, users must always call the optional version of each method. </p> <p>This will override previous calls to  {@link #dontTransform()}.
 * @param resourceClass  The type of resource to transform.
 * @param transformation The {@link Transformation} to apply.
 */
","/**
   * Applies the given {@link Transformation} for any decoded resource of
   * the given type and allows unknown resource types to be ignored.
   *
   * <p> Users can apply different transformations for each resource class. Applying a
   * {@link Transformation} for a resource type that already has a
   * {@link Transformation} will override the previous call. </p>
   *
   * <p> If any calls are made to the non-optional transform methods, then attempting to transform
   * an unknown resource class will throw an exception. To allow unknown types, users must always
   * call the optional version of each method. </p>
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @param resourceClass  The type of resource to transform.
   * @param transformation The {@link Transformation} to apply.
   */
  @NonNull
  @CheckResult
  public <T> RequestOptions optionalTransform(
      @NonNull Class<T> resourceClass, @NonNull Transformation<T> transformation) {
    return transform(resourceClass, transformation, /*isRequired=*/ false);
  }",True,True,"The function of this method is to apply a given transformation to any decoded resource of a given type, allowing unknown resource types to be ignored. It overrides previous transformations and can be used for different resource classes.",False,The `optionalTransform` method in this code allows users to apply a given transformation to any decoded resource of a specified type. It overrides previous calls to `dontTransform()` and allows unknown resource types to be ignored by using the optional version of the method.
131,"transform(Class<T>,Transformation<T>,boolean)",transform resource class transformation is required ,Method,"transform(Transformation<Bitmap>,boolean) transform(Transformation<Bitmap>,boolean) transform(Transformation<Bitmap>,boolean) transform(Transformation<Bitmap>,boolean) optionalTransform(Class<T>,Transformation<T>) transform(Class<T>,Transformation<T>,boolean) transform(Class<T>,Transformation<T>)",,"com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) com.bumptech.glide.util.Preconditions+checkNotNull(T) java.util.Map+put(K,V) java.util.Map+put(K,V) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked()",com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION_ALLOWED com.bumptech.glide.request.RequestOptions+isScaleOnlyOrNoTransform com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION_REQUIRED com.bumptech.glide.request.RequestOptions+isTransformationRequired,875,24,2,,"@NonNull
  private <T> RequestOptions transform(
      @NonNull Class<T> resourceClass,
      @NonNull Transformation<T> transformation,
      boolean isRequired) {
    if (isAutoCloneEnabled) {
      return clone().transform(resourceClass, transformation, isRequired);
    }

    Preconditions.checkNotNull(resourceClass);
    Preconditions.checkNotNull(transformation);
    transformations.put(resourceClass, transformation);
    fields |= TRANSFORMATION;
    isTransformationAllowed = true;
    fields |= TRANSFORMATION_ALLOWED;
    // Always set to false here. Known scale only transformations will call this method and then
    // set isScaleOnlyOrNoTransform to true immediately after.
    isScaleOnlyOrNoTransform = false;
    if (isRequired) {
      fields |= TRANSFORMATION_REQUIRED;
      isTransformationRequired = true;
    }
    return selfOrThrowIfLocked();
  }",True,True,"This method serves to transform a resource by applying a given transformation. It also handles cloning, checks for null values, updates transformation-related fields, and returns the transformed resource.",False,"This code defines a private method called ""transform"" that takes a resource class, a transformation, and a boolean flag as parameters. It performs various operations such as cloning, checking for null values, setting flags, and returning a result. The method is used to apply transformations to a resource in a specific way."
132,"transform(Class<T>,Transformation<T>)",transform resource class transformation applies the given link transformation for any decoded resource ofthe given type and throws if asked to transform an unknown resource type this will override previous calls to link dont transform param resource class the type of resource to transform param transformation the link transformation to apply see optional transform class transformation ,Method,,com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCustomTransformation_isFalse() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationSet_afterApplyingOptionsWithTransform_isTrue(),"com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean) com.bumptech.glide.request.RequestOptions+transform(Class<T>,Transformation<T>,boolean)",,761,18,1,"/** 
 * Applies the given  {@link Transformation} for any decoded resource ofthe given type and throws if asked to transform an unknown resource type. <p>This will override previous calls to  {@link #dontTransform()}.
 * @param resourceClass  The type of resource to transform.
 * @param transformation The {@link Transformation} to apply.
 * @see #optionalTransform(Class,Transformation)
 */
","/**
   * Applies the given {@link Transformation} for any decoded resource of
   * the given type and throws if asked to transform an unknown resource type.
   *
   * <p>This will override previous calls to {@link #dontTransform()}.
   *
   * @param resourceClass  The type of resource to transform.
   * @param transformation The {@link Transformation} to apply.
   * @see #optionalTransform(Class, Transformation)
   */
  // Guaranteed to modify the current object by the isAutoCloneEnabledCheck.
  @SuppressWarnings(""CheckResult"")
  @NonNull
  @CheckResult
  public <T> RequestOptions transform(
      @NonNull Class<T> resourceClass, @NonNull Transformation<T> transformation) {
    return transform(resourceClass, transformation, /*isRequired=*/ true);
  }",True,True,"The function of this method is to apply a given transformation to a decoded resource of a specific type. It will throw an exception if asked to transform an unknown resource type. This method overrides previous calls to ""dontTransform()"" and guarantees to modify the current object.",False,"The given code is a method named ""transform"" that applies a given transformation to any decoded resource of a specified type. It overrides previous calls to ""dontTransform()"" and throws an exception if asked to transform an unknown resource type."
133,dontTransform(),dont transform removes all applied link transformation transformations for allresource classes and allows unknown resource types to be transformed without throwing an exception ,Method,noTransformation() dontTransform(),com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleAndThenDontTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleAndAppliedDontTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationSet_afterDontTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationAllowed_afterDontTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationRequired_afterDontTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testApplyingDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withDontTransform_retainsDontTransform(),com.bumptech.glide.request.RequestOptions+dontTransform() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+dontTransform() java.util.Map+clear() java.util.Map+clear() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked(),com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION com.bumptech.glide.request.RequestOptions+isTransformationRequired com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION_REQUIRED com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION_ALLOWED com.bumptech.glide.request.RequestOptions+isScaleOnlyOrNoTransform,622,21,1,"/** 
 * Removes all applied  {@link Transformation Transformations} for allresource classes and allows unknown resource types to be transformed without throwing an exception.
 */
","/**
   * Removes all applied {@link Transformation Transformations} for all
   * resource classes and allows unknown resource types to be transformed without throwing an
   * exception.
   */
  @NonNull
  @CheckResult
  public RequestOptions dontTransform() {
    if (isAutoCloneEnabled) {
      return clone().dontTransform();
    }

    transformations.clear();
    fields &= ~TRANSFORMATION;
    isTransformationRequired = false;
    fields &= ~TRANSFORMATION_REQUIRED;
    isTransformationAllowed = false;
    fields |= TRANSFORMATION_ALLOWED;
    isScaleOnlyOrNoTransform = true;
    return selfOrThrowIfLocked();
  }",False,True,This method removes all applied transformations for all resource classes and allows unknown resource types to be transformed without throwing an exception.,False,The `dontTransform()` method is used to remove all applied transformations for resource classes and allows unknown resource types to be transformed without throwing an exception. It returns a modified `RequestOptions` object with the transformations cleared and the necessary flags updated.
134,dontAnimate(),dont animate disables resource decoders that return animated resources so any resource returned will be static to disable transitions fades etc use link com bumptech glide transition options dont transition ,Method,noAnimation(),com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withScaleOnlyAndAppliedWithoutTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnlyAndAppliedWithoutTransform_isFalse(),"com.bumptech.glide.request.RequestOptions+set(Option<T>,T) com.bumptech.glide.request.RequestOptions+set(Option<T>,T)",com.bumptech.glide.load.resource.gif.GifOptions+DISABLE_ANIMATION,476,14,1,"/** 
 * Disables resource decoders that return animated resources so any resource returned will be static. <p> To disable transitions (fades etc) use {@link com.bumptech.glide.TransitionOptions#dontTransition()}</p>
 */
","/**
   * Disables resource decoders that return animated resources so any resource returned will be
   * static.
   *
   * <p> To disable transitions (fades etc) use
   * {@link com.bumptech.glide.TransitionOptions#dontTransition()}</p>
   */
  // Guaranteed to modify the current object by the isAutoCloneEnabledCheck.
  @SuppressWarnings(""CheckResult"")
  @NonNull
  @CheckResult
  public RequestOptions dontAnimate() {
    return set(GifOptions.DISABLE_ANIMATION, true);
  }",False,True,"The method disables resource decoders that return animated resources, ensuring that any resource returned will be static. It modifies the current object by setting a specific option to disable animation.",False,"The given code is a method named ""dontAnimate()"" in the RequestOptions class. It disables resource decoders that return animated resources, ensuring that any resource returned will be static. It returns a RequestOptions object with the GifOptions.DISABLE_ANIMATION set to true."
135,apply(RequestOptions),apply other updates this options set with any options that are explicitly set in the given code request options object and returns this object if link auto clone is disabled ora new code request options object if link auto clone is enabled code apply only replaces those values that are explicitly set in the given code request options if you need to completely reset all previously set options create a new code request options object instead of using this method the options that will be set to values in the returned code request options object is theintersection of the set of options in this code request options object and the given code request options object that were explicitly set if the values of any of the optionsconflict the values in the returned code request options object will be set to those in thegiven code request options object ,Method,apply(RequestOptions),com.bumptech.glide.RequestBuilder+apply(RequestOptions) com.bumptech.glide.RequestManager+updateRequestOptions(RequestOptions) com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleAndAppliedDontTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withDontTransformAndAppliedNonScaleTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnly_andAppliedWithScaleOnly_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withScaleOnlyAndAppliedWithoutTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnlyAndAppliedWithoutTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationSet_afterApplyingOptionsWithTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withDontTransform_retainsDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withTransform_retrainsTransform() com.bumptech.glide.request.RequestOptionsTest+placeholderIdFlag_afterApplyingIdViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+placeholderFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+fallbackFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+fallbackIdFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+errorFlag_afterApplyingViaOtherRequestOptions_isSet() com.bumptech.glide.request.RequestOptionsTest+errorIdFlag_afterApplyingViaOtherRequestOptions_isSet(),"com.bumptech.glide.request.RequestOptions+apply(RequestOptions) com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+clone() com.bumptech.glide.request.RequestOptions+apply(RequestOptions) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) java.util.Map+putAll(Map) java.util.Map+putAll(Map) com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int) java.util.Map+clear() java.util.Map+clear() com.bumptech.glide.load.Options+putAll(Options) com.bumptech.glide.load.Options+putAll(Options) com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked() com.bumptech.glide.request.RequestOptions+selfOrThrowIfLocked()",com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+SIZE_MULTIPLIER com.bumptech.glide.request.RequestOptions+sizeMultiplier com.bumptech.glide.request.RequestOptions+sizeMultiplier com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+USE_UNLIMITED_SOURCE_GENERATORS_POOL com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+USE_ANIMATION_POOL com.bumptech.glide.request.RequestOptions+useAnimationPool com.bumptech.glide.request.RequestOptions+useAnimationPool com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+DISK_CACHE_STRATEGY com.bumptech.glide.request.RequestOptions+diskCacheStrategy com.bumptech.glide.request.RequestOptions+diskCacheStrategy com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PRIORITY com.bumptech.glide.request.RequestOptions+priority com.bumptech.glide.request.RequestOptions+priority com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_PLACEHOLDER com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_ID com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_ID com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ERROR_PLACEHOLDER com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER_ID com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER_ID com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+PLACEHOLDER com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+IS_CACHEABLE com.bumptech.glide.request.RequestOptions+isCacheable com.bumptech.glide.request.RequestOptions+isCacheable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+OVERRIDE com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+overrideHeight com.bumptech.glide.request.RequestOptions+overrideHeight com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+SIGNATURE com.bumptech.glide.request.RequestOptions+signature com.bumptech.glide.request.RequestOptions+signature com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+RESOURCE_CLASS com.bumptech.glide.request.RequestOptions+resourceClass com.bumptech.glide.request.RequestOptions+resourceClass com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK_ID com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK_ID com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+FALLBACK com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+THEME com.bumptech.glide.request.RequestOptions+theme com.bumptech.glide.request.RequestOptions+theme com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION_ALLOWED com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION_REQUIRED com.bumptech.glide.request.RequestOptions+isTransformationRequired com.bumptech.glide.request.RequestOptions+isTransformationRequired com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+isScaleOnlyOrNoTransform com.bumptech.glide.request.RequestOptions+isScaleOnlyOrNoTransform com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+ONLY_RETRIEVE_FROM_CACHE com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION com.bumptech.glide.request.RequestOptions+isTransformationRequired com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+TRANSFORMATION_REQUIRED com.bumptech.glide.request.RequestOptions+isScaleOnlyOrNoTransform com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+fields com.bumptech.glide.request.RequestOptions+options com.bumptech.glide.request.RequestOptions+options,4023,111,1,"/** 
 * Updates this options set with any options that are explicitly set in the given {@code RequestOptions} object and returns this object if {@link #autoClone()} is disabled ora new  {@code RequestOptions} object if {@link #autoClone()} is enabled.<p> {@code #apply} only replaces those values that are explicitly set in the given{@code RequestOptions}. If you need to completely reset all previously set options, create a new  {@code RequestOptions} object instead of using this method.<p>The options that will be set to values in the returned  {@code RequestOptions} object is theintersection of the set of options in this  {@code RequestOptions} object and the given{@code RequestOptions} object that were explicitly set. If the values of any of the optionsconflict, the values in the returned  {@code RequestOptions} object will be set to those in thegiven  {@code RequestOptions} object.
 */
","/**
   * Updates this options set with any options that are explicitly set in the given
   * {@code RequestOptions} object and returns this object if {@link #autoClone()} is disabled or
   * a new {@code RequestOptions} object if {@link #autoClone()} is enabled.
   *
   * <p>{@code #apply} only replaces those values that are explicitly set in the given
   * {@code RequestOptions}. If you need to completely reset all previously set options, create a
   * new {@code RequestOptions} object instead of using this method.
   *
   * <p>The options that will be set to values in the returned {@code RequestOptions} object is the
   * intersection of the set of options in this {@code RequestOptions} object and the given
   * {@code RequestOptions} object that were explicitly set. If the values of any of the options
   * conflict, the values in the returned {@code RequestOptions} object will be set to those in the
   * given {@code RequestOptions} object.
   */
  @NonNull
  @CheckResult
  public RequestOptions apply(@NonNull RequestOptions other) {
    if (isAutoCloneEnabled) {
      return clone().apply(other);
    }

    if (isSet(other.fields, SIZE_MULTIPLIER)) {
      sizeMultiplier = other.sizeMultiplier;
    }
    if (isSet(other.fields, USE_UNLIMITED_SOURCE_GENERATORS_POOL)) {
      useUnlimitedSourceGeneratorsPool = other.useUnlimitedSourceGeneratorsPool;
    }
    if (isSet(other.fields, USE_ANIMATION_POOL)) {
      useAnimationPool = other.useAnimationPool;
    }
    if (isSet(other.fields, DISK_CACHE_STRATEGY)) {
      diskCacheStrategy = other.diskCacheStrategy;
    }
    if (isSet(other.fields, PRIORITY)) {
      priority = other.priority;
    }
    if (isSet(other.fields, ERROR_PLACEHOLDER)) {
      errorPlaceholder = other.errorPlaceholder;
      errorId = 0;
      fields &= ~ERROR_ID;
    }
    if (isSet(other.fields, ERROR_ID)) {
      errorId = other.errorId;
      errorPlaceholder = null;
      fields &= ~ERROR_PLACEHOLDER;
    }
    if (isSet(other.fields, PLACEHOLDER)) {
      placeholderDrawable = other.placeholderDrawable;
      placeholderId = 0;
      fields &= ~PLACEHOLDER_ID;
    }
    if (isSet(other.fields, PLACEHOLDER_ID)) {
      placeholderId = other.placeholderId;
      placeholderDrawable = null;
      fields &= ~PLACEHOLDER;
    }
    if (isSet(other.fields, IS_CACHEABLE)) {
      isCacheable = other.isCacheable;
    }
    if (isSet(other.fields, OVERRIDE)) {
      overrideWidth = other.overrideWidth;
      overrideHeight = other.overrideHeight;
    }
    if (isSet(other.fields, SIGNATURE)) {
      signature = other.signature;
    }
    if (isSet(other.fields, RESOURCE_CLASS)) {
      resourceClass = other.resourceClass;
    }
    if (isSet(other.fields, FALLBACK)) {
      fallbackDrawable = other.fallbackDrawable;
      fallbackId = 0;
      fields &= ~FALLBACK_ID;
    }
    if (isSet(other.fields, FALLBACK_ID)) {
      fallbackId = other.fallbackId;
      fallbackDrawable = null;
      fields &= ~FALLBACK;
    }
    if (isSet(other.fields, THEME)) {
      theme = other.theme;
    }
    if (isSet(other.fields, TRANSFORMATION_ALLOWED)) {
      isTransformationAllowed = other.isTransformationAllowed;
    }
    if (isSet(other.fields, TRANSFORMATION_REQUIRED)) {
      isTransformationRequired = other.isTransformationRequired;
    }
    if (isSet(other.fields, TRANSFORMATION)) {
      transformations.putAll(other.transformations);
      isScaleOnlyOrNoTransform = other.isScaleOnlyOrNoTransform;
    }
    if (isSet(other.fields, ONLY_RETRIEVE_FROM_CACHE)) {
      onlyRetrieveFromCache = other.onlyRetrieveFromCache;
    }

    // Applying options with dontTransform() is expected to clear our transformations.
    if (!isTransformationAllowed) {
      transformations.clear();
      fields &= ~TRANSFORMATION;
      isTransformationRequired = false;
      fields &= ~TRANSFORMATION_REQUIRED;
      isScaleOnlyOrNoTransform = true;
    }

    fields |= other.fields;
    options.putAll(other.options);

    return selfOrThrowIfLocked();
  }",True,True,"The function of this method is to update the current options set with any options that are explicitly set in the given RequestOptions object. It returns either the updated object itself if autoClone is disabled, or a new RequestOptions object if autoClone is enabled. The method replaces only the values that are explicitly set in the given RequestOptions object, and if there are conflicting values, the method sets the values in the returned RequestOptions object to those in the given RequestOptions object.",False,"The `apply` method updates the current `RequestOptions` object with the explicitly set options from another `RequestOptions` object. If `autoClone` is enabled, it returns a new `RequestOptions` object with the updated options. The method also handles conflicts between conflicting options and clears transformations if `dontTransform` is applied."
136,equals(Object),equals o ,Method,,com.bumptech.glide.request.SingleRequest+isEquivalentTo(Request),"java.lang.Float+compare(float,float) java.lang.Float+compare(float,float) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) java.lang.Object+equals(Object) java.lang.Object+equals(Object) com.bumptech.glide.load.Options+equals(Object) com.bumptech.glide.load.Options+equals(Object) java.util.Map+equals(Object) java.util.Map+equals(Object) java.lang.Object+equals(Object) java.lang.Object+equals(Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object) com.bumptech.glide.util.Util+bothNullOrEqual(Object,Object)",com.bumptech.glide.request.RequestOptions+sizeMultiplier com.bumptech.glide.request.RequestOptions+sizeMultiplier com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+isCacheable com.bumptech.glide.request.RequestOptions+isCacheable com.bumptech.glide.request.RequestOptions+overrideHeight com.bumptech.glide.request.RequestOptions+overrideHeight com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+isTransformationRequired com.bumptech.glide.request.RequestOptions+isTransformationRequired com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache com.bumptech.glide.request.RequestOptions+diskCacheStrategy com.bumptech.glide.request.RequestOptions+diskCacheStrategy com.bumptech.glide.request.RequestOptions+priority com.bumptech.glide.request.RequestOptions+priority com.bumptech.glide.request.RequestOptions+options com.bumptech.glide.request.RequestOptions+options com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+resourceClass com.bumptech.glide.request.RequestOptions+resourceClass com.bumptech.glide.request.RequestOptions+signature com.bumptech.glide.request.RequestOptions+signature com.bumptech.glide.request.RequestOptions+theme com.bumptech.glide.request.RequestOptions+theme,1418,28,1,,"@Override
  public boolean equals(Object o) {
    if (o instanceof RequestOptions) {
      RequestOptions other = (RequestOptions) o;
      return Float.compare(other.sizeMultiplier, sizeMultiplier) == 0
          && errorId == other.errorId
          && Util.bothNullOrEqual(errorPlaceholder, other.errorPlaceholder)
          && placeholderId == other.placeholderId
          && Util.bothNullOrEqual(placeholderDrawable, other.placeholderDrawable)
          && fallbackId == other.fallbackId
          && Util.bothNullOrEqual(fallbackDrawable, other.fallbackDrawable)
          && isCacheable == other.isCacheable
          && overrideHeight == other.overrideHeight
          && overrideWidth == other.overrideWidth
          && isTransformationRequired == other.isTransformationRequired
          && isTransformationAllowed == other.isTransformationAllowed
          && useUnlimitedSourceGeneratorsPool == other.useUnlimitedSourceGeneratorsPool
          && onlyRetrieveFromCache == other.onlyRetrieveFromCache
          && diskCacheStrategy.equals(other.diskCacheStrategy)
          && priority == other.priority
          && options.equals(other.options)
          && transformations.equals(other.transformations)
          && resourceClass.equals(other.resourceClass)
          && Util.bothNullOrEqual(signature, other.signature)
          && Util.bothNullOrEqual(theme, other.theme);
    }
    return false;
  }",True,True,"This method is used to compare two objects of the RequestOptions class for equality. It checks if all the instance variables of the two objects are equal and returns true if they are, otherwise it returns false.",False,"This code overrides the equals() method to compare two RequestOptions objects for equality. It checks if all the instance variables of the two objects are equal, including sizeMultiplier, errorId, placeholderId, fallbackId, isCacheable, overrideHeight, overrideWidth, isTransformationRequired, isTransformationAllowed, useUnlimitedSourceGeneratorsPool, onlyRetrieveFromCache, diskCacheStrategy, priority, options, transformations, resourceClass, signature, and theme. If all the variables are equal, it returns true; otherwise, it returns false."
137,hashCode(),hash code ,Method,,,"com.bumptech.glide.util.Util+hashCode(float) com.bumptech.glide.util.Util+hashCode(float) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(int,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(boolean,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int) com.bumptech.glide.util.Util+hashCode(Object,int)",com.bumptech.glide.request.RequestOptions+sizeMultiplier com.bumptech.glide.request.RequestOptions+errorId com.bumptech.glide.request.RequestOptions+errorPlaceholder com.bumptech.glide.request.RequestOptions+placeholderId com.bumptech.glide.request.RequestOptions+placeholderDrawable com.bumptech.glide.request.RequestOptions+fallbackId com.bumptech.glide.request.RequestOptions+fallbackDrawable com.bumptech.glide.request.RequestOptions+isCacheable com.bumptech.glide.request.RequestOptions+overrideHeight com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+isTransformationRequired com.bumptech.glide.request.RequestOptions+isTransformationAllowed com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache com.bumptech.glide.request.RequestOptions+diskCacheStrategy com.bumptech.glide.request.RequestOptions+priority com.bumptech.glide.request.RequestOptions+options com.bumptech.glide.request.RequestOptions+transformations com.bumptech.glide.request.RequestOptions+resourceClass com.bumptech.glide.request.RequestOptions+signature com.bumptech.glide.request.RequestOptions+theme,1243,25,1,,"@Override
  public int hashCode() {
    int hashCode = Util.hashCode(sizeMultiplier);
    hashCode = Util.hashCode(errorId, hashCode);
    hashCode = Util.hashCode(errorPlaceholder, hashCode);
    hashCode = Util.hashCode(placeholderId, hashCode);
    hashCode = Util.hashCode(placeholderDrawable, hashCode);
    hashCode = Util.hashCode(fallbackId, hashCode);
    hashCode = Util.hashCode(fallbackDrawable, hashCode);
    hashCode = Util.hashCode(isCacheable, hashCode);
    hashCode = Util.hashCode(overrideHeight, hashCode);
    hashCode = Util.hashCode(overrideWidth, hashCode);
    hashCode = Util.hashCode(isTransformationRequired, hashCode);
    hashCode = Util.hashCode(isTransformationAllowed, hashCode);
    hashCode = Util.hashCode(useUnlimitedSourceGeneratorsPool, hashCode);
    hashCode = Util.hashCode(onlyRetrieveFromCache, hashCode);
    hashCode = Util.hashCode(diskCacheStrategy, hashCode);
    hashCode = Util.hashCode(priority, hashCode);
    hashCode = Util.hashCode(options, hashCode);
    hashCode = Util.hashCode(transformations, hashCode);
    hashCode = Util.hashCode(resourceClass, hashCode);
    hashCode = Util.hashCode(signature, hashCode);
    hashCode = Util.hashCode(theme, hashCode);
    return hashCode;
  }",True,True,This method calculates the hash code for an object based on the values of its fields. It uses the Util.hashCode() method to combine the hash codes of each field.,False,This code overrides the `hashCode()` method to generate a hash code for an object based on its properties. It uses the `Util.hashCode()` method to calculate the hash code by combining the hash codes of each property. The resulting hash code can be used for efficient storage and retrieval of objects in data structures like hash maps.
138,lock(),lock throws if any further mutations are attempted once locked the only way to unlock is to use link clone ,Method,autoClone(),com.bumptech.glide.GlideBuilder+build(Context),,com.bumptech.glide.request.RequestOptions+isLocked,320,12,1,"/** 
 * Throws if any further mutations are attempted. <p> Once locked, the only way to unlock is to use  {@link #clone()} </p>
 */
","/**
   * Throws if any further mutations are attempted.
   *
   * <p> Once locked, the only way to unlock is to use {@link #clone()} </p>
   */
  @NonNull
  @SuppressWarnings(""unchecked"")
  public RequestOptions lock() {
    isLocked = true;
    // This is the only place we should not check locked.
    return this;
  }",False,True,"The function of this method is to lock the object, preventing any further mutations. The only way to unlock it is by using the clone() method.",False,"The given code is a method named ""lock"" in the ""RequestOptions"" class. It sets a boolean variable ""isLocked"" to true, indicating that further mutations are not allowed. The method returns the current instance of the ""RequestOptions"" class."
139,autoClone(),auto clone similar to link lock except that mutations cause a link clone operation to happenbefore the mutation resulting in all methods returning a new object and leaving the original locked object unmodified auto clone is not retained by cloned objects returned from mutations the cloned objects are mutable and are not locked ,Method,skipMemoryCacheOf(boolean) skipMemoryCacheOf(boolean) fitCenterTransform() centerInsideTransform() centerCropTransform() circleCropTransform() noTransformation() noAnimation(),"com.bumptech.glide.RequestBuilder+into(Y,RequestListener<TranscodeType>,RequestOptions) com.bumptech.glide.RequestManager+setRequestOptions(RequestOptions)",java.lang.IllegalStateException+IllegalStateException(String) com.bumptech.glide.request.RequestOptions+lock() com.bumptech.glide.request.RequestOptions+lock(),com.bumptech.glide.request.RequestOptions+isLocked com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled,658,17,1,"/** 
 * Similar to  {@link #lock()} except that mutations cause a {@link #clone()} operation to happenbefore the mutation resulting in all methods returning a new Object and leaving the original locked object unmodified. <p>Auto clone is not retained by cloned objects returned from mutations. The cloned objects are mutable and are not locked.
 */
","/**
   * Similar to {@link #lock()} except that mutations cause a {@link #clone()} operation to happen
   * before the mutation resulting in all methods returning a new Object and leaving the original
   * locked object unmodified.
   *
   * <p>Auto clone is not retained by cloned objects returned from mutations. The cloned objects
   * are mutable and are not locked.
   */
  @NonNull
  public RequestOptions autoClone() {
    if (isLocked && !isAutoCloneEnabled) {
      throw new IllegalStateException(""You cannot auto lock an already locked options object""
          + "", try clone() first"");
    }
    isAutoCloneEnabled = true;
    return lock();
  }",False,True,"The function of this method is to enable auto cloning of the RequestOptions object. When this method is called, mutations on the object will result in a clone operation, returning a new object while leaving the original locked object unmodified.",False,The `autoClone()` method is used to create a new instance of the `RequestOptions` object with the option to automatically clone the object before any mutations. This allows for the original object to remain unmodified while the cloned objects can be mutated. The method returns the locked object with the auto clone feature enabled.
140,selfOrThrowIfLocked(),self or throw if locked ,Method,"sizeMultiplier(float) useUnlimitedSourceGeneratorsPool(boolean) useAnimationPool(boolean) onlyRetrieveFromCache(boolean) diskCacheStrategy(DiskCacheStrategy) priority(Priority) placeholder(Drawable) placeholder(int) fallback(Drawable) fallback(int) error(Drawable) error(int) theme(Resources.Theme) skipMemoryCache(boolean) override(int,int) signature(Key) set(Option<T>,T) decode(Class<?>) transform(Transformation<Bitmap>,boolean) transform(Class<T>,Transformation<T>,boolean) dontTransform() apply(RequestOptions)",,java.lang.IllegalStateException+IllegalStateException(String),com.bumptech.glide.request.RequestOptions+isLocked,237,8,2,,"@NonNull
  @SuppressWarnings(""unchecked"")
  private RequestOptions selfOrThrowIfLocked() {
    if (isLocked) {
      throw new IllegalStateException(""You cannot modify locked RequestOptions, consider clone()"");
    }
    return this;
  }",False,True,"This method checks if the RequestOptions object is locked, and throws an exception if it is. Otherwise, it returns the object itself.",False,"The method `selfOrThrowIfLocked()` checks if the `isLocked` flag is set and throws an exception if it is, indicating that the RequestOptions object is locked and cannot be modified. Otherwise, it returns the RequestOptions object itself."
141,isAutoCloneEnabled(),is auto clone enabled ,Method,,com.bumptech.glide.test.GlideOptions+test() com.bumptech.glide.test.GlideOptions+centerCrop() com.bumptech.glide.test.GlideOptions+centerCrop() com.bumptech.glide.test.GlideOptions+test() com.bumptech.glide.test.GlideOptions+test() com.bumptech.glide.test.GlideOptions+squareThumb(),,com.bumptech.glide.request.RequestOptions+isAutoCloneEnabled,75,3,4,,"protected boolean isAutoCloneEnabled() {
    return isAutoCloneEnabled;
  }",True,True,This method serves to determine whether the auto clone feature is enabled or not. It returns a boolean value indicating the status of the auto clone feature.,False,"The code defines a protected method named ""isAutoCloneEnabled"" that returns a boolean value. It is used to check whether auto cloning is enabled or not."
142,isDiskCacheStrategySet(),is disk cache strategy set ,Method,,com.bumptech.glide.RequestBuilder+load(byte[]) com.bumptech.glide.request.RequestOptionsTest+isDiskCacheStrategySet_withoutDiskCacheStrategy_isFalse() com.bumptech.glide.request.RequestOptionsTest+isDiskCacheStrategySet_withDiskCacheStrategyDefault_isTrue() com.bumptech.glide.request.RequestOptionsTest+isDiskCacheStrategySet_withDiskCacheStrategyNonDefault_isTrue(),com.bumptech.glide.request.RequestOptions+isSet(int) com.bumptech.glide.request.RequestOptions+isSet(int),com.bumptech.glide.request.RequestOptions+DISK_CACHE_STRATEGY,90,3,17,,"public final boolean isDiskCacheStrategySet() {
    return isSet(DISK_CACHE_STRATEGY);
  }",True,True,"This method checks if the disk cache strategy is set by calling the isSet method with the DISK_CACHE_STRATEGY parameter, and returns a boolean value indicating whether it is set or not.",False,"The `isDiskCacheStrategySet()` method is a boolean function that checks if the disk cache strategy is set. It returns `true` if the disk cache strategy is set, and `false` otherwise."
143,isSkipMemoryCacheSet(),is skip memory cache set ,Method,,com.bumptech.glide.RequestBuilder+load(byte[]) com.bumptech.glide.request.RequestOptionsTest+isSkipMemoryCacheSet_withoutSkipMemoryCache_isFalse() com.bumptech.glide.request.RequestOptionsTest+isSkipMemoryCacheSet_withSkipMemoryCacheTrue_isTrue() com.bumptech.glide.request.RequestOptionsTest+isSkipMemoryCacheSet_withSkipMemoryCacheFalse_isTrue(),com.bumptech.glide.request.RequestOptions+isSet(int) com.bumptech.glide.request.RequestOptions+isSet(int),com.bumptech.glide.request.RequestOptions+IS_CACHEABLE,81,3,17,,"public final boolean isSkipMemoryCacheSet() {
    return isSet(IS_CACHEABLE);
  }",True,True,This method serves to check if the skip memory cache flag is set by returning the value of the isSet method with the IS_CACHEABLE flag as the parameter.,False,"The code defines a method named ""isSkipMemoryCacheSet"" which returns a boolean value. It checks if a specific flag named ""IS_CACHEABLE"" is set and returns true if it is, indicating that the memory cache should be skipped."
144,getTransformations(),get transformations ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int) com.bumptech.glide.request.RequestOptionsTest+testApplyingDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withDontTransform_retainsDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withTransform_retrainsTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyMultiTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyMultiTransform()",,com.bumptech.glide.request.RequestOptions+transformations,111,4,17,,"@NonNull
  public final Map<Class<?>, Transformation<?>> getTransformations() {
    return transformations;
  }",True,True,"This method returns a map of transformations, where the key is a class and the value is a transformation. The method is annotated with @NonNull, indicating that it will not return null.",False,"This code defines a method named ""getTransformations"" that returns a map of transformations. The map contains classes as keys and Transformation objects as values. The method is annotated with ""@NonNull"" to indicate that it will not return null."
145,isTransformationRequired(),is transformation required ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int) com.bumptech.glide.request.RequestOptionsTest+testIsTransformationRequired_byDefault_isFalse() com.bumptech.glide.request.RequestOptionsTest+testIsTransformationRequired_afterDontTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+testApplyingDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withDontTransform_overridesTransformations() com.bumptech.glide.request.RequestOptionsTest+testApplyingOptions_withTransformation_overridesDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withDontTransform_retainsDontTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyingDefaultOptions_withTransform_retrainsTransform() com.bumptech.glide.request.RequestOptionsTest+testApplyMultiTransform()",,com.bumptech.glide.request.RequestOptions+isTransformationRequired,126,4,17,,"@SuppressWarnings(""WeakerAccess"")
  public final boolean isTransformationRequired() {
    return isTransformationRequired;
  }",True,True,The function of this method is to check whether a transformation is required. It returns a boolean value indicating whether the transformation is needed or not.,False,"The code contains a public method named ""isTransformationRequired"" that returns a boolean value. It is used to determine if a transformation is required based on the value of the ""isTransformationRequired"" variable. The method is annotated with ""@SuppressWarnings(""WeakerAccess"")"" to suppress any warnings related to weaker access."
146,getOptions(),get options ,Method,,"com.bumptech.glide.Glide+Glide(Context,Engine,MemoryCache,BitmapPool,ArrayPool,RequestManagerRetriever,ConnectivityMonitorFactory,int,RequestOptions,Map<Class<?>,TransitionOptions<?,?>>,List<RequestListener<Object>>) com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+options,70,4,17,,"@NonNull
  public final Options getOptions() {
    return options;
  }",True,True,The method serves to return the options.,False,"The code defines a method named ""getOptions"" that returns an object of type ""Options"". The method is annotated with ""@NonNull"" to indicate that it will never return null."
147,getResourceClass(),get resource class ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+resourceClass,83,4,17,,"@NonNull
  public final Class<?> getResourceClass() {
    return resourceClass;
  }",True,True,The function of this method is to return the resource class.,False,"The code defines a method named `getResourceClass()` that returns an instance of the `Class` class. The method is annotated with `@NonNull`, indicating that it will never return a null value."
148,getDiskCacheStrategy(),get disk cache strategy ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+diskCacheStrategy,100,4,17,,"@NonNull
  public final DiskCacheStrategy getDiskCacheStrategy() {
    return diskCacheStrategy;
  }",True,True,This method returns the disk cache strategy.,False,"This code defines a method named ""getDiskCacheStrategy"" that returns the value of the ""diskCacheStrategy"" variable. The method is annotated with ""@NonNull"" to indicate that it will never return a null value."
149,getErrorPlaceholder(),get error placeholder ,Method,,com.bumptech.glide.request.SingleRequest+getErrorDrawable(),,com.bumptech.glide.request.RequestOptions+errorPlaceholder,126,5,17,,"@SuppressWarnings(""WeakerAccess"")
  @Nullable
  public final Drawable getErrorPlaceholder() {
    return errorPlaceholder;
  }",True,True,"This method serves to retrieve the error placeholder drawable. It is annotated with @SuppressWarnings(""WeakerAccess"") to suppress warnings about weaker access. The @Nullable annotation indicates that the return value can be null.",False,"The code defines a public method named `getErrorPlaceholder()` that returns a nullable Drawable object. It is annotated with `@SuppressWarnings(""WeakerAccess"")` to suppress weaker access warnings."
150,getErrorId(),get error id ,Method,,com.bumptech.glide.request.SingleRequest+getErrorDrawable() com.bumptech.glide.request.SingleRequest+getErrorDrawable(),,com.bumptech.glide.request.RequestOptions+errorId,91,4,17,,"@SuppressWarnings(""WeakerAccess"")
  public final int getErrorId() {
    return errorId;
  }",True,True,This method serves to retrieve the value of the errorId variable.,False,"The code defines a public method named ""getErrorId"" that returns an integer value. It is marked with the ""@SuppressWarnings"" annotation to suppress weaker access warnings."
151,getPlaceholderId(),get placeholder id ,Method,,com.bumptech.glide.request.SingleRequest+getPlaceholderDrawable() com.bumptech.glide.request.SingleRequest+getPlaceholderDrawable(),,com.bumptech.glide.request.RequestOptions+placeholderId,103,4,17,,"@SuppressWarnings(""WeakerAccess"")
  public final int getPlaceholderId() {
    return placeholderId;
  }",True,True,This method serves to retrieve the value of the placeholderId variable.,False,"The code defines a public method named ""getPlaceholderId"" that returns an integer value. It is marked with a ""@SuppressWarnings"" annotation to suppress weaker access warnings."
152,getPlaceholderDrawable(),get placeholder drawable ,Method,,com.bumptech.glide.request.SingleRequest+getPlaceholderDrawable(),,com.bumptech.glide.request.RequestOptions+placeholderDrawable,132,5,17,,"@SuppressWarnings(""WeakerAccess"")
  @Nullable
  public final Drawable getPlaceholderDrawable() {
    return placeholderDrawable;
  }",True,True,"This method serves as a getter function for the placeholderDrawable variable. It returns the value of the placeholderDrawable variable, which is of type Drawable.",False,"The code defines a public method named ""getPlaceholderDrawable"" that returns a Drawable object. It is annotated with ""@Nullable"" to indicate that the returned value can be null. The method is also annotated with ""@SuppressWarnings(""WeakerAccess"")"" to suppress any warnings related to weaker access privileges."
153,getFallbackId(),get fallback id ,Method,,com.bumptech.glide.request.SingleRequest+getFallbackDrawable() com.bumptech.glide.request.SingleRequest+getFallbackDrawable(),,com.bumptech.glide.request.RequestOptions+fallbackId,97,4,17,,"@SuppressWarnings(""WeakerAccess"")
  public final int getFallbackId() {
    return fallbackId;
  }",True,True,This method serves to retrieve the value of the fallbackId variable.,False,"The code defines a public method named ""getFallbackId"" that returns an integer value. It is marked with the ""@SuppressWarnings"" annotation to suppress weaker access warnings. The method retrieves and returns the value of the ""fallbackId"" variable."
154,getFallbackDrawable(),get fallback drawable ,Method,,com.bumptech.glide.request.SingleRequest+getFallbackDrawable() com.bumptech.glide.request.RequestOptionsTest+getFallback_afterApplyingOptionsWithFallbackDrawable_returnsNewDrawable(),,com.bumptech.glide.request.RequestOptions+fallbackDrawable,126,5,17,,"@SuppressWarnings(""WeakerAccess"")
  @Nullable
  public final Drawable getFallbackDrawable() {
    return fallbackDrawable;
  }",True,True,This method serves as a getter for the fallbackDrawable variable. It returns the Drawable object that is assigned to the fallbackDrawable variable.,False,"The code defines a public method named ""getFallbackDrawable"" that returns a Drawable object. It is annotated with ""@Nullable"" to indicate that the returned value can be null. The method is also annotated with ""@SuppressWarnings(""WeakerAccess"")"" to suppress any warnings related to weaker access privileges."
155,getTheme(),get theme ,Method,,com.bumptech.glide.request.SingleRequest+loadDrawable(int) com.bumptech.glide.request.SingleRequest+loadDrawable(int),,com.bumptech.glide.request.RequestOptions+theme,75,4,17,,"@Nullable
  public final Resources.Theme getTheme() {
    return theme;
  }",True,True,This method returns the theme of the resources.,False,"The code defines a method named ""getTheme()"" that returns a nullable object of type Resources.Theme. This method is likely part of a larger class and is used to retrieve the current theme being used by the application."
156,isMemoryCacheable(),is memory cacheable ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int) com.bumptech.glide.RequestBuilder+isSkipMemoryCacheWithCompletePreviousRequest(RequestOptions,Request)",,com.bumptech.glide.request.RequestOptions+isCacheable,106,4,17,,"@SuppressWarnings(""WeakerAccess"")
  public final boolean isMemoryCacheable() {
    return isCacheable;
  }",True,True,This method serves to determine if the object is memory cacheable. It returns a boolean value indicating whether the object can be cached in memory.,False,"The code defines a public method named ""isMemoryCacheable"" that returns a boolean value. It is annotated with ""@SuppressWarnings(""WeakerAccess"")"" to suppress weaker access warnings. The method simply returns the value of a boolean variable named ""isCacheable""."
157,getSignature(),get signature ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+signature,70,4,17,,"@NonNull
  public final Key getSignature() {
    return signature;
  }",True,True,"The function of this method is to return the value of the ""signature"" variable.",False,"The code defines a method named ""getSignature"" that returns a Key object. The method is annotated with ""@NonNull"" to indicate that it will never return null."
158,isPrioritySet(),is priority set ,Method,,"com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions)",com.bumptech.glide.request.RequestOptions+isSet(int) com.bumptech.glide.request.RequestOptions+isSet(int),com.bumptech.glide.request.RequestOptions+PRIORITY,70,3,17,,"public final boolean isPrioritySet() {
    return isSet(PRIORITY);
  }",True,True,The function of the given method is to check if the priority is set. It returns a boolean value indicating whether the priority is set or not.,False,"The code defines a method named ""isPrioritySet()"" which returns a boolean value. It checks if a certain condition, represented by the method ""isSet()"", is true or false and returns the result."
159,getPriority(),get priority ,Method,,"com.bumptech.glide.RequestBuilder+getThumbnailPriority(Priority) com.bumptech.glide.RequestBuilder+buildRequest(Target<TranscodeType>,RequestListener<TranscodeType>,RequestOptions) com.bumptech.glide.RequestBuilder+buildRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions)",,com.bumptech.glide.request.RequestOptions+priority,73,4,17,,"@NonNull
  public final Priority getPriority() {
    return priority;
  }",True,True,The method returns the priority value.,False,"The code defines a method named ""getPriority"" that returns the priority of an object. The method is annotated with ""@NonNull"" to indicate that it will not return null."
160,getOverrideWidth(),get override width ,Method,,"com.bumptech.glide.RequestBuilder+buildRequest(Target<TranscodeType>,RequestListener<TranscodeType>,RequestOptions) com.bumptech.glide.RequestBuilder+buildRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions)",,com.bumptech.glide.request.RequestOptions+overrideWidth,67,3,17,,"public final int getOverrideWidth() {
    return overrideWidth;
  }",True,True,"This method serves to retrieve the value of the variable ""overrideWidth"" and returns it as an integer.",False,"The code contains a method named ""getOverrideWidth"" which returns an integer value. It retrieves the value of the ""overrideWidth"" variable and returns it as the result of the method."
161,isValidOverride(),is valid override ,Method,,"com.bumptech.glide.RequestBuilder+buildRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions)","com.bumptech.glide.util.Util+isValidDimensions(int,int) com.bumptech.glide.util.Util+isValidDimensions(int,int)",com.bumptech.glide.request.RequestOptions+overrideWidth com.bumptech.glide.request.RequestOptions+overrideHeight,110,3,17,,"public final boolean isValidOverride() {
    return Util.isValidDimensions(overrideWidth, overrideHeight);
  }",True,True,"The function of the given method is to check if the override dimensions (overrideWidth and overrideHeight) are valid by calling the isValidDimensions method from the Util class, and return a boolean value indicating the result.",False,"The code defines a method named `isValidOverride()` which returns a boolean value. It calls a static method `isValidDimensions()` from the `Util` class, passing in the `overrideWidth` and `overrideHeight` parameters, and returns the result. The method is used to check if the dimensions provided are valid for an override."
162,getOverrideHeight(),get override height ,Method,,"com.bumptech.glide.RequestBuilder+buildRequest(Target<TranscodeType>,RequestListener<TranscodeType>,RequestOptions) com.bumptech.glide.RequestBuilder+buildRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions) com.bumptech.glide.RequestBuilder+buildThumbnailRequestRecursive(Target<TranscodeType>,RequestListener<TranscodeType>,RequestCoordinator,TransitionOptions<?,? super TranscodeType>,Priority,int,int,RequestOptions)",,com.bumptech.glide.request.RequestOptions+overrideHeight,69,3,17,,"public final int getOverrideHeight() {
    return overrideHeight;
  }",True,True,"This method serves to retrieve the value of the variable ""overrideHeight"" and returns it as an integer.",False,"The code contains a method named ""getOverrideHeight"" which returns an integer value. This method is used to retrieve the value of the ""overrideHeight"" variable."
163,getSizeMultiplier(),get size multiplier ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+sizeMultiplier,71,3,17,,"public final float getSizeMultiplier() {
    return sizeMultiplier;
  }",True,True,This method returns the size multiplier as a floating-point value.,False,"The code contains a method named ""getSizeMultiplier"" which returns a floating-point value. This method is marked as final, indicating that it cannot be overridden by any subclasses."
164,isScaleOnlyOrNoTransform(),is scale only or no transform ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int) com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_byDefault_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withFitCenter_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withFitCenter_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterInside_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterInside_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCenterCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCircleCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCircleCrop_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withBitmapTransformation_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withBitmapTransformation_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCustomTransformation_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withCustomTransformation_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withDownsampleStrategy_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleAndThenDontTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleAndAppliedDontTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withDontTransformAndAppliedNonScaleTransform_isFalse() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnly_andAppliedWithScaleOnly_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withScaleOnlyAndAppliedWithoutTransform_isTrue() com.bumptech.glide.request.RequestOptionsTest+isScaleOnlyOrNoTransform_withNonScaleOnlyAndAppliedWithoutTransform_isFalse()",,com.bumptech.glide.request.RequestOptions+isScaleOnlyOrNoTransform,77,3,0,,"boolean isScaleOnlyOrNoTransform() {
    return isScaleOnlyOrNoTransform;
  }",True,True,The function of the method isScaleOnlyOrNoTransform() is to return a boolean value indicating whether the transformation is only a scale or no transformation at all.,False,"The given code contains a method named ""isScaleOnlyOrNoTransform"" which returns a boolean value. This method is used to determine if the current transformation is only a scaling transformation or no transformation at all."
165,isSet(int),is set flag ,Method,isTransformationSet() isDiskCacheStrategySet() isSkipMemoryCacheSet() isPrioritySet(),,"com.bumptech.glide.request.RequestOptions+isSet(int,int) com.bumptech.glide.request.RequestOptions+isSet(int,int)",com.bumptech.glide.request.RequestOptions+fields,69,3,2,,"private boolean isSet(int flag) {
    return isSet(fields, flag);
  }",True,True,"This method serves as a wrapper for the isSet() method, which takes an integer flag as input and checks if the flag is set in the fields. It returns a boolean value indicating whether the flag is set or not.",False,"The code defines a private method named ""isSet"" that takes an integer flag as input. It calls another method named ""isSet"" with the ""fields"" and ""flag"" parameters and returns the result. The purpose of this method is to check if a specific flag is set in the ""fields"" variable."
166,getUseUnlimitedSourceGeneratorsPool(),get use unlimited source generators pool ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+useUnlimitedSourceGeneratorsPool,157,4,17,,"@SuppressWarnings(""PMD.BooleanGetMethodName"")
  public final boolean getUseUnlimitedSourceGeneratorsPool() {
    return useUnlimitedSourceGeneratorsPool;
  }",True,True,"The method serves to retrieve the value of the boolean variable ""useUnlimitedSourceGeneratorsPool"" and returns it as a boolean value.",False,"The code defines a method named ""getUseUnlimitedSourceGeneratorsPool"" which returns a boolean value. It is annotated with ""@SuppressWarnings"" to suppress a specific PMD warning related to the method's naming convention."
167,getUseAnimationPool(),get use animation pool ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+useAnimationPool,125,4,17,,"@SuppressWarnings(""PMD.BooleanGetMethodName"")
  public final boolean getUseAnimationPool() {
    return useAnimationPool;
  }",True,True,"This method serves as a getter function for the boolean variable ""useAnimationPool"". It returns the value of ""useAnimationPool"" to the caller.",False,"The code defines a method named ""getUseAnimationPool"" which returns a boolean value indicating whether the animation pool is being used. It is annotated with ""@SuppressWarnings(""PMD.BooleanGetMethodName"")"" to suppress a specific warning related to the method's naming convention."
168,getOnlyRetrieveFromCache(),get only retrieve from cache ,Method,,"com.bumptech.glide.request.SingleRequest+onSizeReady(int,int)",,com.bumptech.glide.request.RequestOptions+onlyRetrieveFromCache,135,4,17,,"@SuppressWarnings(""PMD.BooleanGetMethodName"")
  public final boolean getOnlyRetrieveFromCache() {
    return onlyRetrieveFromCache;
  }",True,True,"This method serves as a getter for the boolean variable ""onlyRetrieveFromCache"". It returns the value of ""onlyRetrieveFromCache"" to indicate whether the retrieval should only be done from the cache.",False,"The code defines a method named `getOnlyRetrieveFromCache()` which returns a boolean value indicating whether data should only be retrieved from the cache. It is annotated with `@SuppressWarnings(""PMD.BooleanGetMethodName"")` to suppress a warning related to the method's naming convention."
