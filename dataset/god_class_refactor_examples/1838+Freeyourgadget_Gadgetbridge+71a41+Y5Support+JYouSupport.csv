index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,LOG,Field,,,,,75,1,26,,private static final Logger LOG = LoggerFactory.getLogger(Y5Support.class);,False
2,ctrlCharacteristic,Field,,,,,61,1,1,,public BluetoothGattCharacteristic ctrlCharacteristic = null;,True
3,measureCharacteristic,Field,,,,,64,1,1,,public BluetoothGattCharacteristic measureCharacteristic = null;,True
4,realtimeSamplesSupport,Field,,,,,54,1,2,,private RealtimeSamplesSupport realtimeSamplesSupport;,False
5,versionCmd,Field,,,,,83,1,18,,private final GBDeviceEventVersionInfo versionCmd = new GBDeviceEventVersionInfo();,True
6,batteryCmd,Field,,,,,83,1,18,,private final GBDeviceEventBatteryInfo batteryCmd = new GBDeviceEventBatteryInfo();,True
7,Y5Support(),Method,,,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+addSupportedService(UUID),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+UUID_SERVICE_JYOU,108,4,1,,"public Y5Support() {
        super(LOG);
        addSupportedService(JYouConstants.UUID_SERVICE_JYOU);
    }",False
8,initializeDevice(TransactionBuilder),Method,,,"org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+getCharacteristic(UUID) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+setGattCallback(GattCallback) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+setGattCallback(GattCallback) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+notify(BluetoothGattCharacteristic,boolean) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+notify(BluetoothGattCharacteristic,boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncSettings(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncSettings(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+setState(State) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.impl.GBDevice+sendDeviceUpdateIntent(Context) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() org.slf4j.Logger+info(String) org.slf4j.Logger+info(String)",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+measureCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+UUID_CHARACTERISTIC_MEASURE nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+UUID_CHARACTERISTIC_CONTROL nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+measureCharacteristic nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+gbDevice nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,730,22,4,,"@Override
    protected TransactionBuilder initializeDevice(TransactionBuilder builder) {
        LOG.info(""Initializing"");

        gbDevice.setState(GBDevice.State.INITIALIZING);
        gbDevice.sendDeviceUpdateIntent(getContext());

        measureCharacteristic = getCharacteristic(JYouConstants.UUID_CHARACTERISTIC_MEASURE);
        ctrlCharacteristic = getCharacteristic(JYouConstants.UUID_CHARACTERISTIC_CONTROL);

        builder.setGattCallback(this);
        builder.notify(measureCharacteristic, true);

        syncSettings(builder);

        gbDevice.setState(GBDevice.State.INITIALIZED);
        gbDevice.sendDeviceUpdateIntent(getContext());

        LOG.info(""Initialization Done"");

        return builder;
    }",True
9,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventVersionInfo) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventVersionInfo) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventBatteryInfo) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+handleGBDeviceEvent(GBDeviceEventBatteryInfo) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.nio.ByteBuffer+getInt() java.nio.ByteBuffer+wrap(byte[],int,int) java.nio.ByteBuffer+wrap(byte[],int,int) java.nio.ByteBuffer+getInt() org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleRealtimeSteps(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleRealtimeSteps(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleHeartrate(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+handleHeartrate(int) org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) java.lang.String+format(String,Object[]) java.lang.String+format(String,Object[])",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_HISTORY_SLEEP_COUNT nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_BLOOD_PRESSURE nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_DEVICE_INFO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+versionCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventVersionInfo+fwVersion nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+versionCmd nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+versionCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventVersionInfo+fwVersion nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_BATTERY_LEVEL nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+batteryCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo+level nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+batteryCmd nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+batteryCmd nodomain.freeyourgadget.gadgetbridge.deviceevents.GBDeviceEventBatteryInfo+level nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_STEPS_DATA nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_HEARTRATE nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_WATCH_MAC nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+RECEIVE_GET_PHOTO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,2454,53,1,,"@Override
    public boolean onCharacteristicChanged(BluetoothGatt gatt,
                                           BluetoothGattCharacteristic characteristic) {
        if (super.onCharacteristicChanged(gatt, characteristic)) {
            return true;
        }

        UUID characteristicUUID = characteristic.getUuid();
        byte[] data = characteristic.getValue();
        if (data.length == 0)
            return true;

        switch (data[0]) {
            case JYouConstants.RECEIVE_HISTORY_SLEEP_COUNT:
                LOG.info(""onCharacteristicChanged: "" + data[0]);
                return true;
            case JYouConstants.RECEIVE_BLOOD_PRESSURE:
                int heartRate = data[2];
                int bloodPressureHigh = data[3];
                int bloodPressureLow = data[4];
                int bloodOxygen = data[5];
                int Fatigue = data[6];
                LOG.info(""RECEIVE_BLOOD_PRESSURE: Heart rate: "" + heartRate + "" Pressure high: "" + bloodPressureHigh+ "" pressure low: "" + bloodPressureLow);
                return true;
            case JYouConstants.RECEIVE_DEVICE_INFO:
                int model = data[7];
                int fwVerNum = data[4] & 0xFF;
                versionCmd.fwVersion = (fwVerNum / 100) + ""."" + ((fwVerNum % 100) / 10) + ""."" + ((fwVerNum % 100) % 10);
                handleGBDeviceEvent(versionCmd);
                LOG.info(""Firmware version is: "" + versionCmd.fwVersion);
                return true;
            case JYouConstants.RECEIVE_BATTERY_LEVEL:
                batteryCmd.level = data[8];
                handleGBDeviceEvent(batteryCmd);
                LOG.info(""Battery level is: "" + batteryCmd.level);
                return true;
            case JYouConstants.RECEIVE_STEPS_DATA:
                int steps = ByteBuffer.wrap(data, 5, 4).getInt();
                LOG.info(""Number of walked steps: "" + steps);
                handleRealtimeSteps(steps);
                return true;
            case JYouConstants.RECEIVE_HEARTRATE:
                handleHeartrate(data[8]);
                return true;
            case JYouConstants.RECEIVE_WATCH_MAC:
                return true;
            case JYouConstants.RECEIVE_GET_PHOTO:
                return true;
            default:
                LOG.info(""Unhandled characteristic change: "" + characteristicUUID + "" code: "" + String.format(""0x%1x ..."", data[0]));
                return true;
        }
    }",False
10,handleRealtimeSteps(int),Method,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",,org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setSteps(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setSteps(int),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,243,7,2,,"private void handleRealtimeSteps(int value) {
        //todo Call on connect the device
        if (LOG.isDebugEnabled()) {
            LOG.debug(""realtime steps: "" + value);
        }
        getRealtimeSamplesSupport().setSteps(value);
    }",False
11,handleHeartrate(int),Method,"onCharacteristicChanged(BluetoothGatt,BluetoothGattCharacteristic)",,org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+isDebugEnabled() org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setHeartrateBpm(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+setHeartrateBpm(int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+isRunning() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+isRunning() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+triggerCurrentSample() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+triggerCurrentSample(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,486,11,2,,"private void handleHeartrate(int value) {
        if (LOG.isDebugEnabled()) {
            LOG.debug(""heart rate: "" + value);
        }
        RealtimeSamplesSupport realtimeSamplesSupport = getRealtimeSamplesSupport();
        realtimeSamplesSupport.setHeartrateBpm(value);
        if (!realtimeSamplesSupport.isRunning()) {
            // single shot measurement, manually invoke storage and result publishing
            realtimeSamplesSupport.triggerCurrentSample();
        }
    }",False
12,"createActivitySample(Device,User,int,SampleProvider)",Method,,,,,365,8,1,,"public JYouActivitySample createActivitySample(Device device, User user, int timestampInSeconds, SampleProvider provider) {
        JYouActivitySample sample = new JYouActivitySample();
        sample.setDevice(device);
        sample.setUser(user);
        sample.setTimestamp(timestampInSeconds);
        sample.setProvider(provider);
        return sample;
    }",False
13,enableRealtimeSamplesTimer(boolean),Method,onEnableRealtimeHeartRateMeasurement(boolean),,nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+start() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+getRealtimeSamplesSupport() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+start() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+stop() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.RealtimeSamplesSupport+stop(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport,272,9,2,,"private void enableRealtimeSamplesTimer(boolean enable) {
        if (enable) {
            getRealtimeSamplesSupport().start();
        } else {
            if (realtimeSamplesSupport != null) {
                realtimeSamplesSupport.stop();
            }
        }
    }",False
14,getRealtimeSamplesSupport(),Method,handleRealtimeSteps(int) handleHeartrate(int) enableRealtimeSamplesTimer(boolean),,"+(long,long) +doCurrentSample()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+realtimeSamplesSupport,2277,42,2,,"private RealtimeSamplesSupport getRealtimeSamplesSupport() {
        if (realtimeSamplesSupport == null) {
            realtimeSamplesSupport = new RealtimeSamplesSupport(1000, 1000) {
                @Override
                public void doCurrentSample() {

                    try (DBHandler handler = GBApplication.acquireDB()) {
                        DaoSession session = handler.getDaoSession();
                        int ts = (int) (System.currentTimeMillis() / 1000);
                        JYouSampleProvider provider = new JYouSampleProvider(gbDevice, session);
                        JYouActivitySample sample = createActivitySample(DBHelper.getDevice(getDevice(), session), DBHelper.getUser(session), ts, provider);
                        sample.setHeartRate(getHeartrateBpm());
                        sample.setRawIntensity(ActivitySample.NOT_MEASURED);
                        sample.setRawKind(JYouSampleProvider.TYPE_ACTIVITY); // to make it visible in the charts TODO: add a MANUAL kind for that?

                        provider.addGBActivitySample(sample);

                        // set the steps only afterwards, since realtime steps are also recorded
                        // in the regular samples and we must not count them twice
                        // Note: we know that the DAO sample is never committed again, so we simply
                        // change the value here in memory.
                        sample.setSteps(getSteps());
                        if(steps > 1){
                            LOG.debug(""Have steps: "" + getSteps());
                        }

                        if (LOG.isDebugEnabled()) {
                            LOG.debug(""realtime sample: "" + sample);
                        }

                        Intent intent = new Intent(DeviceService.ACTION_REALTIME_SAMPLES)
                                .putExtra(DeviceService.EXTRA_REALTIME_SAMPLE, sample);
                        LocalBroadcastManager.getInstance(getContext()).sendBroadcast(intent);

                    } catch (Exception e) {
                        LOG.warn(""Unable to acquire db for saving realtime samples"", e);
                    }
                }
            };
        }
        return realtimeSamplesSupport;
    }",False
15,syncDateAndTime(TransactionBuilder),Method,syncSettings(TransactionBuilder) onSetTime(),,"java.util.Calendar+getInstance() java.util.Calendar+getInstance() java.lang.String+valueOf(int) java.lang.String+valueOf(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int)",java.util.Calendar+YEAR java.util.Calendar+MONTH java.util.Calendar+DAY_OF_MONTH java.util.Calendar+HOUR_OF_DAY java.util.Calendar+MINUTE java.util.Calendar+SECOND java.util.Calendar+DAY_OF_WEEK nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_DATE_AND_TIME,919,18,2,,"private void syncDateAndTime(TransactionBuilder builder) {
        Calendar cal = Calendar.getInstance();
        String strYear = String.valueOf(cal.get(Calendar.YEAR));
        byte year1 = (byte)Integer.parseInt(strYear.substring(0, 2));
        byte year2 = (byte)Integer.parseInt(strYear.substring(2, 4));
        byte month = (byte)cal.get(Calendar.MONTH);
        byte day = (byte)cal.get(Calendar.DAY_OF_MONTH);
        byte hour = (byte)cal.get(Calendar.HOUR_OF_DAY);
        byte minute = (byte)cal.get(Calendar.MINUTE);
        byte second = (byte)cal.get(Calendar.SECOND);
        byte weekDay = (byte)cal.get(Calendar.DAY_OF_WEEK);

        builder.write(ctrlCharacteristic, commandWithChecksum(
                JYouConstants.CMD_SET_DATE_AND_TIME,
                (year1 << 24) | (year2 << 16) | (month << 8) | day,
                (hour << 24) | (minute << 16) | (second << 8) | weekDay
        ));
    }",True
16,syncSettings(TransactionBuilder),Method,initializeDevice(TransactionBuilder),,nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder),,95,3,2,,"private void syncSettings(TransactionBuilder builder) {
        syncDateAndTime(builder);
    }",True
17,"showNotification(byte,String,String)",Method,onNotification(NotificationSpec) onSetCallState(CallSpec) onFindDevice(boolean),,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+stringToUTF8Bytes(String,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_ACTION_SHOW_NOTIFICATION nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,1579,37,2,,"private void showNotification(byte icon, String title, String message) {
        try {
            TransactionBuilder builder = performInitialized(""ShowNotification"");

            byte[] titleBytes = stringToUTF8Bytes(title, 16);
            byte[] messageBytes = stringToUTF8Bytes(message, 80);

            for (int i = 1; i <= 7; i++)
            {
                byte[] currentPacket = new byte[20];
                currentPacket[0] = JYouConstants.CMD_ACTION_SHOW_NOTIFICATION;
                currentPacket[1] = 7;
                currentPacket[2] = (byte)i;
                switch(i) {
                    case 1:
                        currentPacket[4] = icon;
                        break;
                    case 2:
                        if (titleBytes != null) {
                            System.arraycopy(titleBytes, 0, currentPacket, 3, 6);
                            System.arraycopy(titleBytes, 6, currentPacket, 10, 10);
                        }
                        break;
                    default:
                        if (messageBytes != null) {
                            System.arraycopy(messageBytes, 16 * (i - 3), currentPacket, 3, 6);
                            System.arraycopy(messageBytes, 6 + 16 * (i - 3), currentPacket, 10, 10);
                        }
                        break;
                }
                builder.write(ctrlCharacteristic, currentPacket);
            }
            performConnected(builder.getTransaction());
        } catch (IOException e) {
            LOG.warn(e.getMessage());
        }
    }",True
18,useAutoConnect(),Method,,,,,74,4,1,,"@Override
    public boolean useAutoConnect() {
        return true;
    }",True
19,onNotification(NotificationSpec),Method,,,"nodomain.freeyourgadget.gadgetbridge.util.StringUtils+getFirstOf(String,String) nodomain.freeyourgadget.gadgetbridge.util.StringUtils+getFirstOf(String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String)",nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+sender nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+title nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+type nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_SMS nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_FACEBOOK nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_TWITTER nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_WHATSAPP nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_LINE nodomain.freeyourgadget.gadgetbridge.model.NotificationSpec+body,868,24,1,,"@Override
    public void onNotification(NotificationSpec notificationSpec) {
        String notificationTitle = StringUtils.getFirstOf(notificationSpec.sender, notificationSpec.title);
        byte icon;
        switch (notificationSpec.type) {
            case GENERIC_SMS:
                icon = JYouConstants.ICON_SMS;
                break;
            case FACEBOOK:
            case FACEBOOK_MESSENGER:
                icon = JYouConstants.ICON_FACEBOOK;
                break;
            case TWITTER:
                icon = JYouConstants.ICON_TWITTER;
                break;
            case WHATSAPP:
                icon = JYouConstants.ICON_WHATSAPP;
                break;
            default:
                icon = JYouConstants.ICON_LINE;
                break;
        }
        showNotification(icon, notificationTitle, notificationSpec.body);
    }",True
20,onDeleteNotification(int),Method,,,,,62,3,1,,"@Override
    public void onDeleteNotification(int id) {
    }",True
21,onSetAlarms(ArrayList<? extends Alarm>),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) java.util.ArrayList+size() java.util.ArrayList+size() nodomain.freeyourgadget.gadgetbridge.util.AlarmUtils+toCalendar(Alarm) nodomain.freeyourgadget.gadgetbridge.util.AlarmUtils+toCalendar(Alarm) java.util.ArrayList+get(int) java.util.ArrayList+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.ArrayList+get(int) java.util.ArrayList+get(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.ArrayList+get(int) java.util.ArrayList+get(int) nodomain.freeyourgadget.gadgetbridge.model.Alarm+getEnabled() java.util.Calendar+get(int) java.util.Calendar+get(int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_ALARM_1 nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_ALARM_2 nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_ALARM_3 nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic java.util.Calendar+HOUR_OF_DAY java.util.Calendar+MINUTE nodomain.freeyourgadget.gadgetbridge.util.GB+INFO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,1400,34,1,,"@Override
    public void onSetAlarms(ArrayList<? extends Alarm> alarms) {
        try {
            TransactionBuilder builder = performInitialized(""SetAlarms"");

            for (int i = 0; i < alarms.size(); i++)
            {
                byte cmd;
                switch (i) {
                    case 0:
                        cmd = JYouConstants.CMD_SET_ALARM_1;
                        break;
                    case 1:
                        cmd = JYouConstants.CMD_SET_ALARM_2;
                        break;
                    case 2:
                        cmd = JYouConstants.CMD_SET_ALARM_3;
                        break;
                    default:
                        return;
                }
                Calendar cal = AlarmUtils.toCalendar(alarms.get(i));
                builder.write(ctrlCharacteristic, commandWithChecksum(
                        cmd,
                        alarms.get(i).getEnabled() ? cal.get(Calendar.HOUR_OF_DAY) : -1,
                        alarms.get(i).getEnabled() ? cal.get(Calendar.MINUTE) : -1
                ));
            }
            performConnected(builder.getTransaction());
            GB.toast(getContext(), ""Alarm settings applied - do note that the current device does not support day specification"", Toast.LENGTH_LONG, GB.INFO);
        } catch(IOException e) {
            LOG.warn(e.getMessage());
        }
    }",True
22,onSetTime(),Method,,,nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+syncDateAndTime(TransactionBuilder) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,306,10,1,,"@Override
    public void onSetTime() {
        try {
            TransactionBuilder builder = performInitialized(""SetTime"");
            syncDateAndTime(builder);
            performConnected(builder.getTransaction());
        } catch(IOException e) {
            LOG.warn(e.getMessage());
        }
    }",True
23,onSetCallState(CallSpec),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String)",nodomain.freeyourgadget.gadgetbridge.model.CallSpec+command nodomain.freeyourgadget.gadgetbridge.model.CallSpec+CALL_INCOMING nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_CALL nodomain.freeyourgadget.gadgetbridge.model.CallSpec+name nodomain.freeyourgadget.gadgetbridge.model.CallSpec+number,268,8,1,,"@Override
    public void onSetCallState(CallSpec callSpec) {
        switch (callSpec.command) {
            case CallSpec.CALL_INCOMING:
                showNotification(JYouConstants.ICON_CALL, callSpec.name, callSpec.number);
                break;
        }
    }",True
24,onSetCannedMessages(CannedMessagesSpec),Method,,,,,93,4,1,,"@Override
    public void onSetCannedMessages(CannedMessagesSpec cannedMessagesSpec) {

    }",True
25,onSetMusicState(MusicStateSpec),Method,,,,,76,4,1,,"@Override
    public void onSetMusicState(MusicStateSpec stateSpec) {

    }",True
26,onSetMusicInfo(MusicSpec),Method,,,,,70,4,1,,"@Override
    public void onSetMusicInfo(MusicSpec musicSpec) {

    }",True
27,onEnableRealtimeSteps(boolean),Method,,,nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+onEnableRealtimeHeartRateMeasurement(boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+onEnableRealtimeHeartRateMeasurement(boolean),,125,4,1,,"@Override
    public void onEnableRealtimeSteps(boolean enable) {
        onEnableRealtimeHeartRateMeasurement(enable);
    }",True
28,onInstallApp(Uri),Method,,,,,56,4,1,,"@Override
    public void onInstallApp(Uri uri) {

    }",True
29,onAppInfoReq(),Method,,,,,49,4,1,,"@Override
    public void onAppInfoReq() {

    }",True
30,"onAppStart(UUID,boolean)",Method,,,,,71,4,1,,"@Override
    public void onAppStart(UUID uuid, boolean start) {

    }",True
31,onAppDelete(UUID),Method,,,,,57,4,1,,"@Override
    public void onAppDelete(UUID uuid) {

    }",True
32,"onAppConfiguration(UUID,String,Integer)",Method,,,,,94,4,1,,"@Override
    public void onAppConfiguration(UUID appUuid, String config, Integer id) {

    }",True
33,onAppReorder(UUID[]),Method,,,,,61,4,1,,"@Override
    public void onAppReorder(UUID[] uuids) {

    }",True
34,onFetchRecordedData(int),Method,,,,,68,3,1,,"@Override
    public void onFetchRecordedData(int dataTypes) {
    }",True
35,dispose(),Method,,,org.slf4j.Logger+info(String) org.slf4j.Logger+info(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+dispose(),nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,97,5,1,,"@Override
    public void dispose() {
        LOG.info(""Dispose"");
        super.dispose();
    }",False
36,onReset(int),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_ACTION_REBOOT_DEVICE nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,420,12,1,,"@Override
    public void onReset(int flags) {
        try {
            TransactionBuilder builder = performInitialized(""Reboot"");
            builder.write(ctrlCharacteristic, commandWithChecksum(
                    JYouConstants.CMD_ACTION_REBOOT_DEVICE, 0, 0
            ));
            performConnected(builder.getTransaction());
        } catch(Exception e) {
            LOG.warn(e.getMessage());
        }
    }",True
37,onHeartRateTest(),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_SET_HEARTRATE_AUTO nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,425,13,1,,"@Override
    public void onHeartRateTest() {
        try {
            TransactionBuilder builder = performInitialized(""HeartRateTest"");
            builder.write(ctrlCharacteristic, commandWithChecksum(
                    JYouConstants.CMD_SET_HEARTRATE_AUTO, 0, 0

            ));
            performConnected(builder.getTransaction());
        } catch(Exception e) {
            LOG.warn(e.getMessage());
        }
    }",False
38,onEnableRealtimeHeartRateMeasurement(boolean),Method,onEnableRealtimeSteps(boolean),,"nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performInitialized(String) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+write(BluetoothGattCharacteristic,byte[]) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+commandWithChecksum(byte,int,int) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.AbstractBTLEDeviceSupport+performConnected(Transaction) nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder+getTransaction() nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+enableRealtimeSamplesTimer(boolean) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+enableRealtimeSamplesTimer(boolean) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+ctrlCharacteristic nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+CMD_ACTION_HEARTRATE_SWITCH nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,537,13,1,,"@Override
    public void onEnableRealtimeHeartRateMeasurement(boolean enable) {
        try {
            TransactionBuilder builder = performInitialized(""RealTimeHeartMeasurement"");
            builder.write(ctrlCharacteristic, commandWithChecksum(
                    JYouConstants.CMD_ACTION_HEARTRATE_SWITCH, 0, enable ? 1 : 0
            ));
            performConnected(builder.getTransaction());
            enableRealtimeSamplesTimer(enable);
        } catch (Exception e) {
            LOG.warn(e.getMessage());
        }
    }",False
39,onFindDevice(boolean),Method,,,"nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+showNotification(byte,String,String) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.util.GB+toast(String,int,int,Throwable) nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext() nodomain.freeyourgadget.gadgetbridge.service.AbstractDeviceSupport+getContext()",nodomain.freeyourgadget.gadgetbridge.devices.jyou.JYouConstants+ICON_QQ nodomain.freeyourgadget.gadgetbridge.util.GB+INFO,321,7,1,,"@Override
    public void onFindDevice(boolean start) {
        if (start) {
            showNotification(JYouConstants.ICON_QQ, ""Gadgetbridge"", ""Bzzt! Bzzt!"");
            GB.toast(getContext(), ""As your device doesn't have sound, it will only vibrate 3 times consecutively"", Toast.LENGTH_LONG, GB.INFO);
        }
    }",True
40,onSetConstantVibration(int),Method,,,,,70,4,1,,"@Override
    public void onSetConstantVibration(int integer) {

    }",True
41,onScreenshotReq(),Method,,,,,52,4,1,,"@Override
    public void onScreenshotReq() {

    }",True
42,onEnableHeartRateSleepSupport(boolean),Method,,,,,80,4,1,,"@Override
    public void onEnableHeartRateSleepSupport(boolean enable) {

    }",True
43,onSetHeartRateMeasurementInterval(int),Method,,,,,81,4,1,,"@Override
    public void onSetHeartRateMeasurementInterval(int seconds) {

    }",True
44,onAddCalendarEvent(CalendarEventSpec),Method,,,,,90,4,1,,"@Override
    public void onAddCalendarEvent(CalendarEventSpec calendarEventSpec) {

    }",True
45,"onDeleteCalendarEvent(byte,long)",Method,,,,,76,4,1,,"@Override
    public void onDeleteCalendarEvent(byte type, long id) {

    }",True
46,onSendConfiguration(String),Method,,,,,69,4,1,,"@Override
    public void onSendConfiguration(String config) {

    }",True
47,onReadConfiguration(String),Method,,,,,69,4,1,,"@Override
    public void onReadConfiguration(String config) {

    }",True
48,onTestNewFunction(),Method,,,,,53,3,1,,"@Override
    public void onTestNewFunction() {
    }",True
49,onSendWeather(WeatherSpec),Method,,,,,73,4,1,,"@Override
    public void onSendWeather(WeatherSpec weatherSpec) {

    }",True
50,"commandWithChecksum(byte,int,int)",Method,syncDateAndTime(TransactionBuilder) onSetAlarms(ArrayList<? extends Alarm>) onReset(int) onHeartRateTest() onEnableRealtimeHeartRateMeasurement(boolean),,java.nio.ByteBuffer+allocate(int) java.nio.ByteBuffer+allocate(int) java.nio.ByteBuffer+put(byte) java.nio.ByteBuffer+put(byte) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+putInt(int) java.nio.ByteBuffer+array() java.nio.ByteBuffer+array(),,430,18,2,,"private byte[] commandWithChecksum(byte cmd, int argSlot1, int argSlot2)
    {
        ByteBuffer buf = ByteBuffer.allocate(10);
        buf.put(cmd);
        buf.putInt(argSlot1);
        buf.putInt(argSlot2);

        byte[] bytesToWrite = buf.array();

        byte checksum = 0;
        for (byte b : bytesToWrite) {
            checksum += b;
        }

        bytesToWrite[9] = checksum;

        return bytesToWrite;
    }",True
51,"stringToUTF8Bytes(String,int)",Method,"showNotification(byte,String,String) showNotification(byte,String,String)",,"java.lang.String+length() java.lang.String+length() java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.lang.String+getBytes(String) java.lang.String+getBytes(String) java.lang.System+arraycopy(Object,int,Object,int,int) java.lang.System+arraycopy(Object,int,Object,int,int) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",nodomain.freeyourgadget.gadgetbridge.service.devices.jyou.y5.Y5Support+LOG,798,24,2,,"private byte[] stringToUTF8Bytes(String src, int byteCount) {
        try {
            if (src == null)
                return null;

            for (int i = src.length(); i > 0; i--) {
                String sub = src.substring(0, i);
                byte[] subUTF8 = sub.getBytes(""UTF-8"");

                if (subUTF8.length == byteCount) {
                    return subUTF8;
                }

                if (subUTF8.length < byteCount) {
                    byte[] largerSubUTF8 = new byte[byteCount];
                    System.arraycopy(subUTF8, 0, largerSubUTF8, 0, subUTF8.length);
                    return largerSubUTF8;
                }
            }
        } catch (UnsupportedEncodingException e) {
            LOG.warn(e.getMessage());
        }
        return null;
    }",True
