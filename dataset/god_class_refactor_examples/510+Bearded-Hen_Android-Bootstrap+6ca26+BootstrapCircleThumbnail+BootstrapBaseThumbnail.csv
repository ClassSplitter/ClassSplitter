index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,TAG,Field,,,,,93,1,26,,"private static final String TAG = ""com.beardedhen.androidbootstrap.BootstrapCircleThumbnail"";",False
2,bootstrapBrand,Field,onRestoreInstanceState(Parcelable) initialise(AttributeSet) initialise(AttributeSet) setBootstrapBrand(BootstrapBrand),,,,38,1,2,,private BootstrapBrand bootstrapBrand;,True
3,borderWidth,Field,onRestoreInstanceState(Parcelable) initialise(AttributeSet) initialise(AttributeSet) initialise(AttributeSet) setBorderWidth(float),,,,26,1,2,,private float borderWidth;,True
4,borderColor,Field,onRestoreInstanceState(Parcelable) initialise(AttributeSet) setBootstrapBrand(BootstrapBrand) setBorderColor(int),,,,24,1,2,,private int borderColor;,True
5,imageRectF,Field,,,,,45,1,18,,private final RectF imageRectF = new RectF();,False
6,matrix,Field,,,,,43,1,18,,private final Matrix matrix = new Matrix();,False
7,imagePaint,Field,,,,,45,1,18,,private final Paint imagePaint = new Paint();,False
8,placeholderPaint,Field,,,,,51,1,18,,private final Paint placeholderPaint = new Paint();,False
9,borderPaint,Field,,,,,46,1,18,,private final Paint borderPaint = new Paint();,False
10,sourceBitmap,Field,,,,,28,1,2,,private Bitmap sourceBitmap;,True
11,BootstrapCircleThumbnail(Context),Method,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+initialise(AttributeSet) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+initialise(AttributeSet),,106,4,1,,"public BootstrapCircleThumbnail(Context context) {
        super(context);
        initialise(null);
    }",False
12,"BootstrapCircleThumbnail(Context,AttributeSet)",Method,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+initialise(AttributeSet) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+initialise(AttributeSet),,134,4,1,,"public BootstrapCircleThumbnail(Context context, AttributeSet attrs) {
        super(context, attrs);
        initialise(attrs);
    }",False
13,"BootstrapCircleThumbnail(Context,AttributeSet,int)",Method,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+initialise(AttributeSet) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+initialise(AttributeSet),,158,4,1,,"public BootstrapCircleThumbnail(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        initialise(attrs);
    }",False
14,onSaveInstanceState(),Method,,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+TAG com.beardedhen.androidbootstrap.api.view.BootstrapBrandView+KEY com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.api.view.BorderView+KEY_WIDTH com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.api.view.BorderView+KEY_COLOR com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor,374,10,1,,"@Override public Parcelable onSaveInstanceState() {
        Bundle bundle = new Bundle();
        bundle.putParcelable(TAG, super.onSaveInstanceState());

        bundle.putSerializable(BootstrapBrandView.KEY, bootstrapBrand);
        bundle.putFloat(BorderView.KEY_WIDTH, borderWidth);
        bundle.putInt(BorderView.KEY_COLOR, borderColor);

        return bundle;
    }",True
15,onRestoreInstanceState(Parcelable),Method,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.api.view.BorderView+KEY_WIDTH com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.api.view.BorderView+KEY_COLOR com.beardedhen.androidbootstrap.api.view.BootstrapBrandView+KEY com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+TAG,632,17,1,,"@Override public void onRestoreInstanceState(Parcelable state) {
        if (state instanceof Bundle) {
            Bundle bundle = (Bundle) state;

            this.borderWidth = bundle.getFloat(BorderView.KEY_WIDTH);
            this.borderColor = bundle.getInt(BorderView.KEY_COLOR);

            Serializable brand = bundle.getSerializable(BootstrapBrandView.KEY);

            if (brand instanceof BootstrapBrand) {
                this.bootstrapBrand = (BootstrapBrand) brand;
            }
            state = bundle.getParcelable(TAG);
        }
        super.onRestoreInstanceState(state);
        updateImageState();
    }",True
16,initialise(AttributeSet),Method,"BootstrapCircleThumbnail(Context) BootstrapCircleThumbnail(Context,AttributeSet) BootstrapCircleThumbnail(Context,AttributeSet,int)",,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand,1072,25,2,,"private void initialise(AttributeSet attrs) {
        TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.BootstrapCircleThumbnail);

        try {
            int typeOrdinal = a.getInt(R.styleable.BootstrapCircleThumbnail_bootstrapBrand, -1);
            this.borderColor = a.getColor(R.styleable.BootstrapCircleThumbnail_borderColor, -1);
            this.borderWidth = a.getDimension(R.styleable.BootstrapCircleThumbnail_borderWidth, -1);

            if (this.borderWidth <= 0) {
                this.borderWidth = getContext()
                        .getResources().getDimensionPixelSize(R.dimen.bootstrap_circle_default_border);
            }

            if (typeOrdinal == -1) { // override to use Primary for default border (looks nicer)
                this.bootstrapBrand = DefaultBootstrapBrand.PRIMARY;
            }
            else {
                this.bootstrapBrand = DefaultBootstrapBrand.fromAttributeValue(typeOrdinal);
            }
        }
        finally {
            a.recycle();
        }
        updateImageState();
    }",False
17,updateImageState(),Method,"onRestoreInstanceState(Parcelable) initialise(AttributeSet) onSizeChanged(int,int,int,int) onSourceBitmapUpdate(Bitmap) setBorderWidth(float)",,java.lang.Object+Object(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+imagePaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+matrix com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+matrix com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+matrix com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+matrix com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+imageRectF,2023,50,2,"/** 
 * This method is called when the Circle Image needs to be recreated due to changes in size etc. <p/> A Paint object uses a BitmapShader to draw a center-cropped, circular image onto the View Canvas. A Matrix on the BitmapShader scales the original Bitmap to match the current view bounds, avoiding any inefficiencies in duplicating Bitmaps. <p/> <a href=""http://www.curious-creature.com/2012/12/11/android-recipe-1-image-with-rounded-corners""> Further reading</a>
 */
","/**
     * This method is called when the Circle Image needs to be recreated due to changes in size etc.
     * <p/>
     * A Paint object uses a BitmapShader to draw a center-cropped, circular image onto the View
     * Canvas. A Matrix on the BitmapShader scales the original Bitmap to match the current view
     * bounds, avoiding any inefficiencies in duplicating Bitmaps.
     * <p/>
     * <a href=""http://www.curious-creature.com/2012/12/11/android-recipe-1-image-with-rounded-corners"">
     * Further reading</a>
     */
    private void updateImageState() {
        float viewWidth = getWidth();
        float viewHeight = getHeight();

        if ((int) viewWidth <= 0 || (int) viewHeight <= 0) {
            return;
        }

        if (sourceBitmap != null) {
            BitmapShader imageShader = new BitmapShader(sourceBitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);
            imagePaint.setShader(imageShader);

            // Scale the bitmap using a matrix, ensuring that it always matches the view bounds.
            float bitmapWidth = sourceBitmap.getWidth();
            float bitmapHeight = sourceBitmap.getHeight();

            float scaleFactor = (bitmapWidth < bitmapHeight) ? bitmapWidth : bitmapHeight;
            float xScale = viewWidth / scaleFactor;
            float yScale = viewHeight / scaleFactor;

            // Translate image to center crop (if it is not a perfect square bitmap)
            float dx = 0;
            float dy = 0;

            if (bitmapWidth > bitmapHeight) {
                dx = (viewWidth - bitmapWidth * xScale) * 0.5f;
            }
            else if (bitmapHeight > bitmapWidth) {
                dy = (viewHeight - bitmapHeight * yScale) * 0.5f;
            }

            matrix.set(null);
            matrix.setScale(xScale, yScale);
            matrix.postTranslate((dx + 0.5f), (dy + 0.5f));

            imageShader.setLocalMatrix(matrix);
            imageRectF.set(0, 0, viewWidth, viewHeight);
        }
        invalidate();
    }",False
18,onDraw(Canvas),Method,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+setupPaints() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+setupPaints(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+placeholderPaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+imagePaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderPaint,887,28,4,,"@Override protected void onDraw(@NonNull Canvas canvas) {
        float viewWidth = getWidth();
        float viewHeight = getHeight();

        if ((int) viewWidth <= 0 || (int) viewHeight <= 0) {
            return;
        }

        boolean isPlaceholder = sourceBitmap == null;

        // draw the image paint first, then draw a border as a Stroke paint (if needed)
        boolean hasBorder = borderWidth > 0 || isPlaceholder;
        float center = viewWidth / 2;
        float imageRadius = center;

        if (hasBorder) {
            imageRadius -= borderWidth;
        }

        setupPaints();

        Paint paint = (isPlaceholder) ? placeholderPaint : imagePaint;
        canvas.drawCircle(center, center, imageRadius, paint);

        if (hasBorder) {
            canvas.drawCircle(center, center, center - (borderWidth / 2), borderPaint); // draw border
        }
    }",False
19,setupPaints(),Method,onDraw(Canvas),,com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand+defaultEdge(Context) com.beardedhen.androidbootstrap.api.attributes.BootstrapBrand+defaultEdge(Context),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderPaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderPaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderPaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderPaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+imagePaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+placeholderPaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+placeholderPaint com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+placeholderPaint,596,14,2,,"private void setupPaints() {
        int strokeColor = (borderColor != -1) ? borderColor : bootstrapBrand.defaultEdge(getContext());
        int placeholderColor = getContext().getResources().getColor(R.color.white);

        borderPaint.setColor(strokeColor);
        borderPaint.setAntiAlias(true);
        borderPaint.setStrokeWidth(borderWidth);
        borderPaint.setStyle(Paint.Style.STROKE);
        imagePaint.setAntiAlias(true);

        placeholderPaint.setColor(placeholderColor);
        placeholderPaint.setAntiAlias(true);
        placeholderPaint.setStyle(Paint.Style.FILL);
    }",False
20,"onMeasure(int,int)",Method,,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap,793,24,4,,"@Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);

        int w = MeasureSpec.getSize(widthMeasureSpec); // AT_MOST/EXACTLY are used by default
        int h = MeasureSpec.getSize(heightMeasureSpec);

        if (sourceBitmap != null) {
            if (MeasureSpec.getMode(widthMeasureSpec) == MeasureSpec.UNSPECIFIED) {
                w = sourceBitmap.getWidth();
            }
            if (MeasureSpec.getMode(heightMeasureSpec) == MeasureSpec.UNSPECIFIED) {

                h = sourceBitmap.getHeight();
            }
        }

        if (w > h) { // no ovals allowed
            w = h;
        }
        if (h > w) {
            h = w;
        }
        setMeasuredDimension(w, h);
    }",False
21,"onSizeChanged(int,int,int,int)",Method,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState(),,155,4,4,,"@Override protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        updateImageState();
    }",True
22,setScaleType(ScaleType),Method,,,java.lang.IllegalArgumentException+IllegalArgumentException(String),,284,8,1,,"@Override public void setScaleType(ScaleType scaleType) {
        if (scaleType != CENTER_CROP) {
            throw new IllegalArgumentException(""Only CenterCrop is currently supported by this view"");
        }
        else {
            super.setScaleType(scaleType);
        }
    }",True
23,getScaleType(),Method,,,,,77,3,1,,"@Override public ScaleType getScaleType() {
        return CENTER_CROP;
    }",True
24,getBitmapForView(),Method,setImageDrawable(Drawable) setImageResource(int) setImageURI(Uri),,java.lang.Object+Object(),,649,22,2,"/** 
 * @return the original Bitmap source that will be drawn as a circular image
 */
","/**
     * @return the original Bitmap source that will be drawn as a circular image
     */
    @Nullable private Bitmap getBitmapForView() {
        Drawable drawable = getDrawable();

        if (drawable == null) {
            return null;
        }

        if (drawable instanceof BitmapDrawable) {
            return ((BitmapDrawable) drawable).getBitmap();
        }
        else {
            int w = drawable.getIntrinsicWidth();
            int h = drawable.getIntrinsicHeight();

            Bitmap bm = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
            drawable.draw(new Canvas(bm));
            return bm;
        }
    }",True
25,setImageBitmap(Bitmap),Method,,com.example.sample.BootstrapCircleThumbnailExample+onCreate(Bundle),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap),,123,4,1,,"@Override public void setImageBitmap(Bitmap bm) {
        super.setImageBitmap(bm);
        onSourceBitmapUpdate(bm);
    }",True
26,setImageDrawable(Drawable),Method,,com.example.sample.BootstrapCircleThumbnailExample+onCreate(Bundle),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+getBitmapForView() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+getBitmapForView(),,157,4,1,,"@Override public void setImageDrawable(Drawable drawable) {
        super.setImageDrawable(drawable);
        onSourceBitmapUpdate(getBitmapForView());
    }",True
27,setImageResource(int),Method,,com.example.sample.BootstrapCircleThumbnailExample+onCreate(Bundle) com.example.sample.BootstrapCircleThumbnailExample+onImageChangeExampleClicked(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+getBitmapForView() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+getBitmapForView(),,146,4,1,,"@Override public void setImageResource(int resId) {
        super.setImageResource(resId);
        onSourceBitmapUpdate(getBitmapForView());
    }",True
28,setImageURI(Uri),Method,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+onSourceBitmapUpdate(Bitmap) com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+getBitmapForView() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+getBitmapForView(),,132,4,1,,"@Override public void setImageURI(Uri uri) {
        super.setImageURI(uri);
        onSourceBitmapUpdate(getBitmapForView());
    }",True
29,onSourceBitmapUpdate(Bitmap),Method,setImageBitmap(Bitmap) setImageDrawable(Drawable) setImageResource(int) setImageURI(Uri),,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+sourceBitmap,115,4,2,,"private void onSourceBitmapUpdate(Bitmap bitmap) {
        sourceBitmap = bitmap;
        updateImageState();
    }",True
30,setBootstrapBrand(BootstrapBrand),Method,,com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked() com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked() com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked() com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked() com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked() com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked() com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked(),,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor,186,5,1,,"@Override public void setBootstrapBrand(@NonNull BootstrapBrand bootstrapBrand) {
        this.bootstrapBrand = bootstrapBrand;
        this.borderColor = -1;
        invalidate();
    }",True
31,getBootstrapBrand(),Method,,com.example.sample.BootstrapCircleThumbnailExample+onThemeChangeExampleClicked(),,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+bootstrapBrand,99,3,1,,"@NonNull @Override public BootstrapBrand getBootstrapBrand() {
        return bootstrapBrand;
    }",True
32,getBorderColor(),Method,,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor,83,3,1,,"@Override @ColorInt public int getBorderColor() {
        return borderColor;
    }",True
33,setBorderColor(int),Method,,com.example.sample.BootstrapCircleThumbnailExample+onColorChangeExampleClicked(),,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderColor,133,4,1,,"@Override public void setBorderColor(@ColorInt int borderColor) {
        this.borderColor = borderColor;
        invalidate();
    }",True
34,getBorderWidth(),Method,,,,com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth,75,3,1,,"@Override public float getBorderWidth() {
        return borderWidth;
    }",True
35,setBorderWidth(float),Method,,com.example.sample.BootstrapCircleThumbnailExample+onBorderChangeExampleClicked(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState() com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+updateImageState(),com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth com.beardedhen.androidbootstrap.BootstrapCircleThumbnail+borderWidth,131,4,1,,"@Override public void setBorderWidth(float borderWidth) {
        this.borderWidth = borderWidth;
        updateImageState();
    }",True
