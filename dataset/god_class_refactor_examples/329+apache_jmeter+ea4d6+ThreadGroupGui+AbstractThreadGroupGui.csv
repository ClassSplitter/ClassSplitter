index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,serialVersionUID,Field,,,,,50,1,26,,private static final long serialVersionUID = 240L;,False
2,loopPanel,Field,,,,,35,1,2,,private LoopControlPanel loopPanel;,False
3,mainPanel,Field,,,,,32,1,2,,private VerticalPanel mainPanel;,False
4,THREAD_NAME,Field,,,,,57,1,26,,"private final static String THREAD_NAME = ""Thread Field"";",False
5,RAMP_NAME,Field,,,,,56,1,26,,"private final static String RAMP_NAME = ""Ramp Up Field"";",False
6,threadInput,Field,,,,,31,1,2,,private JTextField threadInput;,False
7,rampInput,Field,,,,,29,1,2,,private JTextField rampInput;,False
8,start,Field,,,,,25,1,2,,private JDateField start;,False
9,end,Field,,,,,23,1,2,,private JDateField end;,False
10,scheduler,Field,,,,,28,1,2,,private JCheckBox scheduler;,False
11,duration,Field,,,,,28,1,2,,private JTextField duration;,False
12,delay,Field,,,,,25,1,2,,private JTextField delay;,False
13,continueBox,Field,,,,,33,1,2,,private JRadioButton continueBox;,True
14,stopThrdBox,Field,,,,,33,1,2,,private JRadioButton stopThrdBox;,True
15,stopTestBox,Field,,,,,33,1,2,,private JRadioButton stopTestBox;,True
16,stopTestNowBox,Field,,,,,36,1,2,,private JRadioButton stopTestNowBox;,True
17,ThreadGroupGui(),Method,,,org.apache.jmeter.threads.gui.ThreadGroupGui+init() org.apache.jmeter.threads.gui.ThreadGroupGui+init() org.apache.jmeter.threads.gui.ThreadGroupGui+initGui() org.apache.jmeter.threads.gui.ThreadGroupGui+initGui(),,83,5,1,,"public ThreadGroupGui() {
        super();
        init();
        initGui();
    }",False
18,getMenuCategories(),Method,,,,,74,3,1,,"public Collection<String> getMenuCategories() {
        return null;
    }",True
19,createTestElement(),Method,,,org.apache.jmeter.threads.ThreadGroup+ThreadGroup() org.apache.jmeter.threads.gui.ThreadGroupGui+modifyTestElement(TestElement) org.apache.jmeter.threads.gui.ThreadGroupGui+modifyTestElement(TestElement),,140,5,1,,"public TestElement createTestElement() {
        ThreadGroup tg = new ThreadGroup();
        modifyTestElement(tg);
        return tg;
    }",False
20,modifyTestElement(TestElement),Method,createTestElement(),,"org.apache.jmeter.gui.AbstractJMeterGuiComponent+configureTestElement(TestElement) org.apache.jmeter.threads.ThreadGroup+setSamplerController(LoopController) org.apache.jmeter.threads.ThreadGroup+setSamplerController(LoopController) org.apache.jmeter.control.gui.LoopControlPanel+createTestElement() org.apache.jmeter.control.gui.LoopControlPanel+createTestElement() org.apache.jmeter.testelement.TestElement+setProperty(String,String) org.apache.jmeter.testelement.TestElement+setProperty(String,String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() org.apache.jmeter.testelement.TestElement+setProperty(String,String) org.apache.jmeter.testelement.TestElement+setProperty(String,String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.LongProperty+LongProperty(String,long) java.util.Date+getTime() org.apache.jmeter.gui.util.JDateField+getDate() org.apache.jmeter.gui.util.JDateField+getDate() java.util.Date+getTime() org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.LongProperty+LongProperty(String,long) java.util.Date+getTime() org.apache.jmeter.gui.util.JDateField+getDate() org.apache.jmeter.gui.util.JDateField+getDate() java.util.Date+getTime() org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.BooleanProperty+BooleanProperty(String,boolean) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.TestElement+setProperty(JMeterProperty) org.apache.jmeter.testelement.property.StringProperty+StringProperty(String,String) org.apache.jmeter.threads.gui.ThreadGroupGui+onSampleError() org.apache.jmeter.threads.gui.ThreadGroupGui+onSampleError() org.apache.jmeter.testelement.TestElement+setProperty(String,String) org.apache.jmeter.testelement.TestElement+setProperty(String,String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() org.apache.jmeter.testelement.TestElement+setProperty(String,String) org.apache.jmeter.testelement.TestElement+setProperty(String,String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText()",org.apache.jmeter.threads.gui.ThreadGroupGui+loopPanel org.apache.jmeter.threads.ThreadGroup+NUM_THREADS org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput org.apache.jmeter.threads.ThreadGroup+RAMP_TIME org.apache.jmeter.threads.gui.ThreadGroupGui+rampInput org.apache.jmeter.threads.ThreadGroup+START_TIME org.apache.jmeter.threads.gui.ThreadGroupGui+start org.apache.jmeter.threads.ThreadGroup+END_TIME org.apache.jmeter.threads.gui.ThreadGroupGui+end org.apache.jmeter.threads.ThreadGroup+SCHEDULER org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR org.apache.jmeter.threads.ThreadGroup+DURATION org.apache.jmeter.threads.gui.ThreadGroupGui+duration org.apache.jmeter.threads.ThreadGroup+DELAY org.apache.jmeter.threads.gui.ThreadGroupGui+delay,1061,20,1,"/** 
 * Modifies a given TestElement to mirror the data in the gui components.
 * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(TestElement)
 */
","/**
     * Modifies a given TestElement to mirror the data in the gui components.
     *
     * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(TestElement)
     */
    public void modifyTestElement(TestElement tg) {
        super.configureTestElement(tg);
        if (tg instanceof ThreadGroup) {
            ((ThreadGroup) tg).setSamplerController((LoopController) loopPanel.createTestElement());
        }

        tg.setProperty(ThreadGroup.NUM_THREADS, threadInput.getText());
        tg.setProperty(ThreadGroup.RAMP_TIME, rampInput.getText());
        tg.setProperty(new LongProperty(ThreadGroup.START_TIME, start.getDate().getTime()));
        tg.setProperty(new LongProperty(ThreadGroup.END_TIME, end.getDate().getTime()));
        tg.setProperty(new BooleanProperty(ThreadGroup.SCHEDULER, scheduler.isSelected()));
        tg.setProperty(new StringProperty(ThreadGroup.ON_SAMPLE_ERROR, onSampleError()));
        tg.setProperty(ThreadGroup.DURATION, duration.getText());
        tg.setProperty(ThreadGroup.DELAY, delay.getText());
    }",False
21,setSampleErrorBoxes(ThreadGroup),Method,configure(TestElement),,org.apache.jmeter.threads.ThreadGroup+getOnErrorStopTest() org.apache.jmeter.threads.ThreadGroup+getOnErrorStopTest() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) org.apache.jmeter.threads.ThreadGroup+getOnErrorStopTestNow() org.apache.jmeter.threads.ThreadGroup+getOnErrorStopTestNow() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) org.apache.jmeter.threads.ThreadGroup+getOnErrorStopThread() org.apache.jmeter.threads.ThreadGroup+getOnErrorStopThread() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean),org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestNowBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopThrdBox org.apache.jmeter.threads.gui.ThreadGroupGui+continueBox,394,11,2,,"private void setSampleErrorBoxes(ThreadGroup te) {
        if (te.getOnErrorStopTest()) {
            stopTestBox.setSelected(true);
        } else if (te.getOnErrorStopTestNow()) {
            stopTestNowBox.setSelected(true);
        } else if (te.getOnErrorStopThread()) {
            stopThrdBox.setSelected(true);
        } else {
            continueBox.setSelected(true);
        }
    }",True
22,onSampleError(),Method,,,javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected(),org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestBox org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR_STOPTEST org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestNowBox org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR_STOPTEST_NOW org.apache.jmeter.threads.gui.ThreadGroupGui+stopThrdBox org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR_STOPTHREAD org.apache.jmeter.threads.ThreadGroup+ON_SAMPLE_ERROR_CONTINUE,454,14,2,,"private String onSampleError() {
        if (stopTestBox.isSelected()) {
            return ThreadGroup.ON_SAMPLE_ERROR_STOPTEST;
        }
        if (stopTestNowBox.isSelected()) {
            return ThreadGroup.ON_SAMPLE_ERROR_STOPTEST_NOW;
        }
        if (stopThrdBox.isSelected()) {
            return ThreadGroup.ON_SAMPLE_ERROR_STOPTHREAD;
        }

        // Defaults to continue
        return ThreadGroup.ON_SAMPLE_ERROR_CONTINUE;
    }",True
23,configure(TestElement),Method,,,org.apache.jmeter.gui.AbstractJMeterGuiComponent+configure(TestElement) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) org.apache.jmeter.control.gui.LoopControlPanel+configure(TestElement) org.apache.jmeter.control.gui.LoopControlPanel+configure(TestElement) org.apache.jmeter.testelement.property.JMeterProperty+getObjectValue() org.apache.jmeter.testelement.TestElement+getProperty(String) org.apache.jmeter.testelement.TestElement+getProperty(String) org.apache.jmeter.testelement.property.JMeterProperty+getObjectValue() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) org.apache.jmeter.testelement.TestElement+getPropertyAsBoolean(String) org.apache.jmeter.testelement.TestElement+getPropertyAsBoolean(String) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.JComponent+setVisible(boolean) javax.swing.JComponent+setVisible(boolean) javax.swing.JComponent+setVisible(boolean) javax.swing.JComponent+setVisible(boolean) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) java.lang.String+length() java.lang.String+length() org.apache.jmeter.gui.util.JDateField+setDate(Date) org.apache.jmeter.gui.util.JDateField+setDate(Date) java.util.Date+Date() org.apache.jmeter.gui.util.JDateField+setDate(Date) org.apache.jmeter.gui.util.JDateField+setDate(Date) java.util.Date+Date() org.apache.jmeter.gui.util.JDateField+setDate(Date) org.apache.jmeter.gui.util.JDateField+setDate(Date) java.util.Date+Date(long) org.apache.jmeter.testelement.TestElement+getPropertyAsLong(String) org.apache.jmeter.testelement.TestElement+getPropertyAsLong(String) org.apache.jmeter.gui.util.JDateField+setDate(Date) org.apache.jmeter.gui.util.JDateField+setDate(Date) java.util.Date+Date(long) org.apache.jmeter.testelement.TestElement+getPropertyAsLong(String) org.apache.jmeter.testelement.TestElement+getPropertyAsLong(String) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) org.apache.jmeter.testelement.TestElement+getPropertyAsString(String) org.apache.jmeter.threads.gui.ThreadGroupGui+setSampleErrorBoxes(ThreadGroup) org.apache.jmeter.threads.gui.ThreadGroupGui+setSampleErrorBoxes(ThreadGroup),org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput org.apache.jmeter.threads.ThreadGroup+NUM_THREADS org.apache.jmeter.threads.gui.ThreadGroupGui+rampInput org.apache.jmeter.threads.ThreadGroup+RAMP_TIME org.apache.jmeter.threads.gui.ThreadGroupGui+loopPanel org.apache.jmeter.threads.ThreadGroup+MAIN_CONTROLLER org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.ThreadGroup+SCHEDULER org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.ThreadGroup+START_TIME org.apache.jmeter.threads.gui.ThreadGroupGui+start org.apache.jmeter.threads.gui.ThreadGroupGui+end org.apache.jmeter.threads.gui.ThreadGroupGui+start org.apache.jmeter.threads.ThreadGroup+START_TIME org.apache.jmeter.threads.gui.ThreadGroupGui+end org.apache.jmeter.threads.ThreadGroup+END_TIME org.apache.jmeter.threads.gui.ThreadGroupGui+duration org.apache.jmeter.threads.ThreadGroup+DURATION org.apache.jmeter.threads.gui.ThreadGroupGui+delay org.apache.jmeter.threads.ThreadGroup+DELAY,1188,28,1,,"@Override
    public void configure(TestElement tg) {
        super.configure(tg);
        threadInput.setText(tg.getPropertyAsString(ThreadGroup.NUM_THREADS));
        rampInput.setText(tg.getPropertyAsString(ThreadGroup.RAMP_TIME));
        loopPanel.configure((TestElement) tg.getProperty(ThreadGroup.MAIN_CONTROLLER).getObjectValue());
        scheduler.setSelected(tg.getPropertyAsBoolean(ThreadGroup.SCHEDULER));

        if (scheduler.isSelected()) {
            mainPanel.setVisible(true);
        } else {
            mainPanel.setVisible(false);
        }

        // Check if the property exists
        String s = tg.getPropertyAsString(ThreadGroup.START_TIME);
        if (s.length() == 0) {// Must be an old test plan
            start.setDate(new Date());
            end.setDate(new Date());
        } else {
            start.setDate(new Date(tg.getPropertyAsLong(ThreadGroup.START_TIME)));
            end.setDate(new Date(tg.getPropertyAsLong(ThreadGroup.END_TIME)));
        }
        duration.setText(tg.getPropertyAsString(ThreadGroup.DURATION));
        delay.setText(tg.getPropertyAsString(ThreadGroup.DELAY));

        setSampleErrorBoxes((ThreadGroup) tg);
    }",False
24,itemStateChanged(ItemEvent),Method,,,java.lang.Object+equals(Object) java.awt.event.ItemEvent+getItem() java.awt.event.ItemEvent+getItem() java.lang.Object+equals(Object) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() javax.swing.JComponent+setVisible(boolean) javax.swing.JComponent+setVisible(boolean) javax.swing.JComponent+setVisible(boolean) javax.swing.JComponent+setVisible(boolean),org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel,272,9,1,,"public void itemStateChanged(ItemEvent ie) {
        if (ie.getItem().equals(scheduler)) {
            if (scheduler.isSelected()) {
                mainPanel.setVisible(true);
            } else {
                mainPanel.setVisible(false);
            }
        }
    }",False
25,createPopupMenu(),Method,,,"javax.swing.JPopupMenu+JPopupMenu() javax.swing.JPopupMenu+add(JMenuItem) javax.swing.JPopupMenu+add(JMenuItem) org.apache.jmeter.gui.util.MenuFactory+makeMenus(String[],String,String) org.apache.jmeter.gui.util.MenuFactory+makeMenus(String[],String,String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.gui.util.MenuFactory+addEditMenu(JPopupMenu,boolean) org.apache.jmeter.gui.util.MenuFactory+addEditMenu(JPopupMenu,boolean) org.apache.jmeter.gui.util.MenuFactory+addFileMenu(JPopupMenu) org.apache.jmeter.gui.util.MenuFactory+addFileMenu(JPopupMenu)",org.apache.jmeter.gui.util.MenuFactory+CONTROLLERS org.apache.jmeter.gui.util.MenuFactory+CONFIG_ELEMENTS org.apache.jmeter.gui.util.MenuFactory+TIMERS org.apache.jmeter.gui.util.MenuFactory+PRE_PROCESSORS org.apache.jmeter.gui.util.MenuFactory+SAMPLERS org.apache.jmeter.gui.util.MenuFactory+POST_PROCESSORS org.apache.jmeter.gui.util.MenuFactory+ASSERTIONS org.apache.jmeter.gui.util.MenuFactory+LISTENERS org.apache.jmeter.gui.action.ActionNames+ADD,687,18,1,,"public JPopupMenu createPopupMenu() {
        JPopupMenu pop = new JPopupMenu();
        pop.add(MenuFactory.makeMenus(new String[] {
                MenuFactory.CONTROLLERS,
                MenuFactory.CONFIG_ELEMENTS,
                MenuFactory.TIMERS,
                MenuFactory.PRE_PROCESSORS,
                MenuFactory.SAMPLERS,
                MenuFactory.POST_PROCESSORS,
                MenuFactory.ASSERTIONS,
                MenuFactory.LISTENERS,
                },
                JMeterUtils.getResString(""add""), // $NON-NLS-1$
                ActionNames.ADD));
        MenuFactory.addEditMenu(pop, true);
        MenuFactory.addFileMenu(pop);
        return pop;
    }",True
26,createControllerPanel(),Method,init(),,org.apache.jmeter.control.gui.LoopControlPanel+LoopControlPanel(boolean) org.apache.jmeter.control.gui.LoopControlPanel+createTestElement() org.apache.jmeter.control.gui.LoopControlPanel+createTestElement() org.apache.jmeter.control.LoopController+setLoops(int) org.apache.jmeter.control.LoopController+setLoops(int) org.apache.jmeter.control.gui.LoopControlPanel+configure(TestElement) org.apache.jmeter.control.gui.LoopControlPanel+configure(TestElement),org.apache.jmeter.threads.gui.ThreadGroupGui+loopPanel org.apache.jmeter.threads.gui.ThreadGroupGui+loopPanel org.apache.jmeter.threads.gui.ThreadGroupGui+loopPanel org.apache.jmeter.threads.gui.ThreadGroupGui+loopPanel,266,7,2,,"private JPanel createControllerPanel() {
        loopPanel = new LoopControlPanel(false);
        LoopController looper = (LoopController) loopPanel.createTestElement();
        looper.setLoops(1);
        loopPanel.configure(looper);
        return loopPanel;
    }",False
27,createStartTimePanel(),Method,init(),,"javax.swing.JPanel+JPanel(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) javax.swing.JLabel+JLabel(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) org.apache.jmeter.gui.util.JDateField+JDateField() java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object)",java.awt.BorderLayout+WEST org.apache.jmeter.threads.gui.ThreadGroupGui+start org.apache.jmeter.threads.gui.ThreadGroupGui+start java.awt.BorderLayout+CENTER,499,13,2,"/** 
 * Create a panel containing the StartTime field and corresponding label.
 * @return a GUI panel containing the StartTime field
 */
","/**
     * Create a panel containing the StartTime field and corresponding label.
     *
     * @return a GUI panel containing the StartTime field
     */
    private JPanel createStartTimePanel() {
        JPanel panel = new JPanel(new BorderLayout(5, 0));
        JLabel label = new JLabel(JMeterUtils.getResString(""starttime"")); //$NON-NLS-1$
        panel.add(label, BorderLayout.WEST);
        start = new JDateField();
        panel.add(start, BorderLayout.CENTER);
        return panel;
    }",False
28,createEndTimePanel(),Method,init(),,"javax.swing.JPanel+JPanel(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) javax.swing.JLabel+JLabel(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) org.apache.jmeter.gui.util.JDateField+JDateField() java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object)",java.awt.BorderLayout+WEST org.apache.jmeter.threads.gui.ThreadGroupGui+end org.apache.jmeter.threads.gui.ThreadGroupGui+end java.awt.BorderLayout+CENTER,489,14,2,"/** 
 * Create a panel containing the EndTime field and corresponding label.
 * @return a GUI panel containing the EndTime field
 */
","/**
     * Create a panel containing the EndTime field and corresponding label.
     *
     * @return a GUI panel containing the EndTime field
     */
    private JPanel createEndTimePanel() {
        JPanel panel = new JPanel(new BorderLayout(5, 0));
        JLabel label = new JLabel(JMeterUtils.getResString(""endtime"")); // $NON-NLS-1$
        panel.add(label, BorderLayout.WEST);

        end = new JDateField();
        panel.add(end, BorderLayout.CENTER);
        return panel;
    }",False
29,createDurationPanel(),Method,init(),,"javax.swing.JPanel+JPanel(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) javax.swing.JLabel+JLabel(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) javax.swing.JTextField+JTextField() java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object)",java.awt.BorderLayout+WEST org.apache.jmeter.threads.gui.ThreadGroupGui+duration org.apache.jmeter.threads.gui.ThreadGroupGui+duration java.awt.BorderLayout+CENTER,502,13,2,"/** 
 * Create a panel containing the Duration field and corresponding label.
 * @return a GUI panel containing the Duration field
 */
","/**
     * Create a panel containing the Duration field and corresponding label.
     *
     * @return a GUI panel containing the Duration field
     */
    private JPanel createDurationPanel() {
        JPanel panel = new JPanel(new BorderLayout(5, 0));
        JLabel label = new JLabel(JMeterUtils.getResString(""duration"")); // $NON-NLS-1$
        panel.add(label, BorderLayout.WEST);
        duration = new JTextField();
        panel.add(duration, BorderLayout.CENTER);
        return panel;
    }",False
30,createDelayPanel(),Method,init(),,"javax.swing.JPanel+JPanel(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) javax.swing.JLabel+JLabel(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) javax.swing.JTextField+JTextField() java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object)",java.awt.BorderLayout+WEST org.apache.jmeter.threads.gui.ThreadGroupGui+delay org.apache.jmeter.threads.gui.ThreadGroupGui+delay java.awt.BorderLayout+CENTER,490,13,2,"/** 
 * Create a panel containing the Duration field and corresponding label.
 * @return a GUI panel containing the Duration field
 */
","/**
     * Create a panel containing the Duration field and corresponding label.
     *
     * @return a GUI panel containing the Duration field
     */
    private JPanel createDelayPanel() {
        JPanel panel = new JPanel(new BorderLayout(5, 0));
        JLabel label = new JLabel(JMeterUtils.getResString(""delay"")); // $NON-NLS-1$
        panel.add(label, BorderLayout.WEST);
        delay = new JTextField();
        panel.add(delay, BorderLayout.CENTER);
        return panel;
    }",False
31,getLabelResource(),Method,,,,,85,3,1,,"public String getLabelResource() {
        return ""threadgroup""; // $NON-NLS-1$
    }",False
32,createOnErrorPanel(),Method,init(),,javax.swing.JPanel+JPanel() javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createTitledBorder(String) javax.swing.BorderFactory+createTitledBorder(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) javax.swing.ButtonGroup+ButtonGroup() javax.swing.JRadioButton+JRadioButton(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) javax.swing.ButtonGroup+add(AbstractButton) javax.swing.ButtonGroup+add(AbstractButton) java.awt.Container+add(Component) java.awt.Container+add(Component) javax.swing.JRadioButton+JRadioButton(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) javax.swing.ButtonGroup+add(AbstractButton) javax.swing.ButtonGroup+add(AbstractButton) java.awt.Container+add(Component) java.awt.Container+add(Component) javax.swing.JRadioButton+JRadioButton(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) javax.swing.ButtonGroup+add(AbstractButton) javax.swing.ButtonGroup+add(AbstractButton) java.awt.Container+add(Component) java.awt.Container+add(Component) javax.swing.JRadioButton+JRadioButton(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) javax.swing.ButtonGroup+add(AbstractButton) javax.swing.ButtonGroup+add(AbstractButton) java.awt.Container+add(Component) java.awt.Container+add(Component),org.apache.jmeter.threads.gui.ThreadGroupGui+continueBox org.apache.jmeter.threads.gui.ThreadGroupGui+continueBox org.apache.jmeter.threads.gui.ThreadGroupGui+continueBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopThrdBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopThrdBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopThrdBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestNowBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestNowBox org.apache.jmeter.threads.gui.ThreadGroupGui+stopTestNowBox,996,24,2,,"private JPanel createOnErrorPanel() {
        JPanel panel = new JPanel();
        panel.setBorder(BorderFactory.createTitledBorder(JMeterUtils.getResString(""sampler_on_error_action""))); // $NON-NLS-1$

        ButtonGroup group = new ButtonGroup();

        continueBox = new JRadioButton(JMeterUtils.getResString(""sampler_on_error_continue"")); // $NON-NLS-1$
        group.add(continueBox);
        panel.add(continueBox);

        stopThrdBox = new JRadioButton(JMeterUtils.getResString(""sampler_on_error_stop_thread"")); // $NON-NLS-1$
        group.add(stopThrdBox);
        panel.add(stopThrdBox);

        stopTestBox = new JRadioButton(JMeterUtils.getResString(""sampler_on_error_stop_test"")); // $NON-NLS-1$
        group.add(stopTestBox);
        panel.add(stopTestBox);

        stopTestNowBox = new JRadioButton(JMeterUtils.getResString(""sampler_on_error_stop_test_now"")); // $NON-NLS-1$
        group.add(stopTestNowBox);
        panel.add(stopTestNowBox);

        return panel;
    }",True
33,clearGui(),Method,,,org.apache.jmeter.gui.AbstractJMeterGuiComponent+clearGui() org.apache.jmeter.threads.gui.ThreadGroupGui+initGui() org.apache.jmeter.threads.gui.ThreadGroupGui+initGui(),,88,5,1,,"@Override
    public void clearGui(){
        super.clearGui();
        initGui();
    }",False
34,initGui(),Method,ThreadGroupGui() clearGui(),,javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) org.apache.jmeter.control.gui.LoopControlPanel+clearGui() org.apache.jmeter.control.gui.LoopControlPanel+clearGui() javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) java.util.Date+Date() org.apache.jmeter.gui.util.JDateField+setDate(Date) org.apache.jmeter.gui.util.JDateField+setDate(Date) org.apache.jmeter.gui.util.JDateField+setDate(Date) org.apache.jmeter.gui.util.JDateField+setDate(Date) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String),org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput org.apache.jmeter.threads.gui.ThreadGroupGui+rampInput org.apache.jmeter.threads.gui.ThreadGroupGui+continueBox org.apache.jmeter.threads.gui.ThreadGroupGui+loopPanel org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.gui.ThreadGroupGui+end org.apache.jmeter.threads.gui.ThreadGroupGui+start org.apache.jmeter.threads.gui.ThreadGroupGui+delay org.apache.jmeter.threads.gui.ThreadGroupGui+duration,410,12,2,,"private void initGui(){
        threadInput.setText(""1""); // $NON-NLS-1$
        rampInput.setText(""1""); // $NON-NLS-1$
        continueBox.setSelected(true);
        loopPanel.clearGui();
        scheduler.setSelected(false);
        Date today = new Date();
        end.setDate(today);
        start.setDate(today);
        delay.setText(""""); // $NON-NLS-1$
        duration.setText(""""); // $NON-NLS-1$
    }",False
35,init(),Method,ThreadGroupGui(),,"java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) org.apache.jmeter.gui.AbstractJMeterGuiComponent+makeBorder() org.apache.jmeter.gui.AbstractJMeterGuiComponent+makeBorder() javax.swing.Box+createVerticalBox() javax.swing.Box+createVerticalBox() java.awt.Container+add(Component) java.awt.Container+add(Component) org.apache.jmeter.gui.AbstractJMeterGuiComponent+makeTitlePanel() org.apache.jmeter.gui.AbstractJMeterGuiComponent+makeTitlePanel() java.awt.Container+add(Component) java.awt.Container+add(Component) org.apache.jmeter.threads.gui.ThreadGroupGui+createOnErrorPanel() org.apache.jmeter.threads.gui.ThreadGroupGui+createOnErrorPanel() java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) org.apache.jmeter.gui.util.VerticalPanel+VerticalPanel() javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createTitledBorder(Border,String) javax.swing.BorderFactory+createTitledBorder(Border,String) javax.swing.BorderFactory+createEtchedBorder() javax.swing.BorderFactory+createEtchedBorder() org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) javax.swing.JPanel+JPanel(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) javax.swing.JLabel+JLabel(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) javax.swing.JTextField+JTextField(int) java.awt.Component+setName(String) java.awt.Component+setName(String) javax.swing.JLabel+setLabelFor(Component) javax.swing.JLabel+setLabelFor(Component) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.FocusRequester+FocusRequester(Component) javax.swing.JPanel+JPanel(LayoutManager) java.awt.BorderLayout+BorderLayout(int,int) javax.swing.JLabel+JLabel(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) javax.swing.JTextField+JTextField(int) java.awt.Component+setName(String) java.awt.Component+setName(String) javax.swing.JLabel+setLabelFor(Component) javax.swing.JLabel+setLabelFor(Component) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.threads.gui.ThreadGroupGui+createControllerPanel() org.apache.jmeter.threads.gui.ThreadGroupGui+createControllerPanel() javax.swing.JCheckBox+JCheckBox(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) javax.swing.AbstractButton+addItemListener(ItemListener) javax.swing.AbstractButton+addItemListener(ItemListener) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+VerticalPanel() javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createTitledBorder(Border,String) javax.swing.BorderFactory+createTitledBorder(Border,String) javax.swing.BorderFactory+createEtchedBorder() javax.swing.BorderFactory+createEtchedBorder() org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.util.JMeterUtils+getResString(String) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.threads.gui.ThreadGroupGui+createStartTimePanel() org.apache.jmeter.threads.gui.ThreadGroupGui+createStartTimePanel() org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.threads.gui.ThreadGroupGui+createEndTimePanel() org.apache.jmeter.threads.gui.ThreadGroupGui+createEndTimePanel() org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.threads.gui.ThreadGroupGui+createDurationPanel() org.apache.jmeter.threads.gui.ThreadGroupGui+createDurationPanel() org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.threads.gui.ThreadGroupGui+createDelayPanel() org.apache.jmeter.threads.gui.ThreadGroupGui+createDelayPanel() javax.swing.JComponent+setVisible(boolean) javax.swing.JComponent+setVisible(boolean) org.apache.jmeter.gui.util.VerticalPanel+VerticalPanel() org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) org.apache.jmeter.gui.util.VerticalPanel+add(Component) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object)",java.awt.BorderLayout+NORTH java.awt.BorderLayout+WEST org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput org.apache.jmeter.threads.gui.ThreadGroupGui+THREAD_NAME org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput java.awt.BorderLayout+CENTER org.apache.jmeter.threads.gui.ThreadGroupGui+threadInput java.awt.BorderLayout+WEST org.apache.jmeter.threads.gui.ThreadGroupGui+rampInput org.apache.jmeter.threads.gui.ThreadGroupGui+rampInput org.apache.jmeter.threads.gui.ThreadGroupGui+RAMP_NAME org.apache.jmeter.threads.gui.ThreadGroupGui+rampInput org.apache.jmeter.threads.gui.ThreadGroupGui+rampInput java.awt.BorderLayout+CENTER org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.gui.ThreadGroupGui+scheduler org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel org.apache.jmeter.threads.gui.ThreadGroupGui+mainPanel java.awt.BorderLayout+CENTER,2576,64,2,,"private void init() {
        setLayout(new BorderLayout(0, 5));
        setBorder(makeBorder());

        Box box = Box.createVerticalBox();
        box.add(makeTitlePanel());
        box.add(createOnErrorPanel());
        add(box, BorderLayout.NORTH);

        // JPanel mainPanel = new JPanel(new BorderLayout());

        // THREAD PROPERTIES
        VerticalPanel threadPropsPanel = new VerticalPanel();
        threadPropsPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),
                JMeterUtils.getResString(""thread_properties""))); // $NON-NLS-1$

        // NUMBER OF THREADS
        JPanel threadPanel = new JPanel(new BorderLayout(5, 0));

        JLabel threadLabel = new JLabel(JMeterUtils.getResString(""number_of_threads"")); // $NON-NLS-1$
        threadPanel.add(threadLabel, BorderLayout.WEST);

        threadInput = new JTextField(5);
        threadInput.setName(THREAD_NAME);
        threadLabel.setLabelFor(threadInput);
        threadPanel.add(threadInput, BorderLayout.CENTER);

        threadPropsPanel.add(threadPanel);
        new FocusRequester(threadInput);

        // RAMP-UP
        JPanel rampPanel = new JPanel(new BorderLayout(5, 0));
        JLabel rampLabel = new JLabel(JMeterUtils.getResString(""ramp_up"")); // $NON-NLS-1$
        rampPanel.add(rampLabel, BorderLayout.WEST);

        rampInput = new JTextField(5);
        rampInput.setName(RAMP_NAME);
        rampLabel.setLabelFor(rampInput);
        rampPanel.add(rampInput, BorderLayout.CENTER);

        threadPropsPanel.add(rampPanel);

        // LOOP COUNT
        threadPropsPanel.add(createControllerPanel());

        // mainPanel.add(threadPropsPanel, BorderLayout.NORTH);
        // add(mainPanel, BorderLayout.CENTER);

        scheduler = new JCheckBox(JMeterUtils.getResString(""scheduler"")); // $NON-NLS-1$
        scheduler.addItemListener(this);
        threadPropsPanel.add(scheduler);
        mainPanel = new VerticalPanel();
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),
                JMeterUtils.getResString(""scheduler_configuration""))); // $NON-NLS-1$
        mainPanel.add(createStartTimePanel());
        mainPanel.add(createEndTimePanel());
        mainPanel.add(createDurationPanel());
        mainPanel.add(createDelayPanel());
        mainPanel.setVisible(false);
        VerticalPanel intgrationPanel = new VerticalPanel();
        intgrationPanel.add(threadPropsPanel);
        intgrationPanel.add(mainPanel);
        add(intgrationPanel, BorderLayout.CENTER);
    }",False
36,setNode(JMeterTreeNode),Method,,,org.apache.jmeter.gui.NamePanel+setNode(TreeNode) org.apache.jmeter.gui.AbstractJMeterGuiComponent+getNamePanel() org.apache.jmeter.gui.AbstractJMeterGuiComponent+getNamePanel() org.apache.jmeter.gui.NamePanel+setNode(TreeNode),,86,3,1,,"public void setNode(JMeterTreeNode node) {
        getNamePanel().setNode(node);
    }",True
37,getPreferredSize(),Method,,,javax.swing.JComponent+getMinimumSize() javax.swing.JComponent+getMinimumSize(),,90,4,1,,"@Override
    public Dimension getPreferredSize() {
        return getMinimumSize();
    }",True
