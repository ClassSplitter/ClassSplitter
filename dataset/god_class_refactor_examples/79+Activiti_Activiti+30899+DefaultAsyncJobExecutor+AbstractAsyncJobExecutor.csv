index,name,document,type,inner invocations,external invocations,calls,visits,length,lines,modifier,commit,full text,moved,removed,gpt text,gpt response,code summary
1,log,log ,Field,,,,,83,1,10,,private static Logger log = LoggerFactory.getLogger(DefaultAsyncJobExecutor.class);,False,False,,False,
2,corePoolSize,core pool size the minimal number of threads that are kept alive in the threadpool for job execution ,Field,setCorePoolSize(int),,,,126,2,4,"/** 
 * The minimal number of threads that are kept alive in the threadpool for job execution 
 */
","/** The minimal number of threads that are kept alive in the threadpool for job execution */
  protected int corePoolSize = 2;",False,False,"/** 
 * The minimal number of threads that are kept alive in the threadpool for job execution 
 */
",False,"/** 
 * The minimal number of threads that are kept alive in the threadpool for job execution 
 */
"
3,maxPoolSize,max pool size the maximum number of threads that are kept alive in the threadpool for job execution ,Field,setMaxPoolSize(int),,,,126,2,4,"/** 
 * The maximum number of threads that are kept alive in the threadpool for job execution 
 */
","/** The maximum number of threads that are kept alive in the threadpool for job execution */
  protected int maxPoolSize = 10;",False,False,"/** 
 * The maximum number of threads that are kept alive in the threadpool for job execution 
 */
",False,"/** 
 * The maximum number of threads that are kept alive in the threadpool for job execution 
 */
"
4,keepAliveTime,keep alive time the time in milliseconds a thread used for job execution must be kept alive before it is destroyed default setting is 0 having a non default setting of 0 takes resources but in the case of many job executions it avoids creating new threads all the time ,Field,setKeepAliveTime(long),,,,325,6,4,"/** 
 * The time (in milliseconds) a thread used for job execution must be kept alive before it is destroyed. Default setting is 0. Having a non-default setting of 0 takes resources, but in the case of many job executions it avoids creating new threads all the time. 
 */
","/** 
   * The time (in milliseconds) a thread used for job execution must be kept alive before it is
   * destroyed. Default setting is 0. Having a non-default setting of 0 takes resources,
   * but in the case of many job executions it avoids creating new threads all the time. 
   */
  protected long keepAliveTime = 5000L;",True,True,"/** 
 * The time (in milliseconds) a thread used for job execution must be kept alive before it is destroyed. Default setting is 0. Having a non-default setting of 0 takes resources, but in the case of many job executions it avoids creating new threads all the time. 
 */
",False,"/** 
 * The time (in milliseconds) a thread used for job execution must be kept alive before it is destroyed. Default setting is 0. Having a non-default setting of 0 takes resources, but in the case of many job executions it avoids creating new threads all the time. 
 */
"
5,queueSize,queue size the size of the queue on which jobs to be executed are placed ,Field,setQueueSize(int),,,,101,2,4,"/** 
 * The size of the queue on which jobs to be executed are placed 
 */
","/** The size of the queue on which jobs to be executed are placed */
  protected int queueSize = 100;",False,False,"/** 
 * The size of the queue on which jobs to be executed are placed 
 */
",False,"/** 
 * The size of the queue on which jobs to be executed are placed 
 */
"
6,threadPoolQueue,thread pool queue the queue used for job execution work ,Field,setThreadPoolQueue(BlockingQueue<Runnable>),,,,97,2,4,"/** 
 * The queue used for job execution work 
 */
","/** The queue used for job execution work */
  protected BlockingQueue<Runnable> threadPoolQueue;",False,False,"/** 
 * The queue used for job execution work 
 */
",False,"/** 
 * The queue used for job execution work 
 */
"
7,executorService,executor service the executor service used for job execution ,Field,setExecutorService(ExecutorService),,,,95,2,4,"/** 
 * The executor service used for job execution 
 */
","/** The executor service used for job execution */
  protected ExecutorService executorService;",False,False,"/** 
 * The executor service used for job execution 
 */
",False,"/** 
 * The executor service used for job execution 
 */
"
8,secondsToWaitOnShutdown,seconds to wait on shutdown the time in seconds that is waited to gracefully shut down the threadpool used for job execution ,Field,setSecondsToWaitOnShutdown(long),,,,153,2,4,"/** 
 * The time (in seconds) that is waited to gracefully shut down the threadpool used for job execution 
 */
","/** The time (in seconds) that is waited to gracefully shut down the threadpool used for job execution */
  protected long secondsToWaitOnShutdown = 60L;",False,False,"/** 
 * The time (in seconds) that is waited to gracefully shut down the threadpool used for job execution 
 */
",False,"/** 
 * The time (in seconds) that is waited to gracefully shut down the threadpool used for job execution 
 */
"
9,timerJobAcquisitionThread,timer job acquisition thread ,Field,,,,,43,1,4,,protected Thread timerJobAcquisitionThread;,True,True,,False,
10,asyncJobAcquisitionThread,async job acquisition thread ,Field,,,,,43,1,4,,protected Thread asyncJobAcquisitionThread;,True,True,,False,
11,timerJobRunnable,timer job runnable ,Field,setTimerJobRunnable(AcquireTimerJobsRunnable),,,,52,1,4,,protected AcquireTimerJobsRunnable timerJobRunnable;,True,True,,False,
12,asyncJobsDueRunnable,async jobs due runnable ,Field,setAsyncJobsDueRunnable(AcquireAsyncJobsDueRunnable),,,,59,1,4,,protected AcquireAsyncJobsDueRunnable asyncJobsDueRunnable;,True,True,,False,
13,executeAsyncRunnableFactory,execute async runnable factory ,Field,setExecuteAsyncRunnableFactory(ExecuteAsyncRunnableFactory),,,,66,1,4,,protected ExecuteAsyncRunnableFactory executeAsyncRunnableFactory;,True,True,,False,
14,isAutoActivate,is auto activate ,Field,setAutoActivate(boolean),,,,41,1,4,,protected boolean isAutoActivate = false;,True,True,,False,
15,isActive,is active ,Field,,,,,35,1,4,,protected boolean isActive = false;,True,True,,False,
16,maxTimerJobsPerAcquisition,max timer jobs per acquisition ,Field,setMaxTimerJobsPerAcquisition(int),,,,45,1,4,,protected int maxTimerJobsPerAcquisition = 1;,True,True,,False,
17,maxAsyncJobsDuePerAcquisition,max async jobs due per acquisition ,Field,setMaxAsyncJobsDuePerAcquisition(int),,,,48,1,4,,protected int maxAsyncJobsDuePerAcquisition = 1;,True,True,,False,
18,defaultTimerJobAcquireWaitTimeInMillis,default timer job acquire wait time in millis ,Field,setDefaultTimerJobAcquireWaitTimeInMillis(int),,,,65,1,4,,protected int defaultTimerJobAcquireWaitTimeInMillis = 10 * 1000;,True,True,,False,
19,defaultAsyncJobAcquireWaitTimeInMillis,default async job acquire wait time in millis ,Field,setDefaultAsyncJobAcquireWaitTimeInMillis(int),,,,65,1,4,,protected int defaultAsyncJobAcquireWaitTimeInMillis = 10 * 1000;,True,True,,False,
20,defaultQueueSizeFullWaitTime,default queue size full wait time ,Field,setDefaultQueueSizeFullWaitTimeInMillis(int),,,,47,1,4,,protected int defaultQueueSizeFullWaitTime = 0;,True,True,,False,
21,lockOwner,lock owner ,Field,setLockOwner(String),,,,58,1,4,,protected String lockOwner = UUID.randomUUID().toString();,True,True,,False,
22,timerLockTimeInMillis,timer lock time in millis ,Field,setTimerLockTimeInMillis(int),,,,52,1,4,,protected int timerLockTimeInMillis = 5 * 60 * 1000;,True,True,,False,
23,asyncJobLockTimeInMillis,async job lock time in millis ,Field,setAsyncJobLockTimeInMillis(int),,,,55,1,4,,protected int asyncJobLockTimeInMillis = 5 * 60 * 1000;,True,True,,False,
24,retryWaitTimeInMillis,retry wait time in millis ,Field,setRetryWaitTimeInMillis(int),,,,42,1,4,,protected int retryWaitTimeInMillis = 500;,True,True,,False,
25,temporaryJobQueue,temporary job queue ,Field,,,,,80,1,4,,protected LinkedList<JobEntity> temporaryJobQueue = new LinkedList<JobEntity>();,True,True,,False,
26,commandExecutor,command executor ,Field,setCommandExecutor(CommandExecutor),,,,42,1,4,,protected CommandExecutor commandExecutor;,True,True,,False,
27,executeAsyncJob(JobEntity),execute async job job ,Method,start(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+createRunnableForJob(JobEntity) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+createRunnableForJob(JobEntity) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncJob(Runnable) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncJob(Runnable) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+doUnlockJob(JobEntity) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+doUnlockJob(JobEntity) java.util.LinkedList+add(E) java.util.LinkedList+add(E),org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isActive org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+temporaryJobQueue,350,11,1,,"public boolean executeAsyncJob(JobEntity job) {
    if (isActive) {
      Runnable runnable = createRunnableForJob(job);
      boolean result = executeAsyncJob(runnable);
      if (!result) doUnlockJob(job);
      return result; // false indicates that the job was rejected.
    } else {
      temporaryJobQueue.add(job);
      return true;
    }
  }",True,True,"This method executes a job asynchronously. If the job is active, it creates a runnable for the job, executes the job asynchronously, and returns true if successful. If the job is not active, it adds the job to a temporary job queue and returns true.",True,"The given code is a method named `executeAsyncJob` that takes a `JobEntity` object as input. If the job is active, it creates a `Runnable` for the job, executes it asynchronously, and returns `true` if successful. If the job is not active, it adds the job to a temporary queue and returns `true`."
28,executeAsyncJob(Runnable),execute async job runnable ,Method,executeAsyncJob(JobEntity),,java.util.concurrent.Executor+execute(Runnable) java.util.concurrent.Executor+execute(Runnable),org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService,461,11,4,,"protected boolean executeAsyncJob(Runnable runnable) {
    try {
      executorService.execute(runnable);
      return true;
    } catch (RejectedExecutionException e) {
      // When a RejectedExecutionException is caught, this means that the queue for holding the jobs 
      // that are to be executed is full and can't store more.
      // Return false so the job can be unlocked and (if wanted) the acquiring can be throttled.
      return false;
    }
  }",False,False,"This method executes a job asynchronously by using an executor service. It returns true if the job is successfully executed, and false if the job cannot be executed due to a full job queue.",True,"The code defines a protected method called ""executeAsyncJob"" that takes a ""Runnable"" object as a parameter. It attempts to execute the runnable asynchronously using an executor service. If the execution is successful, it returns true. If the executor service's job queue is full and cannot accept more jobs, it catches the RejectedExecutionException and returns false."
29,doUnlockJob(JobEntity),do unlock job job ,Method,executeAsyncJob(JobEntity),,"org.activiti.engine.impl.context.Context+getCommandContext() org.activiti.engine.impl.context.Context+getCommandContext() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+unlockJob(JobEntity,CommandContext) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+unlockJob(JobEntity,CommandContext) org.activiti.engine.impl.interceptor.CommandExecutor+execute(Command<T>) org.activiti.engine.impl.interceptor.CommandExecutor+execute(Command<T>) +() +execute(CommandContext)",org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+commandExecutor,860,20,2,,"private void doUnlockJob(final JobEntity job) {
    // The job will now be 'unlocked', meaning that the lock owner/time is set to null,
    // so other executors can pick the job up (or this async executor, the next time the 
    // acquire query is executed.
    
    // This can happen while already in a command context (for example in a transaction listener
    // after the async executor has been hinted that a new async job is created)
    // or not (when executed in the aquire thread runnable)
    CommandContext commandContext = Context.getCommandContext();
    if (commandContext != null) {
      unlockJob(job, commandContext);
    } else {
      commandExecutor.execute(new Command<Void>() {
        public Void execute(CommandContext commandContext) {
          unlockJob(job, commandContext);
          return null;
        }
      });
    }
  }",True,True,"This method unlocks a job by setting its lock owner and time to null, allowing other executors to pick up the job. It can be called within a command context or outside of it, and uses a command executor to execute the unlocking operation.",True,"The `doUnlockJob` method is responsible for unlocking a job entity, allowing other executors to pick it up. It checks if the method is already executed within a command context and if so, it directly unlocks the job. Otherwise, it executes the unlocking process within a command executor."
30,createRunnableForJob(JobEntity),create runnable for job job ,Method,executeAsyncJob(JobEntity),,"org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnableFactory+createExecuteAsyncRunnable(JobEntity,CommandExecutor) org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnableFactory+createExecuteAsyncRunnable(JobEntity,CommandExecutor)",org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncRunnableFactory org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+commandExecutor,155,3,4,,"protected Runnable createRunnableForJob(final JobEntity job) {
    return executeAsyncRunnableFactory.createExecuteAsyncRunnable(job, commandExecutor);
  }",False,False,The function of the method is to create a Runnable object for a given JobEntity object by using an executeAsyncRunnableFactory and a commandExecutor.,True,"The code defines a protected method called ""createRunnableForJob"" that takes a JobEntity object as a parameter. It returns a Runnable object created by the executeAsyncRunnableFactory, passing the job and commandExecutor as arguments."
31,"unlockJob(JobEntity,CommandContext)",unlock job job command context ,Method,doUnlockJob(JobEntity),,org.activiti.engine.impl.persistence.entity.JobEntityManager+unacquireJob(String) org.activiti.engine.impl.interceptor.CommandContext+getJobEntityManager() org.activiti.engine.impl.interceptor.CommandContext+getJobEntityManager() org.activiti.engine.impl.persistence.entity.JobEntityManager+unacquireJob(String) org.activiti.engine.impl.persistence.entity.JobEntity+getId() org.activiti.engine.impl.persistence.entity.JobEntity+getId(),,150,3,4,,"protected void unlockJob(final JobEntity job, CommandContext commandContext) {
    commandContext.getJobEntityManager().unacquireJob(job.getId());
  }",False,False,"This method serves to unlock a job by calling the ""unacquireJob"" method on the JobEntityManager of the given CommandContext.",True,"The code defines a protected method called ""unlockJob"" that takes a JobEntity object and a CommandContext object as parameters. Within the method, it calls the ""unacquireJob"" method on the JobEntityManager of the CommandContext to unlock the specified job."
32,start(),start starts the async executor ,Method,,,java.lang.Class+getName() java.lang.Object+getClass() java.lang.Object+getClass() java.lang.Class+getName() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+initialize() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+initialize() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+startExecutingAsyncJobs() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+startExecutingAsyncJobs() java.util.AbstractCollection+isEmpty() java.util.AbstractCollection+isEmpty() java.util.LinkedList+pop() java.util.LinkedList+pop() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncJob(JobEntity) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncJob(JobEntity),org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isActive org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isActive org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+temporaryJobQueue org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+temporaryJobQueue org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isActive,430,18,1,"/** 
 * Starts the async executor 
 */
","/** Starts the async executor */
  public void start() {
    if (isActive) {
      return;
    }
    
    log.info(""Starting up the default async job executor [{}]."", getClass().getName());
    initialize();
    startExecutingAsyncJobs();
    
    isActive = true;
        
    while (temporaryJobQueue.isEmpty() == false) {
      JobEntity job = temporaryJobQueue.pop();
      executeAsyncJob(job);
    }
    isActive = true;
  }",True,True,"This method starts the async executor by initializing it, starting the execution of async jobs, and executing any jobs in the temporary job queue.",False,"The `start()` method is responsible for starting the async executor. It initializes the executor, starts executing async jobs, and then processes any remaining jobs in the temporary job queue. Once all jobs are processed, the executor is marked as active."
33,initialize(),initialize ,Method,start(),,org.activiti.engine.impl.asyncexecutor.AcquireTimerJobsRunnable+AcquireTimerJobsRunnable(AsyncExecutor) org.activiti.engine.impl.asyncexecutor.AcquireAsyncJobsDueRunnable+AcquireAsyncJobsDueRunnable(AsyncExecutor) org.activiti.engine.impl.asyncexecutor.DefaultExecuteAsyncRunnableFactory+DefaultExecuteAsyncRunnableFactory(),org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobsDueRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobsDueRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncRunnableFactory org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncRunnableFactory,381,11,4,,"protected void initialize() {
    if (timerJobRunnable == null) {
      timerJobRunnable = new AcquireTimerJobsRunnable(this);
    }
    if (asyncJobsDueRunnable == null) {
      asyncJobsDueRunnable = new AcquireAsyncJobsDueRunnable(this);
    }
    if (executeAsyncRunnableFactory == null) {
      executeAsyncRunnableFactory = new DefaultExecuteAsyncRunnableFactory();
    }
  }",True,True,"This method initializes the timerJobRunnable, asyncJobsDueRunnable, and executeAsyncRunnableFactory if they are null.",False,"The `initialize()` method initializes three variables (`timerJobRunnable`, `asyncJobsDueRunnable`, and `executeAsyncRunnableFactory`) if they are null by creating new instances of their respective classes (`AcquireTimerJobsRunnable`, `AcquireAsyncJobsDueRunnable`, and `DefaultExecuteAsyncRunnableFactory`). This method ensures that these variables are properly initialized before they are used in the code."
34,shutdown(),shutdown shuts down the whole job executor ,Method,,,java.lang.Class+getName() java.lang.Object+getClass() java.lang.Object+getClass() java.lang.Class+getName() org.activiti.engine.impl.asyncexecutor.AcquireTimerJobsRunnable+stop() org.activiti.engine.impl.asyncexecutor.AcquireTimerJobsRunnable+stop() org.activiti.engine.impl.asyncexecutor.AcquireAsyncJobsDueRunnable+stop() org.activiti.engine.impl.asyncexecutor.AcquireAsyncJobsDueRunnable+stop() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+stopExecutingAsyncJobs() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+stopExecutingAsyncJobs(),org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isActive org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobsDueRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobsDueRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isActive,396,14,33,"/** 
 * Shuts down the whole job executor 
 */
","/** Shuts down the whole job executor */
  public synchronized void shutdown() {
    if (!isActive) {
      return;
    }
    log.info(""Shutting down the default async job executor [{}]."", getClass().getName());
    timerJobRunnable.stop();
    asyncJobsDueRunnable.stop();
    stopExecutingAsyncJobs();
    
    timerJobRunnable = null;
    asyncJobsDueRunnable = null;
    isActive = false;
  }",True,True,"This method shuts down the job executor by stopping the timer job, stopping the async jobs, and setting the isActive flag to false.",False,"This code defines a method called ""shutdown"" that is responsible for stopping the execution of a job executor. It checks if the executor is active, logs a shutdown message, stops the timer job and async jobs, and sets the executor's status to inactive."
35,startExecutingAsyncJobs(),start executing async jobs ,Method,start(),,"java.util.concurrent.ArrayBlockingQueue+ArrayBlockingQueue(int) java.util.concurrent.ThreadPoolExecutor+ThreadPoolExecutor(int,int,long,TimeUnit,BlockingQueue) org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+startJobAcquisitionThread() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+startJobAcquisitionThread()",org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+threadPoolQueue org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+queueSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+threadPoolQueue org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+queueSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+corePoolSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxPoolSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+keepAliveTime org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+corePoolSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxPoolSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+keepAliveTime java.util.concurrent.TimeUnit+MILLISECONDS org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+threadPoolQueue,602,15,4,,"protected void startExecutingAsyncJobs() {
    if (threadPoolQueue==null) {
      log.info(""Creating thread pool queue of size {}"", queueSize);
      threadPoolQueue = new ArrayBlockingQueue<Runnable>(queueSize);
    }
    
    if (executorService==null) {
      log.info(""Creating executor service with corePoolSize {}, maxPoolSize {} and keepAliveTime {}"",
          corePoolSize, maxPoolSize, keepAliveTime);
      
      executorService = new ThreadPoolExecutor(corePoolSize, maxPoolSize, keepAliveTime, TimeUnit.MILLISECONDS, threadPoolQueue);      
    }
    
    startJobAcquisitionThread();
  }",False,False,"The function of the method is to start executing asynchronous jobs. It checks if the thread pool queue and executor service are null, and creates them if they are. Then, it starts the job acquisition thread.",True,"The `startExecutingAsyncJobs` method initializes a thread pool queue and an executor service if they are not already created, using the specified queue size, core pool size, max pool size, and keep alive time. It then starts a job acquisition thread."
36,stopExecutingAsyncJobs(),stop executing async jobs ,Method,shutdown(),,"org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+stopJobAcquisitionThread() org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+stopJobAcquisitionThread() java.util.concurrent.ExecutorService+shutdown() java.util.concurrent.ExecutorService+shutdown() java.util.concurrent.ExecutorService+awaitTermination(long,TimeUnit) java.util.concurrent.ExecutorService+awaitTermination(long,TimeUnit)",org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+secondsToWaitOnShutdown java.util.concurrent.TimeUnit+SECONDS org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+secondsToWaitOnShutdown org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService,718,19,4,,"protected void stopExecutingAsyncJobs() {
    stopJobAcquisitionThread();
    
    // Ask the thread pool to finish and exit
    executorService.shutdown();

    // Waits for 1 minute to finish all currently executing jobs
    try {
      if(!executorService.awaitTermination(secondsToWaitOnShutdown, TimeUnit.SECONDS)) {
        log.warn(""Timeout during shutdown of async job executor. ""
            + ""The current running jobs could not end within "" 
            + secondsToWaitOnShutdown + "" seconds after shutdown operation."");        
      }              
    } catch (InterruptedException e) {
      log.warn(""Interrupted while shutting down the async job executor. "", e);
    }

    executorService = null;
  }",False,False,"This method is used to stop the execution of asynchronous jobs. It stops the job acquisition thread, shuts down the executor service, waits for a specified amount of time for currently executing jobs to finish, and then sets the executor service to null.",True,"The `stopExecutingAsyncJobs` method is responsible for stopping the execution of asynchronous jobs. It shuts down the executor service, waits for a specified amount of time for currently executing jobs to finish, and logs a warning if the timeout is exceeded. Finally, it sets the executor service to null."
37,startJobAcquisitionThread(),start job acquisition thread starts the acquisition thread ,Method,startExecutingAsyncJobs(),org.activiti.engine.impl.asyncexecutor.ManagedAsyncJobExecutor+startExecutingAsyncJobs() org.activiti.spring.SpringAsyncExecutor+startExecutingAsyncJobs(),java.lang.Thread+Thread(Runnable) java.lang.Thread+start() java.lang.Thread+start() java.lang.Thread+Thread(Runnable) java.lang.Thread+start() java.lang.Thread+start(),org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobsDueRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobAcquisitionThread,404,12,4,"/** 
 * Starts the acquisition thread 
 */
","/** Starts the acquisition thread */
  protected void startJobAcquisitionThread() {
    if (timerJobAcquisitionThread == null) {
      timerJobAcquisitionThread = new Thread(timerJobRunnable);
    }
    timerJobAcquisitionThread.start();
    
    if (asyncJobAcquisitionThread == null) {
      asyncJobAcquisitionThread = new Thread(asyncJobsDueRunnable);
    }
    asyncJobAcquisitionThread.start();
  }",True,True,This method starts two separate threads for job acquisition: one for timer jobs and one for async jobs.,True,"The method ""startJobAcquisitionThread"" starts two separate threads, one for timer job acquisition and another for asynchronous job acquisition. These threads are created if they don't already exist and then started."
38,stopJobAcquisitionThread(),stop job acquisition thread stops the acquisition thread ,Method,stopExecutingAsyncJobs(),org.activiti.spring.SpringAsyncExecutor+stopExecutingAsyncJobs(),java.lang.Thread+join() java.lang.Thread+join() java.lang.Thread+join() java.lang.Thread+join(),org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+log org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobAcquisitionThread org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobAcquisitionThread,558,17,4,"/** 
 * Stops the acquisition thread 
 */
","/** Stops the acquisition thread */
  protected void stopJobAcquisitionThread() {
    try {
      timerJobAcquisitionThread.join();
    } catch (InterruptedException e) {
      log.warn(""Interrupted while waiting for the timer job acquisition thread to terminate"", e);
    }
    
    try {
      asyncJobAcquisitionThread.join();
    } catch (InterruptedException e) {
      log.warn(""Interrupted while waiting for the async job acquisition thread to terminate"", e);
    } 
    
    timerJobAcquisitionThread = null;
    asyncJobAcquisitionThread = null;
  }",True,True,This method stops the acquisition threads for timer jobs and async jobs by joining them and setting them to null.,True,"The `stopJobAcquisitionThread()` method is responsible for stopping the acquisition threads for timer jobs and asynchronous jobs. It waits for the threads to terminate and then sets them to null, effectively stopping their execution."
39,getCommandExecutor(),get command executor ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+commandExecutor,77,3,1,,"public CommandExecutor getCommandExecutor() {
    return commandExecutor;
  }",True,True,This method returns the command executor object.,False,"The code defines a method named ""getCommandExecutor"" that returns an object of type ""CommandExecutor"". This method is used to retrieve the command executor object, which can be used to execute commands in the program."
40,setCommandExecutor(CommandExecutor),set command executor command executor ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+commandExecutor org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+commandExecutor,113,3,1,,"public void setCommandExecutor(CommandExecutor commandExecutor) {
    this.commandExecutor = commandExecutor;
  }",True,True,This method sets the command executor for an object.,False,"The code defines a method called ""setCommandExecutor"" that takes a parameter of type ""CommandExecutor"". This method assigns the value of the parameter to the ""commandExecutor"" instance variable of the current object."
41,isAutoActivate(),is auto activate ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isAutoActivate,64,3,1,,"public boolean isAutoActivate() {
    return isAutoActivate;
  }",True,True,This method serves to check whether the auto activation feature is enabled or not. It returns a boolean value indicating the status of the auto activation feature.,False,"The code contains a method named ""isAutoActivate"" which returns a boolean value. It is used to determine whether auto activation is enabled or not."
42,setAutoActivate(boolean),set auto activate is auto activate ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isAutoActivate org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isAutoActivate,99,3,1,,"public void setAutoActivate(boolean isAutoActivate) {
    this.isAutoActivate = isAutoActivate;
  }",True,True,"This method sets the value of the ""isAutoActivate"" variable to the provided boolean value.",False,"The code defines a method named ""setAutoActivate"" that takes a boolean parameter. It sets the value of the ""isAutoActivate"" variable to the provided parameter value. This method is used to control the auto-activation feature of something."
43,isActive(),is active ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+isActive,52,3,1,,"public boolean isActive() {
    return isActive;
  }",True,True,"The function of the method is to check and return the value of the variable ""isActive"" as a boolean.",False,The code contains a method named `isActive()` which returns a boolean value indicating the status of an object. It simply returns the value of a variable named `isActive`.
44,getQueueSize(),get queue size ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+queueSize,53,3,1,,"public int getQueueSize() {
    return queueSize;
  }",False,False,"The function of the method is to return the value of the variable ""queueSize"".",False,"The code contains a method named ""getQueueSize"" which returns an integer value representing the size of a queue. It does not take any parameters and simply returns the value of the ""queueSize"" variable."
45,setQueueSize(int),set queue size queue size ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+queueSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+queueSize,77,3,1,,"public void setQueueSize(int queueSize) {
    this.queueSize = queueSize;
  }",False,False,This method sets the size of a queue.,False,"The code defines a method named ""setQueueSize"" that takes an integer parameter. It sets the value of the ""queueSize"" variable to the provided parameter value."
46,getCorePoolSize(),get core pool size ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+corePoolSize,59,3,1,,"public int getCorePoolSize() {
    return corePoolSize;
  }",False,False,This method returns the value of the core pool size.,False,"The code snippet defines a method named ""getCorePoolSize"" that returns an integer value. This method is likely part of a class or interface and is used to retrieve the current value of the ""corePoolSize"" variable."
47,setCorePoolSize(int),set core pool size core pool size ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+corePoolSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+corePoolSize,89,3,1,,"public void setCorePoolSize(int corePoolSize) {
    this.corePoolSize = corePoolSize;
  }",False,False,This method sets the core pool size for a thread pool.,False,"The code defines a method named ""setCorePoolSize"" that takes an integer parameter. This method is used to set the value of the ""corePoolSize"" variable in the current object to the provided value."
48,getMaxPoolSize(),get max pool size ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxPoolSize,57,3,1,,"public int getMaxPoolSize() {
    return maxPoolSize;
  }",False,False,"This method returns the value of the variable maxPoolSize, which represents the maximum size of a pool.",False,"The code snippet defines a method named `getMaxPoolSize()` that returns an integer value representing the maximum pool size. This method is likely part of a class or interface related to managing a pool of resources, such as database connections or threads."
49,setMaxPoolSize(int),set max pool size max pool size ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxPoolSize org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxPoolSize,85,3,1,,"public void setMaxPoolSize(int maxPoolSize) {
    this.maxPoolSize = maxPoolSize;
  }",False,False,This method sets the maximum pool size for a resource pool.,False,"The code defines a method named ""setMaxPoolSize"" that takes an integer parameter ""maxPoolSize"" and assigns it to the instance variable ""maxPoolSize"" of the current object. This method is used to set the maximum size of a pool."
50,getKeepAliveTime(),get keep alive time ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+keepAliveTime,62,3,1,,"public long getKeepAliveTime() {
    return keepAliveTime;
  }",True,True,"The function of the given method is to retrieve and return the value of the variable ""keepAliveTime"" as a long data type.",False,"The code defines a method named ""getKeepAliveTime"" that returns a long value. This method retrieves the value of the ""keepAliveTime"" variable and returns it."
51,setKeepAliveTime(long),set keep alive time keep alive time ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+keepAliveTime org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+keepAliveTime,94,3,1,,"public void setKeepAliveTime(long keepAliveTime) {
    this.keepAliveTime = keepAliveTime;
  }",True,True,This method sets the value of the keepAliveTime variable.,False,"The code defines a method named ""setKeepAliveTime"" that takes a long value as a parameter. This method sets the value of the ""keepAliveTime"" variable to the provided value."
52,getSecondsToWaitOnShutdown(),get seconds to wait on shutdown ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+secondsToWaitOnShutdown,82,3,1,,"public long getSecondsToWaitOnShutdown() {
    return secondsToWaitOnShutdown;
  }",False,False,"This method returns the value of the variable ""secondsToWaitOnShutdown"" as a long data type.",False,"The code contains a method named ""getSecondsToWaitOnShutdown"" which returns the value of a variable called ""secondsToWaitOnShutdown"". This method is likely used to retrieve the number of seconds to wait before shutting down a system or process."
53,setSecondsToWaitOnShutdown(long),set seconds to wait on shutdown seconds to wait on shutdown ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+secondsToWaitOnShutdown org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+secondsToWaitOnShutdown,134,3,1,,"public void setSecondsToWaitOnShutdown(long secondsToWaitOnShutdown) {
    this.secondsToWaitOnShutdown = secondsToWaitOnShutdown;
  }",False,False,"This method sets the value of the variable ""secondsToWaitOnShutdown"" to the provided input value.",False,"The code defines a method named ""setSecondsToWaitOnShutdown"" that takes a long value as a parameter. This method is used to set the value of the ""secondsToWaitOnShutdown"" variable in the current object."
54,getThreadPoolQueue(),get thread pool queue ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+threadPoolQueue,85,3,1,,"public BlockingQueue<Runnable> getThreadPoolQueue() {
    return threadPoolQueue;
  }",False,False,This method returns the BlockingQueue of Runnable objects used by the thread pool.,False,"The code defines a method named ""getThreadPoolQueue"" that returns a BlockingQueue of Runnable objects. This method is used to retrieve the queue associated with a thread pool, which can be used to manage and execute tasks in a concurrent manner."
55,setThreadPoolQueue(BlockingQueue<Runnable>),set thread pool queue thread pool queue ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+threadPoolQueue org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+threadPoolQueue,121,3,1,,"public void setThreadPoolQueue(BlockingQueue<Runnable> threadPoolQueue) {
    this.threadPoolQueue = threadPoolQueue;
  }",False,False,This method sets the thread pool queue for a given object.,False,"The code defines a method named ""setThreadPoolQueue"" that takes a parameter of type BlockingQueue<Runnable>. This method is used to set the value of the ""threadPoolQueue"" variable in the current object to the provided value."
56,getExecutorService(),get executor service ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService,77,3,1,,"public ExecutorService getExecutorService() {
    return executorService;
  }",False,False,This method returns the ExecutorService object.,False,"The code defines a method named ""getExecutorService"" that returns an ExecutorService object. This method is used to retrieve the ExecutorService instance associated with the code."
57,setExecutorService(ExecutorService),set executor service executor service ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executorService,113,3,1,,"public void setExecutorService(ExecutorService executorService) {
    this.executorService = executorService;
  }",False,False,This method sets the ExecutorService for the current object.,False,"The code defines a method named ""setExecutorService"" that takes an ExecutorService object as a parameter. This method assigns the passed executorService object to the instance variable ""executorService"" of the current object."
58,getLockOwner(),get lock owner ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+lockOwner,56,3,1,,"public String getLockOwner() {
    return lockOwner;
  }",True,True,This method returns the value of the lock owner as a string.,False,"The code contains a method named ""getLockOwner"" which returns a string value. It is used to retrieve the current lock owner."
59,setLockOwner(String),set lock owner lock owner ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+lockOwner org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+lockOwner,80,3,1,,"public void setLockOwner(String lockOwner) {
    this.lockOwner = lockOwner;
  }",True,True,This method sets the lock owner for a certain object.,False,"The code defines a method named ""setLockOwner"" that takes a string parameter. It sets the value of the ""lockOwner"" variable to the provided string value."
60,getTimerLockTimeInMillis(),get timer lock time in millis ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerLockTimeInMillis,77,3,1,,"public int getTimerLockTimeInMillis() {
    return timerLockTimeInMillis;
  }",True,True,"This method returns the value of the variable ""timerLockTimeInMillis"" as an integer.",False,"This code defines a method named ""getTimerLockTimeInMillis"" which returns an integer value representing the timer lock time in milliseconds. It does not take any parameters and simply returns the value of the variable ""timerLockTimeInMillis""."
61,setTimerLockTimeInMillis(int),set timer lock time in millis timer lock time in millis ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerLockTimeInMillis org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerLockTimeInMillis,125,3,1,,"public void setTimerLockTimeInMillis(int timerLockTimeInMillis) {
    this.timerLockTimeInMillis = timerLockTimeInMillis;
  }",True,True,This method sets the value of the timer lock time in milliseconds.,False,"The code defines a method named ""setTimerLockTimeInMillis"" which takes an integer parameter and sets the value of the ""timerLockTimeInMillis"" variable to the provided value. This method is likely used to configure the lock time for a timer in milliseconds."
62,getAsyncJobLockTimeInMillis(),get async job lock time in millis ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobLockTimeInMillis,83,3,1,,"public int getAsyncJobLockTimeInMillis() {
    return asyncJobLockTimeInMillis;
  }",True,True,"This method returns the value of the variable ""asyncJobLockTimeInMillis"" as an integer.",False,"The code defines a method named ""getAsyncJobLockTimeInMillis"" which returns an integer value representing the time duration in milliseconds for an asynchronous job lock. This method is responsible for retrieving the value of the ""asyncJobLockTimeInMillis"" variable."
63,setAsyncJobLockTimeInMillis(int),set async job lock time in millis async job lock time in millis ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobLockTimeInMillis org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobLockTimeInMillis,137,3,1,,"public void setAsyncJobLockTimeInMillis(int asyncJobLockTimeInMillis) {
    this.asyncJobLockTimeInMillis = asyncJobLockTimeInMillis;
  }",True,True,"This method sets the value of the variable ""asyncJobLockTimeInMillis"" to the provided input value.",False,"This code defines a method named ""setAsyncJobLockTimeInMillis"" that sets the value of a variable named ""asyncJobLockTimeInMillis"" to the provided input. It is likely used to configure the lock time for asynchronous jobs in milliseconds."
64,getMaxTimerJobsPerAcquisition(),get max timer jobs per acquisition ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxTimerJobsPerAcquisition,87,3,1,,"public int getMaxTimerJobsPerAcquisition() {
    return maxTimerJobsPerAcquisition;
  }",True,True,"This method returns the value of the variable ""maxTimerJobsPerAcquisition"", which represents the maximum number of timer jobs that can be acquired.",False,The code defines a method named `getMaxTimerJobsPerAcquisition` which returns an integer value. This method is responsible for retrieving the maximum number of timer jobs that can be acquired per acquisition.
65,setMaxTimerJobsPerAcquisition(int),set max timer jobs per acquisition max timer jobs per acquisition ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxTimerJobsPerAcquisition org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxTimerJobsPerAcquisition,145,3,1,,"public void setMaxTimerJobsPerAcquisition(int maxTimerJobsPerAcquisition) {
    this.maxTimerJobsPerAcquisition = maxTimerJobsPerAcquisition;
  }",True,True,This method sets the maximum number of timer jobs that can be acquired per acquisition.,False,"The given code defines a method named ""setMaxTimerJobsPerAcquisition"" which takes an integer parameter and sets the value of the ""maxTimerJobsPerAcquisition"" variable to the provided value. This method is likely a part of a larger class or program that manages timer jobs and allows for customization of the maximum number of timer jobs to be acquired per acquisition."
66,getMaxAsyncJobsDuePerAcquisition(),get max async jobs due per acquisition ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxAsyncJobsDuePerAcquisition,93,3,1,,"public int getMaxAsyncJobsDuePerAcquisition() {
    return maxAsyncJobsDuePerAcquisition;
  }",True,True,"This method returns the value of the variable ""maxAsyncJobsDuePerAcquisition"", which represents the maximum number of asynchronous jobs due per acquisition.",False,The code defines a method named `getMaxAsyncJobsDuePerAcquisition` that returns an integer value. This method retrieves the maximum number of asynchronous jobs that can be acquired per acquisition.
67,setMaxAsyncJobsDuePerAcquisition(int),set max async jobs due per acquisition max async jobs due per acquisition ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxAsyncJobsDuePerAcquisition org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+maxAsyncJobsDuePerAcquisition,157,3,1,,"public void setMaxAsyncJobsDuePerAcquisition(int maxAsyncJobsDuePerAcquisition) {
    this.maxAsyncJobsDuePerAcquisition = maxAsyncJobsDuePerAcquisition;
  }",True,True,This method sets the maximum number of asynchronous jobs due per acquisition.,False,"This code defines a method named ""setMaxAsyncJobsDuePerAcquisition"" that takes an integer parameter and sets the value of the ""maxAsyncJobsDuePerAcquisition"" variable to the provided value. It is used to configure the maximum number of asynchronous jobs that can be acquired per acquisition cycle."
68,getDefaultTimerJobAcquireWaitTimeInMillis(),get default timer job acquire wait time in millis ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultTimerJobAcquireWaitTimeInMillis,111,3,1,,"public int getDefaultTimerJobAcquireWaitTimeInMillis() {
    return defaultTimerJobAcquireWaitTimeInMillis;
  }",True,True,This method returns the value of the default timer job acquire wait time in milliseconds.,False,This code defines a method named `getDefaultTimerJobAcquireWaitTimeInMillis()` that returns the value of a variable `defaultTimerJobAcquireWaitTimeInMillis`. The method is responsible for retrieving the default wait time in milliseconds for acquiring a timer job.
69,setDefaultTimerJobAcquireWaitTimeInMillis(int),set default timer job acquire wait time in millis default timer job acquire wait time in millis ,Method,,"org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor() org.activiti.engine.test.jobexecutor.AsyncExecutorTest+createProcessEngine(boolean,Date)",,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultTimerJobAcquireWaitTimeInMillis org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultTimerJobAcquireWaitTimeInMillis,193,3,1,,"public void setDefaultTimerJobAcquireWaitTimeInMillis(int defaultTimerJobAcquireWaitTimeInMillis) {
    this.defaultTimerJobAcquireWaitTimeInMillis = defaultTimerJobAcquireWaitTimeInMillis;
  }",True,True,This method sets the value of the default timer job acquire wait time in milliseconds.,False,"This code defines a method called ""setDefaultTimerJobAcquireWaitTimeInMillis"" that sets the value of a variable called ""defaultTimerJobAcquireWaitTimeInMillis"" to the provided input. It is likely used to configure the wait time for acquiring timer jobs in milliseconds."
70,getDefaultAsyncJobAcquireWaitTimeInMillis(),get default async job acquire wait time in millis ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultAsyncJobAcquireWaitTimeInMillis,111,3,1,,"public int getDefaultAsyncJobAcquireWaitTimeInMillis() {
    return defaultAsyncJobAcquireWaitTimeInMillis;
  }",True,True,"This method returns the value of the variable ""defaultAsyncJobAcquireWaitTimeInMillis"", which represents the default wait time in milliseconds for acquiring an asynchronous job.",False,This code defines a method named `getDefaultAsyncJobAcquireWaitTimeInMillis()` that returns an integer value. The method retrieves and returns the value of a variable named `defaultAsyncJobAcquireWaitTimeInMillis`.
71,setDefaultAsyncJobAcquireWaitTimeInMillis(int),set default async job acquire wait time in millis default async job acquire wait time in millis ,Method,,"org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor() org.activiti.engine.test.jobexecutor.AsyncExecutorTest+createProcessEngine(boolean,Date)",,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultAsyncJobAcquireWaitTimeInMillis org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultAsyncJobAcquireWaitTimeInMillis,193,3,1,,"public void setDefaultAsyncJobAcquireWaitTimeInMillis(int defaultAsyncJobAcquireWaitTimeInMillis) {
    this.defaultAsyncJobAcquireWaitTimeInMillis = defaultAsyncJobAcquireWaitTimeInMillis;
  }",True,True,This method sets the default wait time in milliseconds for acquiring an asynchronous job.,False,"This code defines a method named ""setDefaultAsyncJobAcquireWaitTimeInMillis"" that sets the value of a variable called ""defaultAsyncJobAcquireWaitTimeInMillis"". The method takes an integer parameter and assigns its value to the variable."
72,getDefaultQueueSizeFullWaitTimeInMillis(),get default queue size full wait time in millis ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultQueueSizeFullWaitTime,99,3,1,,"public int getDefaultQueueSizeFullWaitTimeInMillis() {
    return defaultQueueSizeFullWaitTime;
  }",True,True,"This method returns the value of the variable ""defaultQueueSizeFullWaitTime"" as an integer.",False,"The code defines a method named `getDefaultQueueSizeFullWaitTimeInMillis()` that returns an integer value. The method retrieves and returns the value of a variable named `defaultQueueSizeFullWaitTime`, which represents the wait time in milliseconds for a full queue."
73,setDefaultQueueSizeFullWaitTimeInMillis(int),set default queue size full wait time in millis default queue size full wait time ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultQueueSizeFullWaitTime org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+defaultQueueSizeFullWaitTime,161,3,1,,"public void setDefaultQueueSizeFullWaitTimeInMillis(int defaultQueueSizeFullWaitTime) {
    this.defaultQueueSizeFullWaitTime = defaultQueueSizeFullWaitTime;
  }",True,True,This method sets the value of the defaultQueueSizeFullWaitTime variable to the provided value.,False,"The code defines a method named ""setDefaultQueueSizeFullWaitTimeInMillis"" which takes an integer parameter. This method sets the value of a variable named ""defaultQueueSizeFullWaitTime"" to the provided parameter value."
74,setTimerJobRunnable(AcquireTimerJobsRunnable),set timer job runnable timer job runnable ,Method,,"org.activiti.engine.impl.asyncexecutor.multitenant.ExecutorPerTenantAsyncExecutor+addTenantAsyncExecutor(String,boolean)",,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+timerJobRunnable,126,3,1,,"public void setTimerJobRunnable(AcquireTimerJobsRunnable timerJobRunnable) {
    this.timerJobRunnable = timerJobRunnable;
  }",True,True,This method sets the value of the timerJobRunnable variable to the provided AcquireTimerJobsRunnable object.,False,
75,setAsyncJobsDueRunnable(AcquireAsyncJobsDueRunnable),set async jobs due runnable async jobs due runnable ,Method,,"org.activiti.engine.impl.asyncexecutor.multitenant.ExecutorPerTenantAsyncExecutor+addTenantAsyncExecutor(String,boolean)",,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobsDueRunnable org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+asyncJobsDueRunnable,145,3,1,,"public void setAsyncJobsDueRunnable(AcquireAsyncJobsDueRunnable asyncJobsDueRunnable) {
    this.asyncJobsDueRunnable = asyncJobsDueRunnable;
  }",True,True,This method sets the value of the asyncJobsDueRunnable variable to the provided AcquireAsyncJobsDueRunnable object.,False,"The code defines a method named ""setAsyncJobsDueRunnable"" that takes an instance of the ""AcquireAsyncJobsDueRunnable"" class as a parameter. This method assigns the passed object to the ""asyncJobsDueRunnable"" variable of the current object."
76,getRetryWaitTimeInMillis(),get retry wait time in millis ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+retryWaitTimeInMillis,77,3,1,,"public int getRetryWaitTimeInMillis() {
    return retryWaitTimeInMillis;
  }",True,True,This method returns the value of the retryWaitTimeInMillis variable.,False,"The code defines a method named ""getRetryWaitTimeInMillis"" which returns an integer value representing the retry wait time in milliseconds. This method does not take any parameters and simply returns the value of the ""retryWaitTimeInMillis"" variable."
77,setRetryWaitTimeInMillis(int),set retry wait time in millis retry wait time in millis ,Method,,org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl+initAsyncExecutor(),,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+retryWaitTimeInMillis org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+retryWaitTimeInMillis,125,3,1,,"public void setRetryWaitTimeInMillis(int retryWaitTimeInMillis) {
    this.retryWaitTimeInMillis = retryWaitTimeInMillis;
  }",True,True,This method sets the value of the retry wait time in milliseconds.,False,"The code defines a method named ""setRetryWaitTimeInMillis"" which takes an integer parameter. This method is used to set the value of the ""retryWaitTimeInMillis"" variable in the current object to the provided parameter value."
78,getExecuteAsyncRunnableFactory(),get execute async runnable factory ,Method,,,,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncRunnableFactory,113,3,1,,"public ExecuteAsyncRunnableFactory getExecuteAsyncRunnableFactory() {
    return executeAsyncRunnableFactory;
  }",True,True,This method returns the executeAsyncRunnableFactory object.,False,"The code defines a method named ""getExecuteAsyncRunnableFactory"" which returns an object of type ""ExecuteAsyncRunnableFactory"". This method is used to retrieve the executeAsyncRunnableFactory object from the class it belongs to."
79,setExecuteAsyncRunnableFactory(ExecuteAsyncRunnableFactory),set execute async runnable factory execute async runnable factory ,Method,,"org.activiti.engine.impl.asyncexecutor.multitenant.ExecutorPerTenantAsyncExecutor+addTenantAsyncExecutor(String,boolean) org.activiti.engine.impl.asyncexecutor.multitenant.SharedExecutorServiceAsyncExecutor+SharedExecutorServiceAsyncExecutor(TenantInfoHolder)",,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncRunnableFactory org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor+executeAsyncRunnableFactory,173,3,1,,"public void setExecuteAsyncRunnableFactory(ExecuteAsyncRunnableFactory executeAsyncRunnableFactory) {
    this.executeAsyncRunnableFactory = executeAsyncRunnableFactory;
  }",True,True,This method sets the executeAsyncRunnableFactory variable to the provided ExecuteAsyncRunnableFactory object.,False,"The code defines a method named ""setExecuteAsyncRunnableFactory"" that takes an argument of type ""ExecuteAsyncRunnableFactory"". This method is used to set the value of the ""executeAsyncRunnableFactory"" variable in the current object."
