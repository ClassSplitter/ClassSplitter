index,name,type,inner invocations,external invocations,calls,visits,length,lines,modifier,annotation,full text,removed
1,logger,Field,,,,,86,2,26,,"private static final Logger logger = Logger
        .getLogger(FirstWizardPage.class);",True
2,FIRST_PAGE_IDENTIFIER,Field,,,,,73,1,25,,"public static final String FIRST_PAGE_IDENTIFIER = ""FirstPageIdentifier"";",False
3,USER_NAME_EXAMPLE,Field,,,,,74,1,25,,"public static final String USER_NAME_EXAMPLE = ""Ex: johnsmith@jabber.org"";",True
4,jabberNewAccountDialog,Field,,,,,54,1,2,,private JabberNewAccountDialog jabberNewAccountDialog;,True
5,userIDPassPanel,Field,,,,,88,2,2,,"private JPanel userIDPassPanel
        = new TransparentPanel(new BorderLayout(10, 10));",True
6,labelsPanel,Field,FirstWizardPage(JabberAccountRegistrationWizard) init(),,,,52,1,2,,private JPanel labelsPanel = new TransparentPanel();,True
7,valuesPanel,Field,FirstWizardPage(JabberAccountRegistrationWizard) init(),,,,52,1,2,,private JPanel valuesPanel = new TransparentPanel();,True
8,userIDLabel,Field,,,,,105,2,2,,"private JLabel userIDLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.USERNAME""));",True
9,passLabel,Field,,,,,91,2,2,,"private JLabel passLabel
        = new JLabel(Resources.getString(""service.gui.PASSWORD""));",True
10,emptyPanel,Field,init() init(),,,,51,1,2,,private JPanel emptyPanel = new TransparentPanel();,True
11,userIDExampleLabel,Field,init() init() init(),,,,66,1,2,,private JLabel userIDExampleLabel = new JLabel(USER_NAME_EXAMPLE);,True
12,userIDField,Field,init() loadAccount(ProtocolProviderService) loadAccount(ProtocolProviderService),,,,50,1,2,,private JTextField userIDField = new JTextField();,True
13,passField,Field,loadAccount(ProtocolProviderService),,,,56,1,2,,private JPasswordField passField = new JPasswordField();,True
14,rememberPassBox,Field,init() loadAccount(ProtocolProviderService),,,,119,2,2,,"private JCheckBox rememberPassBox = new SIPCommCheckBox(Resources
        .getString(""service.gui.REMEMBER_PASSWORD""));",True
15,advancedOpPanel,Field,,,,,88,2,2,,"private JPanel advancedOpPanel
        = new TransparentPanel(new BorderLayout(10, 10));",True
16,labelsAdvOpPanel,Field,,,,,93,2,2,,"private JPanel labelsAdvOpPanel
        = new TransparentPanel(new GridLayout(0, 1, 10, 10));",True
17,valuesAdvOpPanel,Field,,,,,93,2,2,,"private JPanel valuesAdvOpPanel
        = new TransparentPanel(new GridLayout(0, 1, 10, 10));",True
18,sendKeepAliveBox,Field,,,,,132,2,2,,"private JCheckBox sendKeepAliveBox = new SIPCommCheckBox(Resources
        .getString(""plugin.jabberaccregwizz.ENABLE_KEEP_ALIVE""));",True
19,gmailNotificationsBox,Field,commitPage(),,,,150,2,2,,"private JCheckBox gmailNotificationsBox = new SIPCommCheckBox(Resources
            .getString(""plugin.jabberaccregwizz.ENABLE_GMAIL_NOTIFICATIONS""));",True
20,resourceLabel,Field,,,,,107,2,2,,"private JLabel resourceLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.RESOURCE""));",True
21,resourceField,Field,,,,,102,2,2,,"private JTextField resourceField
        = new JTextField(JabberAccountRegistration.DEFAULT_RESOURCE);",True
22,priorityLabel,Field,,,,,108,2,2,,"private JLabel priorityLabel = new JLabel(
        Resources.getString(""plugin.jabberaccregwizz.PRIORITY""));",True
23,priorityField,Field,,,,,102,2,2,,"private JTextField priorityField
        = new JTextField(JabberAccountRegistration.DEFAULT_PRIORITY);",True
24,serverLabel,Field,,,,,103,2,2,,"private JLabel serverLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.SERVER""));",True
25,serverField,Field,,,,,50,1,2,,private JTextField serverField = new JTextField();,True
26,portLabel,Field,,,,,99,2,2,,"private JLabel portLabel
        = new JLabel(Resources.getString(""plugin.jabberaccregwizz.PORT""));",True
27,portField,Field,,,,,94,2,2,,"private JTextField portField
        = new JTextField(JabberAccountRegistration.DEFAULT_PORT);",True
28,registerPanel,Field,,,,,74,1,2,,"private JPanel registerPanel = new TransparentPanel(new GridLayout(0, 1));",True
29,buttonPanel,Field,,,,,93,2,2,,"private JPanel buttonPanel
        = new TransparentPanel(new FlowLayout(FlowLayout.CENTER));",True
30,registerArea,Field,,,,,130,2,2,,"private JTextArea registerArea = new JTextArea(Resources
        .getString(""plugin.jabberaccregwizz.REGISTER_NEW_ACCOUNT_TEXT""));",True
31,registerButton,Field,,,,,120,2,2,,"private JButton registerButton = new JButton(Resources
        .getString(""plugin.jabberaccregwizz.NEW_ACCOUNT_TITLE""));",True
32,mainPanel,Field,init(),,,,50,1,2,,private JPanel mainPanel = new TransparentPanel();,True
33,nextPageIdentifier,Field,,,,,71,1,2,,private Object nextPageIdentifier = WizardPage.SUMMARY_PAGE_IDENTIFIER;,False
34,wizard,Field,FirstWizardPage(JabberAccountRegistrationWizard),,,,53,1,18,,private final JabberAccountRegistrationWizard wizard;,False
35,isCommitted,Field,commitPage(),,,,36,1,2,,private boolean isCommitted = false;,False
36,isServerOverridden,Field,loadAccount(ProtocolProviderService),,,,43,1,2,,private boolean isServerOverridden = false;,False
37,FirstWizardPage(JabberAccountRegistrationWizard),Method,,,"java.awt.BorderLayout+BorderLayout() java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.BoxLayout+BoxLayout(Container,int) net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+init() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+init() javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.BoxLayout+BoxLayout(Container,int) java.awt.Container+setLayout(LayoutManager) java.awt.Container+setLayout(LayoutManager) javax.swing.BoxLayout+BoxLayout(Container,int)",net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel javax.swing.BoxLayout+Y_AXIS net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel javax.swing.BoxLayout+Y_AXIS net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel javax.swing.BoxLayout+Y_AXIS,620,23,1,"/** 
 * Creates an instance of <tt>FirstWizardPage</tt>.
 * @param wizard the parent wizard
 */
","/**
     * Creates an instance of <tt>FirstWizardPage</tt>.
     *
     * @param wizard the parent wizard
     */
    public FirstWizardPage(JabberAccountRegistrationWizard wizard)
    {
        super(new BorderLayout());

        this.wizard = wizard;

        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));

        this.init();

        this.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        this.labelsPanel
            .setLayout(new BoxLayout(labelsPanel, BoxLayout.Y_AXIS));

        this.valuesPanel
            .setLayout(new BoxLayout(valuesPanel, BoxLayout.Y_AXIS));
    }",False
38,init(),Method,FirstWizardPage(JabberAccountRegistrationWizard),,"javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.JComponent+setOpaque(boolean) javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) javax.swing.JComponent+setForeground(Color) javax.swing.JComponent+setForeground(Color) javax.swing.JComponent+setFont(Font) javax.swing.JComponent+setFont(Font) java.awt.Font+deriveFont(int) java.awt.Component+getFont() java.awt.Component+getFont() java.awt.Font+deriveFont(int) javax.swing.JComponent+setMaximumSize(Dimension) javax.swing.JComponent+setMaximumSize(Dimension) java.awt.Dimension+Dimension(int,int) javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) javax.swing.BorderFactory+createEmptyBorder(int,int,int,int) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) java.awt.Container+add(Component,Object) javax.swing.JComponent+setBorder(Border) javax.swing.JComponent+setBorder(Border) javax.swing.BorderFactory+createTitledBorder(String) javax.swing.BorderFactory+createTitledBorder(String) net.java.sip.communicator.plugin.jabberaccregwizz.Resources+getString(String) net.java.sip.communicator.plugin.jabberaccregwizz.Resources+getString(String) java.awt.Container+add(Component) java.awt.Container+add(Component) javax.swing.text.Document+addDocumentListener(DocumentListener) javax.swing.text.JTextComponent+getDocument() javax.swing.text.JTextComponent+getDocument() javax.swing.text.Document+addDocumentListener(DocumentListener) +() +changedUpdate(DocumentEvent)",net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel java.awt.Color+GRAY net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+emptyPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDExampleLabel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+labelsPanel java.awt.BorderLayout+WEST net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+valuesPanel java.awt.BorderLayout+CENTER net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox java.awt.BorderLayout+SOUTH net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+mainPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField,4713,139,2,"/** 
 * Initializes all panels, buttons, etc.
 */
","/**
     * Initializes all panels, buttons, etc.
     */
    private void init()
    {
        this.mainPanel.setOpaque(false);
        this.labelsPanel.setOpaque(false);
        this.valuesPanel.setOpaque(false);
        this.emptyPanel.setOpaque(false);

        this.userIDField.getDocument().addDocumentListener(this);
        this.rememberPassBox.setSelected(true);

        this.userIDExampleLabel.setForeground(Color.GRAY);
        this.userIDExampleLabel.setFont(userIDExampleLabel.getFont()
            .deriveFont(8));
        this.emptyPanel.setMaximumSize(new Dimension(40, 35));
        this.userIDExampleLabel.setBorder(BorderFactory.createEmptyBorder(0, 0,
            8, 0));

        labelsPanel.add(userIDLabel);
        labelsPanel.add(emptyPanel);
        labelsPanel.add(passLabel);

        valuesPanel.add(userIDField);
        valuesPanel.add(userIDExampleLabel);
        valuesPanel.add(passField);

        userIDPassPanel.add(labelsPanel, BorderLayout.WEST);
        userIDPassPanel.add(valuesPanel, BorderLayout.CENTER);
        userIDPassPanel.add(rememberPassBox, BorderLayout.SOUTH);

        userIDPassPanel.setBorder(BorderFactory.createTitledBorder(Resources
            .getString(""plugin.jabberaccregwizz.USERNAME_AND_PASSWORD"")));

        mainPanel.add(userIDPassPanel);

        portField.getDocument().addDocumentListener(new DocumentListener()
        {
            public void changedUpdate(DocumentEvent evt)
            {
            }

            public void insertUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }

            public void removeUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }
        });

        priorityField.getDocument().addDocumentListener(new DocumentListener()
        {
            public void changedUpdate(DocumentEvent evt)
            {
            }

            public void insertUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }

            public void removeUpdate(DocumentEvent evt)
            {
                setNextButtonAccordingToPortAndPriority();
            }
        });

        labelsAdvOpPanel.add(serverLabel);
        labelsAdvOpPanel.add(portLabel);
        labelsAdvOpPanel.add(resourceLabel);
        labelsAdvOpPanel.add(priorityLabel);

        valuesAdvOpPanel.add(serverField);
        valuesAdvOpPanel.add(portField);
        valuesAdvOpPanel.add(resourceField);
        valuesAdvOpPanel.add(priorityField);

        JPanel checkBoxesPanel
            = new TransparentPanel(new GridLayout(0, 1, 10, 10));
        checkBoxesPanel.add(sendKeepAliveBox);
        checkBoxesPanel.add(gmailNotificationsBox);

        advancedOpPanel.add(checkBoxesPanel, BorderLayout.NORTH);
        advancedOpPanel.add(labelsAdvOpPanel, BorderLayout.WEST);
        advancedOpPanel.add(valuesAdvOpPanel, BorderLayout.CENTER);

        advancedOpPanel.setBorder(BorderFactory.createTitledBorder(Resources
            .getString(""plugin.jabberaccregwizz.ADVANCED_OPTIONS"")));

        mainPanel.add(advancedOpPanel);

        registerButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                if (logger.isDebugEnabled())
                    logger.debug(""Reg OK"");

                // Open the new account dialog.

                jabberNewAccountDialog = new JabberNewAccountDialog();

                if (jabberNewAccountDialog.isOK == true)
                {
                    serverField.setText(jabberNewAccountDialog.server);
                    portField.setText(jabberNewAccountDialog.port);

                    // This userIDField contains the username ""@"" the server.
                    userIDField.setText(jabberNewAccountDialog.userID + ""@""
                        + jabberNewAccountDialog.server);

                    passField.setText(jabberNewAccountDialog.password);
                }
                if (logger.isDebugEnabled())
                    logger.debug(""Reg End"");
            }
        });

        buttonPanel.add(registerButton);

        registerArea.setEditable(false);
        registerArea.setOpaque(false);
        registerArea.setLineWrap(true);
        registerArea.setWrapStyleWord(true);

        registerPanel.add(registerArea);
        registerPanel.add(buttonPanel);

        registerPanel.setBorder(BorderFactory.createTitledBorder(Resources
            .getString(""plugin.jabberaccregwizz.NEW_ACCOUNT_TITLE"")));

        mainPanel.add(registerPanel);

        this.add(mainPanel, BorderLayout.NORTH);
    }",False
39,getIdentifier(),Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getFirstPageIdentifier() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getLastPageIdentifier(),,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+FIRST_PAGE_IDENTIFIER,249,10,1,"/** 
 * Implements the <code>WizardPage.getIdentifier</code> to return this page identifier.
 * @return the id of the first wizard page.
 */
","/**
     * Implements the <code>WizardPage.getIdentifier</code> to return this
     * page identifier.
     *
     * @return the id of the first wizard page.
     */
    public Object getIdentifier()
    {
        return FIRST_PAGE_IDENTIFIER;
    }",False
40,getNextPageIdentifier(),Method,,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+nextPageIdentifier,284,10,1,"/** 
 * Implements the <code>WizardPage.getNextPageIdentifier</code> to return the next page identifier - the summary page.
 * @return the id of the next wizard page.
 */
","/**
     * Implements the <code>WizardPage.getNextPageIdentifier</code> to return
     * the next page identifier - the summary page.
     *
     * @return the id of the next wizard page.
     */
    public Object getNextPageIdentifier()
    {
        return nextPageIdentifier;
    }",False
41,getBackPageIdentifier(),Method,,,,,326,11,1,"/** 
 * Implements the <code>WizardPage.getBackPageIdentifier</code> to return the back identifier. In this case it's null because this is the first wizard page.
 * @return the identifier of the previous wizard page
 */
","/**
     * Implements the <code>WizardPage.getBackPageIdentifier</code> to return
     * the back identifier. In this case it's null because this is the first
     * wizard page.
     *
     * @return the identifier of the previous wizard page
     */
    public Object getBackPageIdentifier()
    {
        return null;
    }",False
42,getWizardForm(),Method,,,,,207,10,1,"/** 
 * Implements the <code>WizardPage.getWizardForm</code> to return this panel.
 * @return this wizard page.
 */
","/**
     * Implements the <code>WizardPage.getWizardForm</code> to return this
     * panel.
     *
     * @return this wizard page.
     */
    public Object getWizardForm()
    {
        return this;
    }",False
43,pageShowing(),Method,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource(),,249,8,1,"/** 
 * Before this page is displayed enables or disables the ""Next"" wizard button according to whether the User ID field is empty.
 */
","/**
     * Before this page is displayed enables or disables the ""Next"" wizard
     * button according to whether the User ID field is empty.
     */
    public void pageShowing()
    {
        this.setNextButtonAccordingToUserIDAndResource();
    }",False
44,commitPage(),Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+signin(),net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getRegistration() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getRegistration() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.String+length() java.lang.String+trim() java.lang.String+trim() java.lang.String+length() java.lang.IllegalStateException+IllegalStateException(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setUserID(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setUserID(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPassword(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPassword(String) java.lang.String+String(char[]) javax.swing.JPasswordField+getPassword() javax.swing.JPasswordField+getPassword() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setRememberPassword(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setRememberPassword(boolean) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setServerAddress(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setServerAddress(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setSendKeepAlive(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setSendKeepAlive(boolean) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setGmailNotificationEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setGmailNotificationEnabled(boolean) javax.swing.AbstractButton+isSelected() javax.swing.AbstractButton+isSelected() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setResource(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setResource(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPort(int) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPort(int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPriority(int) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistration+setPriority(int) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText(),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+serverField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+sendKeepAliveBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+gmailNotificationsBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+gmailNotificationsBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+resourceField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+nextPageIdentifier net.java.sip.communicator.service.gui.WizardPage+SUMMARY_PAGE_IDENTIFIER net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isCommitted net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isCommitted,1214,33,1,"/** 
 * Saves the user input when the ""Next"" wizard buttons is clicked.
 */
","/**
     * Saves the user input when the ""Next"" wizard buttons is clicked.
     */
    public void commitPage()
    {
        JabberAccountRegistration registration = wizard.getRegistration();

        String userID = userIDField.getText();

        if(userID == null || userID.trim().length() == 0)
            throw new IllegalStateException(""No user ID provided."");

        registration.setUserID(userID);
        registration.setPassword(new String(passField.getPassword()));
        registration.setRememberPassword(rememberPassBox.isSelected());

        registration.setServerAddress(serverField.getText());
        registration.setSendKeepAlive(sendKeepAliveBox.isSelected());
        registration.setGmailNotificationEnabled(
                        this.gmailNotificationsBox.isSelected());
        registration.setResource(resourceField.getText());

        if (portField.getText() != null)
            registration.setPort(Integer.parseInt(portField.getText()));

        if (priorityField.getText() != null)
            registration.setPriority(
                Integer.parseInt(priorityField.getText()));

        nextPageIdentifier = SUMMARY_PAGE_IDENTIFIER;

        this.isCommitted = true;
    }",False
45,setNextButtonAccordingToUserIDAndResource(),Method,pageShowing() insertUpdate(DocumentEvent) removeUpdate(DocumentEvent),,javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.String+equals(Object) java.lang.String+equals(Object) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.String+equals(Object) java.lang.String+equals(Object) net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+resourceField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard,671,22,2,"/** 
 * Enables or disables the ""Next"" wizard button according to whether the UserID field is empty.
 */
","/**
     * Enables or disables the ""Next"" wizard button according to whether the
     * UserID field is empty.
     */
    private void setNextButtonAccordingToUserIDAndResource()
    {
        boolean nextFinishButtonEnabled = false;

        String userID = userIDField.getText();
        if ((userID != null) && !userID.equals(""""))
        {
            String resource = resourceField.getText();
            if ((resource != null) && !resource.equals(""""))
            {
                nextFinishButtonEnabled = true;
            }
        }

        wizard
            .getWizardContainer()
                .setNextFinishButtonEnabled(nextFinishButtonEnabled);
    }",False
46,insertUpdate(DocumentEvent),Method,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID(),,455,13,1,"/** 
 * Handles the <tt>DocumentEvent</tt> triggered when user types in the UserID field. Enables or disables the ""Next"" wizard button according to whether the UserID field is empty.
 * @param evt the document event that has triggered this method call.
 */
","/**
     * Handles the <tt>DocumentEvent</tt> triggered when user types in the
     * UserID field. Enables or disables the ""Next"" wizard button according to
     * whether the UserID field is empty.
     *
     * @param evt the document event that has triggered this method call.
     */
    public void insertUpdate(DocumentEvent evt)
    {
        this.setNextButtonAccordingToUserIDAndResource();

        this.setServerFieldAccordingToUserID();
    }",True
47,removeUpdate(DocumentEvent),Method,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setNextButtonAccordingToUserIDAndResource() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID() net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+setServerFieldAccordingToUserID(),,469,13,1,"/** 
 * Handles the <tt>DocumentEvent</tt> triggered when user deletes letters from the User ID field. Enables or disables the ""Next"" wizard button according to whether the User ID field is empty.
 * @param evt the document event that has triggered this method call.
 */
","/**
     * Handles the <tt>DocumentEvent</tt> triggered when user deletes letters
     * from the User ID field. Enables or disables the ""Next"" wizard button
     * according to whether the User ID field is empty.
     *
     * @param evt the document event that has triggered this method call.
     */
    public void removeUpdate(DocumentEvent evt)
    {
        this.setNextButtonAccordingToUserIDAndResource();

        this.setServerFieldAccordingToUserID();
    }",True
48,changedUpdate(DocumentEvent),Method,,,,,56,3,1,,"public void changedUpdate(DocumentEvent evt)
    {
    }",True
49,pageHiding(),Method,,,,,36,3,1,,"public void pageHiding()
    {
    }",False
50,pageShown(),Method,,,,,35,3,1,,"public void pageShown()
    {
    }",False
51,pageBack(),Method,,,,,34,3,1,,"public void pageBack()
    {
    }",False
52,loadAccount(ProtocolProviderService),Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+loadAccount(ProtocolProviderService),"net.java.sip.communicator.service.protocol.ProtocolProviderService+getAccountID() net.java.sip.communicator.service.protocol.ProtocolProviderService+getAccountID() net.java.sip.communicator.service.protocol.AccountID+getAccountProperties() net.java.sip.communicator.service.protocol.AccountID+getAccountProperties() java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.JComponent+setEnabled(boolean) javax.swing.JComponent+setEnabled(boolean) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.service.protocol.AccountID+getUserID() net.java.sip.communicator.service.protocol.AccountID+getUserID() javax.swing.JPasswordField+setText(String) javax.swing.JPasswordField+setText(String) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.lang.Boolean+parseBoolean(String) java.lang.Boolean+parseBoolean(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) java.lang.Boolean+parseBoolean(String) java.lang.Boolean+parseBoolean(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.AbstractButton+setSelected(boolean) javax.swing.AbstractButton+setSelected(boolean) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) java.util.Map+get(Object) java.util.Map+get(Object) javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.service.protocol.AccountID+getAccountPropertyBoolean(Object,boolean) net.java.sip.communicator.service.protocol.AccountID+getAccountPropertyBoolean(Object,boolean)",net.java.sip.communicator.service.protocol.ProtocolProviderFactory+PASSWORD net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+passField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+rememberPassBox net.java.sip.communicator.service.protocol.ProtocolProviderFactory+SERVER_ADDRESS net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+serverField net.java.sip.communicator.service.protocol.ProtocolProviderFactory+SERVER_PORT net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+sendKeepAliveBox net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+gmailNotificationsBox net.java.sip.communicator.service.protocol.ProtocolProviderFactory+RESOURCE net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+resourceField net.java.sip.communicator.service.protocol.ProtocolProviderFactory+RESOURCE_PRIORITY net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isServerOverridden net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isServerOverridden net.java.sip.communicator.service.protocol.ProtocolProviderFactory+IS_SERVER_OVERRIDDEN,1967,61,1,"/** 
 * Fills the User ID and Password fields in this panel with the data coming from the given protocolProvider.
 * @param protocolProvider The <tt>ProtocolProviderService</tt> to loadthe data from.
 */
","/**
     * Fills the User ID and Password fields in this panel with the data coming
     * from the given protocolProvider.
     *
     * @param protocolProvider The <tt>ProtocolProviderService</tt> to load
     *            the data from.
     */
    public void loadAccount(ProtocolProviderService protocolProvider)
    {
        AccountID accountID = protocolProvider.getAccountID();
        Map<String, String> accountProperties
            = accountID.getAccountProperties();

        String password
            = accountProperties.get(ProtocolProviderFactory.PASSWORD);

        this.userIDField.setEnabled(false);
        this.userIDField.setText(accountID.getUserID());

        if (password != null)
        {
            this.passField.setText(password);
            this.rememberPassBox.setSelected(true);
        }

        String serverAddress
            = accountProperties.get(ProtocolProviderFactory.SERVER_ADDRESS);

        serverField.setText(serverAddress);

        String serverPort
            = accountProperties.get(ProtocolProviderFactory.SERVER_PORT);

        portField.setText(serverPort);

        boolean keepAlive
            = Boolean.parseBoolean(accountProperties.get(""SEND_KEEP_ALIVE""));

        sendKeepAliveBox.setSelected(keepAlive);

        boolean gmailNotificationEnabled
            = Boolean.parseBoolean(
                    accountProperties.get(""GMAIL_NOTIFICATIONS_ENABLED""));

        gmailNotificationsBox.setSelected(gmailNotificationEnabled);

        String resource
            = accountProperties.get(ProtocolProviderFactory.RESOURCE);

        resourceField.setText(resource);

        String priority
            = accountProperties.get(ProtocolProviderFactory.RESOURCE_PRIORITY);

        priorityField.setText(priority);

        this.isServerOverridden
            = accountID.getAccountPropertyBoolean(
                    ProtocolProviderFactory.IS_SERVER_OVERRIDDEN,
                    false);
    }",False
53,setServerFieldAccordingToUserID(),Method,insertUpdate(DocumentEvent) removeUpdate(DocumentEvent),,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+isModification() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+isModification() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+setText(String) javax.swing.text.JTextComponent+setText(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getServerFromUserName(String) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getServerFromUserName(String),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isServerOverridden net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+serverField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard,414,13,2,"/** 
 * Parse the server part from the jabber id and set it to server as default value. If Advanced option is enabled Do nothing.
 */
","/**
     * Parse the server part from the jabber id and set it to server as default
     * value. If Advanced option is enabled Do nothing.
     */
    private void setServerFieldAccordingToUserID()
    {
        if (!wizard.isModification() || !isServerOverridden)
        {
            String userId = userIDField.getText();

            serverField.setText(wizard.getServerFromUserName(userId));
        }
    }",False
54,setNextButtonAccordingToPortAndPriority(),Method,,,java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String) javax.swing.text.JTextComponent+getText() javax.swing.text.JTextComponent+getText() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean) net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getWizardContainer() net.java.sip.communicator.service.gui.WizardContainer+setNextFinishButtonEnabled(boolean),net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+portField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+priorityField net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+wizard,491,16,2,"/** 
 * Disables Next Button if Port field value is incorrect
 */
","/**
     * Disables Next Button if Port field value is incorrect
     */
    private void setNextButtonAccordingToPortAndPriority()
    {
        try
        {
            Integer.parseInt(portField.getText());
            Integer.parseInt(priorityField.getText());
            wizard.getWizardContainer().setNextFinishButtonEnabled(true);
        }
        catch (NumberFormatException ex)
        {
            wizard.getWizardContainer().setNextFinishButtonEnabled(false);
        }
    }",True
55,getSimpleForm(),Method,,net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard+getSimpleForm(),,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+userIDPassPanel,73,4,1,,"public Object getSimpleForm()
    {
        return userIDPassPanel;
    }",False
56,isCommitted(),Method,,,,net.java.sip.communicator.plugin.jabberaccregwizz.FirstWizardPage+isCommitted,68,4,1,,"public boolean isCommitted()
    {
        return isCommitted;
    }",False
