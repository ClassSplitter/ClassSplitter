index,name,type,inner invocations,external invocations,calls,visits,length,lines,start location,definition line,modifier,commit,full text,moved,removed
1,EMPTY,Field,"""","""","""","""",70,1,4184,97,25,,public static final ParserRuleContext EMPTY = new ParserRuleContext();,False,False
2,parent,Field,"RuleContext(RuleContext,int)""","org.antlr.v4.runtime.ParserRuleContext+copyFrom(ParserRuleContext)""","""","""",66,2,4257,100,1,"/** 
 * What context invoked this rule? 
 */
","/** What context invoked this rule? */
	public RuleContext parent;",False,False
3,invokingState,Field,"RuleContext(RuleContext,int)""","org.antlr.v4.runtime.ParserRuleContext+copyFrom(ParserRuleContext)""","""","""",254,6,4326,107,1,"/** 
 * What state invoked the rule associated with this context? The ""return address"" is the followState of invokingState If parent is null, this should be -1 this context object represents the start rule.
 */
","/** What state invoked the rule associated with this context?
	 *  The ""return address"" is the followState of invokingState
	 *  If parent is null, this should be -1 this context object represents
	 *  the start rule.
	 */
	public int invokingState = -1;",False,False
4,RuleContext(),Method,"""","""","""","""",23,1,4583,109,1,,public RuleContext() {},False,False
5,"RuleContext(RuleContext,int)",Method,"""","""","""","org.antlr.v4.runtime.RuleContext+parent org.antlr.v4.runtime.RuleContext+parent org.antlr.v4.runtime.RuleContext+invokingState org.antlr.v4.runtime.RuleContext+invokingState""",207,5,4609,111,1,,"public RuleContext(RuleContext parent, int invokingState) {
		this.parent = parent;
		//if ( parent!=null ) System.out.println(""invoke ""+stateNumber+"" from ""+parent);
		this.invokingState = invokingState;
	}",False,False
6,depth(),Method,"""","""","""","org.antlr.v4.runtime.RuleContext+parent""",123,9,4819,117,1,,"public int depth() {
		int n = 0;
		RuleContext p = this;
		while ( p!=null ) {
			p = p.parent;
			n++;
		}
		return n;
	}",False,False
7,isEmpty(),Method,"toString(List<String>,RuleContext) toString(List<String>,RuleContext)""","org.antlr.v4.runtime.ParserInterpreter+parse(int)""","""","org.antlr.v4.runtime.RuleContext+invokingState""",163,6,4945,127,1,"/** 
 * A context is empty if there is no invoking state; meaning nobody called current context.
 */
","/** A context is empty if there is no invoking state; meaning nobody called
	 *  current context.
	 */
	public boolean isEmpty() {
		return invokingState == -1;
	}",False,False
8,getSourceInterval(),Method,"""","org.antlr.v4.runtime.BufferedTokenStream+getText(RuleContext) org.antlr.v4.runtime.UnbufferedTokenStream+getText(RuleContext)""","""","org.antlr.v4.runtime.misc.Interval+INVALID""",78,4,5161,137,1,,"@Override
	public Interval getSourceInterval() {
		return Interval.INVALID;
	}",False,False
9,getRuleContext(),Method,"""","org.antlr.v4.runtime.tree.pattern.ParseTreePatternMatcher+matchImpl(ParseTree,ParseTree,MultiMap<String,ParseTree>) org.antlr.v4.runtime.tree.pattern.ParseTreePatternMatcher+matchImpl(ParseTree,ParseTree,MultiMap<String,ParseTree>)""","""","""",63,2,5242,142,1,,"@Override
	public RuleContext getRuleContext() { return this; }",False,False
10,getParent(),Method,"""","""","""","org.antlr.v4.runtime.RuleContext+parent""",60,2,5308,145,1,,"@Override
	public RuleContext getParent() { return parent; }",False,False
11,getPayload(),Method,"""","""","""","""",59,2,5371,148,1,,"@Override
	public RuleContext getPayload() { return this; }",False,False
12,getText(),Method,"""","""","org.antlr.v4.runtime.RuleContext+getChildCount() org.antlr.v4.runtime.RuleContext+getChildCount() java.lang.StringBuilder+StringBuilder() org.antlr.v4.runtime.RuleContext+getChildCount() org.antlr.v4.runtime.RuleContext+getChildCount() java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) org.antlr.v4.runtime.tree.ParseTree+getText() org.antlr.v4.runtime.RuleContext+getChild(int) org.antlr.v4.runtime.RuleContext+getChild(int) org.antlr.v4.runtime.tree.ParseTree+getText() java.lang.StringBuilder+toString() java.lang.StringBuilder+toString()""","""",563,20,5433,158,1,"/** 
 * Return the combined text of all child nodes. This method only considers tokens which have been added to the parse tree. <p> Since tokens on hidden channels (e.g. whitespace or comments) are not added to the parse trees, they will not appear in the output of this method.
 */
","/** Return the combined text of all child nodes. This method only considers
	 *  tokens which have been added to the parse tree.
	 *  <p>
	 *  Since tokens on hidden channels (e.g. whitespace or comments) are not
	 *  added to the parse trees, they will not appear in the output of this
	 *  method.
	 */
	@Override
	public String getText() {
		if (getChildCount() == 0) {
			return """";
		}

		StringBuilder builder = new StringBuilder();
		for (int i = 0; i < getChildCount(); i++) {
			builder.append(getChild(i).getText());
		}

		return builder.toString();
	}",False,False
13,getRuleIndex(),Method,"toString(List<String>,RuleContext)""","org.antlr.v4.runtime.DefaultErrorStrategy+reportFailedPredicate(Parser,FailedPredicateException) org.antlr.v4.runtime.Parser+TraceListener.enterEveryRule(ParserRuleContext) org.antlr.v4.runtime.Parser+TraceListener.visitTerminal(TerminalNode) org.antlr.v4.runtime.Parser+TraceListener.exitEveryRule(ParserRuleContext) org.antlr.v4.runtime.Parser+getInvokingContext(int) org.antlr.v4.runtime.Parser+getRuleInvocationStack(RuleContext) org.antlr.v4.runtime.ParserInterpreter+visitState(ATNState) org.antlr.v4.runtime.ParserInterpreter+visitState(ATNState) org.antlr.v4.runtime.tree.pattern.ParseTreePatternMatcher+matchImpl(ParseTree,ParseTree,MultiMap<String,ParseTree>) org.antlr.v4.runtime.tree.pattern.ParseTreePatternMatcher+matchImpl(ParseTree,ParseTree,MultiMap<String,ParseTree>) org.antlr.v4.runtime.tree.Trees+getNodeText(Tree,List<String>) org.antlr.v4.runtime.tree.Trees+_findAllNodes(ParseTree,int,boolean,List<? super ParseTree>) org.antlr.v4.runtime.tree.xpath.XPathRuleElement+evaluate(ParseTree) org.antlr.v4.runtime.tree.xpath.XPathRuleElement+evaluate(ParseTree) org.antlr.v4.test.tool.TestPerformance+ChecksumParseTreeListener.enterEveryRule(ParserRuleContext) org.antlr.v4.test.tool.TestPerformance+ChecksumParseTreeListener.exitEveryRule(ParserRuleContext) org.antlr.v4.test.tool.TestXPath+getNodeStrings(String,String,String,String,String)""","""","""",40,1,5999,171,1,,public int getRuleIndex() { return -1; },False,False
14,getChild(int),Method,"getText()""","""","""","""",63,4,6042,174,1,,"@Override
	public ParseTree getChild(int i) {
		return null;
	}",False,False
15,getChildCount(),Method,"getText() getText()""","""","""","""",54,4,6108,179,1,,"@Override
	public int getChildCount() {
		return 0;
	}",False,False
16,accept(ParseTreeVisitor<? extends T>),Method,"""","""","org.antlr.v4.runtime.tree.ParseTreeVisitor+visitChildren(RuleNode) org.antlr.v4.runtime.tree.ParseTreeVisitor+visitChildren(RuleNode)""","""",109,2,6165,184,1,,"@Override
	public <T> T accept(ParseTreeVisitor<? extends T> visitor) { return visitor.visitChildren(this); }",False,False
17,inspect(Parser),Method,"""","org.antlr.v4.runtime.misc.TestRig+process(Lexer,Class<? extends Parser>,Parser,InputStream,Reader)""","java.util.Arrays+asList(T[]) java.util.Arrays+asList(T[]) org.antlr.v4.runtime.Recognizer+getRuleNames() org.antlr.v4.runtime.Recognizer+getRuleNames() org.antlr.v4.runtime.RuleContext+inspect(List<String>) org.antlr.v4.runtime.RuleContext+inspect(List<String>)""","""",240,5,6277,187,1,"/** 
 * Call this method to view a parse tree in a dialog box visually. 
 */
","/** Call this method to view a parse tree in a dialog box visually. */
	public Future<JDialog> inspect(Parser parser) {
		List<String> ruleNames = parser != null ? Arrays.asList(parser.getRuleNames()) : null;
		return inspect(ruleNames);
	}",True,True
18,inspect(List<String>),Method,"inspect(Parser)""","""","org.antlr.v4.runtime.tree.gui.TreeViewer+TreeViewer(List<String>,Tree) org.antlr.v4.runtime.tree.gui.TreeViewer+open() org.antlr.v4.runtime.tree.gui.TreeViewer+open()""","""",138,4,6520,192,1,,"public Future<JDialog> inspect(List<String> ruleNames) {
		TreeViewer viewer = new TreeViewer(ruleNames, this);
		return viewer.open();
	}",True,True
19,"save(Parser,String)",Method,"""","org.antlr.v4.runtime.misc.TestRig+process(Lexer,Class<? extends Parser>,Parser,InputStream,Reader)""","java.util.Arrays+asList(T[]) java.util.Arrays+asList(T[]) org.antlr.v4.runtime.Recognizer+getRuleNames() org.antlr.v4.runtime.Recognizer+getRuleNames() org.antlr.v4.runtime.RuleContext+save(List<String>,String) org.antlr.v4.runtime.RuleContext+save(List<String>,String)""","""",253,7,6661,198,1,"/** 
 * Save this tree in a postscript file 
 */
","/** Save this tree in a postscript file */
	public void save(Parser parser, String fileName)
		throws IOException, PrintException
	{
		List<String> ruleNames = parser != null ? Arrays.asList(parser.getRuleNames()) : null;
		save(ruleNames, fileName);
	}",True,True
20,"save(Parser,String,String,int)",Method,"""","""","java.util.Arrays+asList(T[]) java.util.Arrays+asList(T[]) org.antlr.v4.runtime.Recognizer+getRuleNames() org.antlr.v4.runtime.Recognizer+getRuleNames() org.antlr.v4.runtime.RuleContext+save(List<String>,String,String,int) org.antlr.v4.runtime.RuleContext+save(List<String>,String,String,int)""","""",332,8,6917,206,1,"/** 
 * Save this tree in a postscript file using a particular font name and size 
 */
","/** Save this tree in a postscript file using a particular font name and size */
	public void save(Parser parser, String fileName,
					 String fontName, int fontSize)
		throws IOException
	{
		List<String> ruleNames = parser != null ? Arrays.asList(parser.getRuleNames()) : null;
		save(ruleNames, fileName, fontName, fontSize);
	}",True,True
21,"save(List<String>,String)",Method,"save(Parser,String)""","""","org.antlr.v4.runtime.tree.Trees+writePS(Tree,List<String>,String) org.antlr.v4.runtime.tree.Trees+writePS(Tree,List<String>,String)""","""",188,6,7252,215,1,"/** 
 * Save this tree in a postscript file 
 */
","/** Save this tree in a postscript file */
	public void save(List<String> ruleNames, String fileName)
		throws IOException, PrintException
	{
		Trees.writePS(this, ruleNames, fileName);
	}",True,True
22,"save(List<String>,String,String,int)",Method,"save(Parser,String,String,int)""","""","org.antlr.v4.runtime.tree.Trees+writePS(Tree,List<String>,String,String,int) org.antlr.v4.runtime.tree.Trees+writePS(Tree,List<String>,String,String,int)""","""",267,7,7443,222,1,"/** 
 * Save this tree in a postscript file using a particular font name and size 
 */
","/** Save this tree in a postscript file using a particular font name and size */
	public void save(List<String> ruleNames, String fileName,
					 String fontName, int fontSize)
		throws IOException
	{
		Trees.writePS(this, ruleNames, fileName, fontName, fontSize);
	}",True,True
23,toStringTree(Parser),Method,"""","org.antlr.v4.runtime.misc.TestRig+process(Lexer,Class<? extends Parser>,Parser,InputStream,Reader)""","org.antlr.v4.runtime.tree.Trees+toStringTree(Tree,Parser) org.antlr.v4.runtime.tree.Trees+toStringTree(Tree,Parser)""","""",293,8,7713,234,1,"/** 
 * Print out a whole tree, not just a node, in LISP format (root child1 .. childN). Print just a node if this is a leaf. We have to know the recognizer so we can get rule names.
 */
","/** Print out a whole tree, not just a node, in LISP format
	 *  (root child1 .. childN). Print just a node if this is a leaf.
	 *  We have to know the recognizer so we can get rule names.
	 */
	@Override
	public String toStringTree(Parser recog) {
		return Trees.toStringTree(this, recog);
	}",False,False
24,toStringTree(List<String>),Method,"toStringTree()""","""","org.antlr.v4.runtime.tree.Trees+toStringTree(Tree,List<String>) org.antlr.v4.runtime.tree.Trees+toStringTree(Tree,List<String>)""","""",234,6,8009,241,1,"/** 
 * Print out a whole tree, not just a node, in LISP format (root child1 .. childN). Print just a node if this is a leaf.
 */
","/** Print out a whole tree, not just a node, in LISP format
	 *  (root child1 .. childN). Print just a node if this is a leaf.
	 */
	public String toStringTree(List<String> ruleNames) {
		return Trees.toStringTree(this, ruleNames);
	}",False,False
25,toStringTree(),Method,"""","""","org.antlr.v4.runtime.RuleContext+toStringTree(List<String>) org.antlr.v4.runtime.RuleContext+toStringTree(List<String>)""","""",87,4,8246,246,1,,"@Override
	public String toStringTree() {
		return toStringTree((List<String>)null);
	}",False,False
26,toString(),Method,"""","""","org.antlr.v4.runtime.RuleContext+toString(List<String>,RuleContext) org.antlr.v4.runtime.RuleContext+toString(List<String>,RuleContext)""","""",98,4,8336,251,1,,"@Override
	public String toString() {
		return toString((List<String>)null, (RuleContext)null);
	}",False,False
27,"toString(Recognizer<?,?>)",Method,"""","org.antlr.v4.runtime.atn.ParserATNSimulator+adaptivePredict(TokenStream,int,ParserRuleContext)""","org.antlr.v4.runtime.RuleContext+toString(Recognizer<?,?>,RuleContext) org.antlr.v4.runtime.RuleContext+toString(Recognizer<?,?>,RuleContext)""","org.antlr.v4.runtime.RuleContext+EMPTY""",107,3,8437,255,17,,"public final String toString(Recognizer<?,?> recog) {
		return toString(recog, ParserRuleContext.EMPTY);
	}",False,False
28,toString(List<String>),Method,"""","""","org.antlr.v4.runtime.RuleContext+toString(List<String>,RuleContext) org.antlr.v4.runtime.RuleContext+toString(List<String>,RuleContext)""","""",93,3,8547,259,17,,"public final String toString(List<String> ruleNames) {
		return toString(ruleNames, null);
	}",False,False
29,"toString(Recognizer<?,?>,RuleContext)",Method,"toString(Recognizer<?,?>)""","""","org.antlr.v4.runtime.Recognizer+getRuleNames() org.antlr.v4.runtime.Recognizer+getRuleNames() java.util.Arrays+asList(T[]) java.util.Arrays+asList(T[]) org.antlr.v4.runtime.RuleContext+toString(List<String>,RuleContext) org.antlr.v4.runtime.RuleContext+toString(List<String>,RuleContext)""","""",260,5,8728,264,1,,"public String toString(Recognizer<?,?> recog, RuleContext stop) {
		String[] ruleNames = recog != null ? recog.getRuleNames() : null;
		List<String> ruleNamesList = ruleNames != null ? Arrays.asList(ruleNames) : null;
		return toString(ruleNamesList, stop);
	}",False,False
30,"toString(List<String>,RuleContext)",Method,"toString() toString(List<String>) toString(Recognizer<?,?>,RuleContext)""","""","java.lang.StringBuilder+StringBuilder() java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) org.antlr.v4.runtime.RuleContext+isEmpty() org.antlr.v4.runtime.RuleContext+isEmpty() java.lang.StringBuilder+append(int) java.lang.StringBuilder+append(int) org.antlr.v4.runtime.RuleContext+getRuleIndex() org.antlr.v4.runtime.RuleContext+getRuleIndex() java.util.List+size() java.util.List+size() java.util.List+get(int) java.util.List+get(int) java.lang.Integer+toString(int) java.lang.Integer+toString(int) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) org.antlr.v4.runtime.RuleContext+isEmpty() org.antlr.v4.runtime.RuleContext+isEmpty() java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) java.lang.StringBuilder+append(String) java.lang.StringBuilder+toString() java.lang.StringBuilder+toString()""","org.antlr.v4.runtime.RuleContext+invokingState org.antlr.v4.runtime.RuleContext+parent org.antlr.v4.runtime.RuleContext+parent org.antlr.v4.runtime.RuleContext+parent""",660,26,8991,270,1,,"public String toString(List<String> ruleNames, RuleContext stop) {
		StringBuilder buf = new StringBuilder();
		RuleContext p = this;
		buf.append(""["");
		while (p != null && p != stop) {
			if (ruleNames == null) {
				if (!p.isEmpty()) {
					buf.append(p.invokingState);
				}
			}
			else {
				int ruleIndex = p.getRuleIndex();
				String ruleName = ruleIndex >= 0 && ruleIndex < ruleNames.size() ? ruleNames.get(ruleIndex) : Integer.toString(ruleIndex);
				buf.append(ruleName);
			}

			if (p.parent != null && (ruleNames != null || !p.parent.isEmpty())) {
				buf.append("" "");
			}

			p = p.parent;
		}

		buf.append(""]"");
		return buf.toString();
	}",False,False
