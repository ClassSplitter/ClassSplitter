index,name,type,inner invocations,external invocations,calls,visits,length,lines,start location,definition line,modifier,annotation,full text,removed
1,config,Field,setConfig(Config),,,,66,4,1722,49,4,"/** 
 * The activiti config bean
 */
","/**
   * The activiti config bean
   */
  protected Config config;",False
2,setConfig(Config),Method,,,,org.activiti.rest.util.ActivitiWebScript+config org.activiti.rest.util.ActivitiWebScript+config,185,9,1792,57,1,"/** 
 * Setter for the activiti config bean
 * @param config The activiti config bean
 */
","/**
   * Setter for the activiti config bean
   * 
   * @param config
   *          The activiti config bean
   */
  public void setConfig(Config config) {
    this.config = config;
  }",False
3,"executeImpl(WebScriptRequest,Status,Cache)",Method,,,"java.util.HashMap+HashMap() org.activiti.rest.util.ActivitiWebScript+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.util.ActivitiWebScript+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",,844,28,1981,76,4,"/** 
 * The entry point for the webscript. Will create a model and call the executeWebScript() so extending activiti webscripts may implement custom logic.
 * @param req The webscript request
 * @param status The webscripts status
 * @param cache The webscript cache
 * @return The webscript template model
 */
","/**
   * The entry point for the webscript.
   * 
   * Will create a model and call the executeWebScript() so extending activiti
   * webscripts may implement custom logic.
   * 
   * @param req
   *          The webscript request
   * @param status
   *          The webscripts status
   * @param cache
   *          The webscript cache
   * @return The webscript template model
   */
  @Override
  protected Map<String, Object> executeImpl(WebScriptRequest req, Status status, Cache cache) {
    // Prepare model with process engine info
    Map<String, Object> model = new HashMap<String, Object>();

    // todo: set the current user context when the core api implements security
    // checks

    // Let implementing webscript do something useful
    executeWebScript(req, status, cache, model);

    // Return model
    return model;
  }",False
4,"executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",Method,"executeImpl(WebScriptRequest,Status,Cache)",,,,360,13,2829,100,4,"/** 
 * Override this class to implement custom logic.
 * @param req The webscript request
 * @param status The webscript
 * @param cache
 * @param model
 */
","/**
   * Override this class to implement custom logic.
   * 
   * @param req
   *          The webscript request
   * @param status
   *          The webscript
   * @param cache
   * @param model
   */
  protected void executeWebScript(WebScriptRequest req, Status status, Cache cache, Map<String, Object> model) {
    // Override to make something useful
  }",False
5,getProcessEngineInfo(),Method,,"org.activiti.rest.api.engine.ProcessEngineGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngines+getProcessEngineInfo(String) org.activiti.engine.ProcessEngines+getProcessEngineInfo(String) org.activiti.rest.Config+getEngine() org.activiti.rest.Config+getEngine(),org.activiti.rest.util.ActivitiWebScript+config,217,8,3193,109,4,"/** 
 * Returns the process engine info.
 * @return The process engine info
 */
","/**
   * Returns the process engine info.
   * 
   * @return The process engine info
   */
  protected ProcessEngineInfo getProcessEngineInfo() {
    return ProcessEngines.getProcessEngineInfo(config.getEngine());
  }",False
6,getProcessEngine(),Method,getIdentityService() getManagementService() getRuntimeService() getRepositoryService() getTaskService(),,org.activiti.engine.ProcessEngines+getProcessEngine(String) org.activiti.engine.ProcessEngines+getProcessEngine(String) org.activiti.rest.Config+getEngine() org.activiti.rest.Config+getEngine(),org.activiti.rest.util.ActivitiWebScript+config,195,8,3414,118,4,"/** 
 * Returns the process engine.
 * @return The process engine
 */
","/**
   * Returns the process engine.
   * 
   * @return The process engine
   */
  protected ProcessEngine getProcessEngine() {
    return ProcessEngines.getProcessEngine(config.getEngine());
  }",False
7,getIdentityService(),Method,"isUserInGroup(WebScriptRequest,String,String)","org.activiti.rest.api.identity.GroupGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.GroupUsersGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksSummaryGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getIdentityService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getIdentityService(),,191,8,3613,127,4,"/** 
 * Returns the identity service.
 * @return The identity service
 */
","/**
   * Returns the identity service.
   * 
   * @return The identity service
   */
  protected IdentityService getIdentityService() {
    return getProcessEngine().getIdentityService();
  }",False
8,getManagementService(),Method,,"org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TablesGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getManagementService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getManagementService(),,202,8,3808,136,4,"/** 
 * Returns the management service.
 * @return The management service.
 */
","/**
   * Returns the management service.
   * 
   * @return The management service.
   */
  protected ManagementService getManagementService() {
    return getProcessEngine().getManagementService();
  }",False
9,getRuntimeService(),Method,,"org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getRuntimeService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getRuntimeService(),,186,8,4014,145,4,"/** 
 * Returns The process service.
 * @return The process service
 */
","/**
   * Returns The process service.
   * 
   * @return The process service
   */
  protected RuntimeService getRuntimeService() {
    return getProcessEngine().getRuntimeService();
  }",False
10,getRepositoryService(),Method,,"org.activiti.rest.api.process.ProcessDefinitionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getRepositoryService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getRepositoryService(),,200,8,4204,154,4,"/** 
 * Returns The repository service.
 * @return The repository service
 */
","/**
   * Returns The repository service.
   *
   * @return The repository service
   */
  protected RepositoryService getRepositoryService() {
    return getProcessEngine().getRepositoryService();
  }",False
11,getTaskService(),Method,,"org.activiti.rest.api.tasks.TaskFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksSummaryGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.engine.ProcessEngine+getTaskService() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.rest.util.ActivitiWebScript+getProcessEngine() org.activiti.engine.ProcessEngine+getTaskService(),,171,8,4408,163,4,"/** 
 * Returns the task service.
 * @return The task service
 */
","/**
   * Returns the task service.
   * 
   * @return The task service
   */
  protected TaskService getTaskService() {
    return getProcessEngine().getTaskService();
  }",False
12,getBody(WebScriptRequest),Method,,"org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+ActivitiWebScriptBody(WebScriptRequest) java.lang.Object+Object(),,483,15,4583,175,4,"/** 
 * Returns the webscript request body in an abstracted form so multiple formats may be implemented seamlessly in the future.
 * @param req The webscript request
 * @return The webscript requests body
 */
","/**
   * Returns the webscript request body in an abstracted form so multiple
   * formats may be implemented seamlessly in the future.
   * 
   * @param req
   *          The webscript request
   * @return The webscript requests body
   */
  protected ActivitiWebScriptBody getBody(WebScriptRequest req) {
    try {
      return new ActivitiWebScriptBody(req);
    } catch (IOException e) {
      throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Can't read body"");
    }
  }",True
13,"getMandatoryPathParameter(WebScriptRequest,String)",Method,,"org.activiti.rest.api.identity.GroupUsersGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessDefinitionGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,502,14,5070,194,4,"/** 
 * Gets a path parameter value and throws an exception if its not present.
 * @param req The webscript request
 * @param param The name of the path parameter
 * @return The value of the path parameter
 * @throws WebScriptException if parameter isn't present
 */
","/**
   * Gets a path parameter value and throws an exception if its not present.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the path parameter
   * @return The value of the path parameter
   * @throws WebScriptException
   *           if parameter isn't present
   */
  protected String getMandatoryPathParameter(WebScriptRequest req, String param) {
    return checkString(req.getServiceMatch().getTemplateVars().get(param), param, true);
  }",True
14,"getPathParameter(WebScriptRequest,String)",Method,,,"org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,393,12,5576,207,4,"/** 
 * Gets a path parameter value.
 * @param req The webscript request
 * @param param The name of the path parameter
 * @return The path parameter value or null if not present
 */
","/**
   * Gets a path parameter value.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the path parameter
   * @return The path parameter value or null if not present
   */
  protected String getPathParameter(WebScriptRequest req, String param) {
    return checkString(req.getServiceMatch().getTemplateVars().get(param), param, false);
  }",True
15,"getInt(WebScriptRequest,String)",Method,,,"org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String)",java.lang.Integer+MIN_VALUE,415,13,5973,220,4,"/** 
 * Gets an int parameter value.
 * @param req The webscript request
 * @param param The name of the int parameter
 * @return The int parameter value or Integer.MIN_VALUE if not present
 */
","/**
   * Gets an int parameter value.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the int parameter
   * @return The int parameter value or Integer.MIN_VALUE if not present
   */
  protected int getInt(WebScriptRequest req, String param) {
    String value = getString(req, param);
    return value != null ? Integer.parseInt(value) : Integer.MIN_VALUE;
  }",True
16,"getMandatoryInt(WebScriptRequest,String)",Method,,,"org.activiti.rest.util.ActivitiWebScript+getMandatoryString(WebScriptRequest,String) org.activiti.rest.util.ActivitiWebScript+getMandatoryString(WebScriptRequest,String) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String)",java.lang.Integer+MIN_VALUE,518,15,6392,236,4,"/** 
 * Gets a mandatory int parameter and throws an exception if its not present.
 * @param req The webscript request
 * @param param The name of the path parameter
 * @return The int parameter value
 * @throws WebScriptException if parameter isn't present
 */
","/**
   * Gets a mandatory int parameter and throws an exception if its not present.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the path parameter
   * @return The int parameter value
   * @throws WebScriptException
   *           if parameter isn't present
   */
  protected int getMandatoryInt(WebScriptRequest req, String param) {
    String value = getMandatoryString(req, param);
    return value != null ? Integer.parseInt(value) : Integer.MIN_VALUE;
  }",True
17,"getInt(WebScriptRequest,String,int)",Method,,"org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) org.activiti.rest.util.ActivitiWebScript+getString(WebScriptRequest,String) java.lang.Integer+parseInt(String) java.lang.Integer+parseInt(String)",,541,16,6914,253,4,"/** 
 * Gets an int parameter value
 * @param req The webscript request
 * @param param The name of the int parameter
 * @param defaultValue THe value to return if the parameter isn't present
 * @return The int parameter value of defaultValue if the parameter isn'tpresent
 */
","/**
   * Gets an int parameter value
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the int parameter
   * @param defaultValue
   *          THe value to return if the parameter isn't present
   * @return The int parameter value of defaultValue if the parameter isn't
   *         present
   */
  protected int getInt(WebScriptRequest req, String param, int defaultValue) {
    String value = getString(req, param);
    return value != null ? Integer.parseInt(value) : defaultValue;
  }",True
18,"getString(WebScriptRequest,String)",Method,"getInt(WebScriptRequest,String) getInt(WebScriptRequest,String,int)","org.activiti.rest.api.cycle.ArtifactGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.TreeGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.TreeGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.identity.UserGroupsGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,383,12,7459,267,4,"/** 
 * Gets the string parameter value.
 * @param req The webscript request
 * @param param The name of the string parameter
 * @return The string parameter value or null if the parameter isn't present
 */
","/**
   * Gets the string parameter value.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the string parameter
   * @return The string parameter value or null if the parameter isn't present
   */
  protected String getString(WebScriptRequest req, String param) {
    return checkString(req.getParameter(param), param, false);
  }",True
19,"getMandatoryString(WebScriptRequest,String)",Method,"getMandatoryInt(WebScriptRequest,String)","org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactActionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactActionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TasksSummaryGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,503,15,7846,283,4,"/** 
 * Gets a mandatory string parameter value of throws an exception if the parameter isn't present.
 * @param req The webscript request
 * @param param The name of the string parameter value
 * @return The string parameter value
 * @throws WebScriptException if the parameter isn't present
 */
","/**
   * Gets a mandatory string parameter value of throws an exception if the
   * parameter isn't present.
   * 
   * @param req
   *          The webscript request
   * @param param
   *          The name of the string parameter value
   * @return The string parameter value
   * @throws WebScriptException
   *           if the parameter isn't present
   */
  protected String getMandatoryString(WebScriptRequest req, String param) {
    return checkString(req.getParameter(param), param, true);
  }",True
20,"getString(WebScriptRequest,String,String)",Method,,"org.activiti.rest.api.management.TableDataGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean)",,587,16,8353,299,4,"/** 
 * Gets the string parameter value.
 * @param req The webscript request.
 * @param param The name of the string parameter value
 * @param defaultValue The value to return if the parameter isn't present
 * @return The value of the string parameter or the default value if parameterisn't present
 */
","/**
   * Gets the string parameter value.
   * 
   * @param req
   *          The webscript request.
   * @param param
   *          The name of the string parameter value
   * @param defaultValue
   *          The value to return if the parameter isn't present
   * @return The value of the string parameter or the default value if parameter
   *         isn't present
   */
  protected String getString(WebScriptRequest req, String param, String defaultValue) {
    String value = checkString(req.getParameter(param), param, false);
    return value != null ? value : defaultValue;
  }",True
21,"getMandatoryString(ActivitiWebScriptBody,String)",Method,,"org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)","org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkString(String,String,boolean) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getString(String) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getString(String)",,474,14,8944,315,4,"/** 
 * Gets a string parameter from the body
 * @param body The activiti webscript request body
 * @param param The name of the string parameter
 * @return The value of the string body parameter
 * @throws WebScriptException if string body parameter isn't present
 */
","/**
   * Gets a string parameter from the body
   * 
   * @param body
   *          The activiti webscript request body
   * @param param
   *          The name of the string parameter
   * @return The value of the string body parameter
   * @throws WebScriptException
   *           if string body parameter isn't present
   */
  protected String getMandatoryString(ActivitiWebScriptBody body, String param) {
    return checkString(body.getString(param), param, true);
  }",True
22,getFormVariables(ActivitiWebScriptBody),Method,,"org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.process.ProcessInstancePost+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getFormVariables() org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getFormVariables(),,368,12,9422,328,4,"/** 
 * Gets a parameter as Map
 * @param body The activiti webscript request body
 * @return The value of the string body parameter
 * @throws WebScriptException if string body parameter isn't present
 */
","/**
   * Gets a parameter as Map
   * 
   * @param body
   *          The activiti webscript request body
   * @return The value of the string body parameter
   * @throws WebScriptException
   *           if string body parameter isn't present
   */
  protected Map<String, Object> getFormVariables(ActivitiWebScriptBody body) {
    return body.getFormVariables();
  }",True
23,"checkString(String,String,boolean)",Method,"getMandatoryPathParameter(WebScriptRequest,String) getPathParameter(WebScriptRequest,String) getString(WebScriptRequest,String) getMandatoryString(WebScriptRequest,String) getString(WebScriptRequest,String,String) getMandatoryString(ActivitiWebScriptBody,String)",,"java.lang.String+length() java.lang.String+length() org.activiti.rest.util.ActivitiWebScript+checkObject(Object,String,boolean) org.activiti.rest.util.ActivitiWebScript+checkObject(Object,String,boolean)",,638,20,9794,346,4,"/** 
 * Throws and exception if the parameter value is null or empty and mandatory is true
 * @param value The parameter value to test
 * @param param The name of the parameter
 * @param mandatory If true the value wil be tested
 * @return The parameter value
 * @throws WebScriptException if mandatory is true and value is null or empty
 */
","/**
   * Throws and exception if the parameter value is null or empty and mandatory
   * is true
   * 
   * @param value
   *          The parameter value to test
   * @param param
   *          The name of the parameter
   * @param mandatory
   *          If true the value wil be tested
   * @return The parameter value
   * @throws WebScriptException
   *           if mandatory is true and value is null or empty
   */
  protected String checkString(String value, String param, boolean mandatory) {
    if (value != null && value.length() == 0) {
      value = null;
    }
    return (String) checkObject(value, param, mandatory);
  }",True
24,"checkObject(Object,String,boolean)",Method,"checkString(String,String,boolean)",,java.lang.Object+Object(),,727,24,10436,367,4,"/** 
 * Throws and exception if the parameter value is null or empty and mandatory is true
 * @param value The parameter value to test
 * @param param The name of the parameter
 * @param mandatory If true the value wil be tested
 * @return The parameter value
 * @throws WebScriptException if mandatory is true and value is null or empty
 */
","/**
   * Throws and exception if the parameter value is null or empty and mandatory
   * is true
   * 
   * @param value
   *          The parameter value to test
   * @param param
   *          The name of the parameter
   * @param mandatory
   *          If true the value wil be tested
   * @return The parameter value
   * @throws WebScriptException
   *           if mandatory is true and value is null or empty
   */
  protected Object checkObject(Object value, String param, boolean mandatory) {
    if (value == null) {
      if (mandatory) {
        throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Parameter '"" + param + ""' is missing"");
      } else {
        return null;
      }
    }
    return value;
  }",True
25,getCurrentUserId(WebScriptRequest),Method,isManager(WebScriptRequest) isAdmin(WebScriptRequest),"org.activiti.rest.api.cycle.ActionExecutionPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactActionFormGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.ArtifactGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.cycle.TreeGet+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>) org.activiti.rest.api.tasks.TaskOperationPut+executeWebScript(WebScriptRequest,Status,Cache,Map<String,Object>)",java.lang.String+split(String) java.lang.String+split(String) java.lang.String+split(String) java.lang.String+String(String) java.lang.String+split(String),,494,17,11167,385,4,"/** 
 * Returns the username for the current user.
 * @param req The webscript request
 * @return THe username of the current user
 */
","/**
   * Returns the username for the current user.
   * 
   * @param req
   *          The webscript request
   * @return THe username of the current user
   */
  protected String getCurrentUserId(WebScriptRequest req) {
    String authorization = req.getHeader(""Authorization"");
    if (authorization != null) {
      String[] parts = authorization.split("" "");
      if (parts.length == 2) {
        return new String(Base64.decode(parts[1])).split("":"")[0];
      }
    }
    return null;
  }",True
26,"isUserInGroup(WebScriptRequest,String,String)",Method,isManager(WebScriptRequest) isAdmin(WebScriptRequest),,org.activiti.engine.identity.GroupQuery+list() org.activiti.engine.identity.GroupQuery+member(String) org.activiti.engine.IdentityService+createGroupQuery() org.activiti.rest.util.ActivitiWebScript+getIdentityService() org.activiti.rest.util.ActivitiWebScript+getIdentityService() org.activiti.engine.IdentityService+createGroupQuery() org.activiti.engine.identity.GroupQuery+member(String) org.activiti.engine.identity.GroupQuery+list() java.lang.String+equals(Object) org.activiti.rest.Config+getAdminGroupId() org.activiti.rest.Config+getAdminGroupId() java.lang.String+equals(Object) org.activiti.engine.identity.Group+getId() org.activiti.engine.identity.Group+getId(),org.activiti.rest.util.ActivitiWebScript+config,647,22,11665,407,4,"/** 
 * Tests if user is in group.
 * @param req The webscript request
 * @param userId The id of the user to test
 * @param groupId The if of the group to test the user against
 * @return true of user is in group
 */
","/**
   * Tests if user is in group.
   * 
   * @param req
   *          The webscript request
   * @param userId
   *          The id of the user to test
   * @param groupId
   *          The if of the group to test the user against
   * @return true of user is in group
   */
  protected boolean isUserInGroup(WebScriptRequest req, String userId, String groupId) {
    if (userId != null) {
      List<Group> groups = getIdentityService().createGroupQuery().member(userId).list();
      for (Group group : groups) {
        if (config.getAdminGroupId().equals(group.getId())) {
          return true;
        }
      }
    }
    return false;
  }",True
27,isManager(WebScriptRequest),Method,,,"org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.Config+getManagerGroupId() org.activiti.rest.Config+getManagerGroupId()",org.activiti.rest.util.ActivitiWebScript+config,292,10,12316,426,4,"/** 
 * Tests if user has manager role.
 * @param req The webscript request.
 * @return true if the user has manager role
 */
","/**
   * Tests if user has manager role.
   * 
   * @param req
   *          The webscript request.
   * @return true if the user has manager role
   */
  protected boolean isManager(WebScriptRequest req) {
    return isUserInGroup(req, getCurrentUserId(req), config.getManagerGroupId());
  }",False
28,isAdmin(WebScriptRequest),Method,,,"org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+isUserInGroup(WebScriptRequest,String,String) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.util.ActivitiWebScript+getCurrentUserId(WebScriptRequest) org.activiti.rest.Config+getAdminGroupId() org.activiti.rest.Config+getAdminGroupId()",org.activiti.rest.util.ActivitiWebScript+config,283,10,12612,437,4,"/** 
 * Tests if user has admin role.
 * @param req The webscript request
 * @return true if the user has admin role
 */
","/**
   * Tests if user has admin role.
   * 
   * @param req
   *          The webscript request
   * @return true if the user has admin role
   */
  protected boolean isAdmin(WebScriptRequest req) {
    return isUserInGroup(req, getCurrentUserId(req), config.getAdminGroupId());
  }",False
29,ActivitiWebScriptBody,MemberClass,,,"org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+ActivitiWebScriptBody(WebScriptRequest) org.activiti.engine.impl.util.json.JSONObject+JSONObject(JSONTokener) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getInt(String) org.activiti.engine.impl.util.json.JSONObject+getInt(String) org.activiti.engine.impl.util.json.JSONObject+getInt(String) org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+getFormVariables() java.util.HashMap+HashMap() org.activiti.engine.impl.util.json.JSONObject+keys() org.activiti.engine.impl.util.json.JSONObject+keys() java.util.Iterator+hasNext() java.util.Iterator+hasNext() java.util.Iterator+next() java.util.Iterator+next() java.lang.String+split(String) java.lang.String+split(String) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getInt(String) org.activiti.engine.impl.util.json.JSONObject+getInt(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getBoolean(String) org.activiti.engine.impl.util.json.JSONObject+getBoolean(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+getString(String) org.activiti.engine.impl.util.json.JSONObject+getString(String) java.lang.Object+Object() org.activiti.engine.impl.util.json.JSONObject+get(String) org.activiti.engine.impl.util.json.JSONObject+get(String) java.util.Map+put(K,V) java.util.Map+put(K,V) java.lang.String+equals(Object) java.lang.String+equals(Object) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+has(String) org.activiti.engine.impl.util.json.JSONObject+get(String) org.activiti.engine.impl.util.json.JSONObject+get(String) java.lang.Object+Object()",org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody org.activiti.rest.util.ActivitiWebScript.ActivitiWebScriptBody+jsonBody,3361,103,-1,-1,1,"/** 
 * A class that wraps the webscripts request body so multiple formats such as XML may be supported in the future.
 */
","/**
   * A class that wraps the webscripts request body so multiple formats such as
   * XML may be supported in the future.
   */
  public class ActivitiWebScriptBody {

    /**
     * The json body
     */
    private JSONObject jsonBody = null;

    /**
     * Constructor
     * 
     * @param req
     *          The webscript request
     * @throws IOException
     *           if body of correct format cannot be created
     */
    ActivitiWebScriptBody(WebScriptRequest req) throws IOException {
      jsonBody = new JSONObject(req.getContent().getContent());
    }

    /**
     * Gets a body parameter string value.
     * 
     * @param param
     *          The name of the parameter
     * @return The string value of the parameter
     */
    String getString(String param) {
      return jsonBody.getString(param);
    }

    /**
     * Gets a body parameter string value.
     * 
     * @param param
     *          The name of the parameter
     * @return The string value of the parameter
     */
    int getInt(String param) {
      return jsonBody.getInt(param);
    }

    /**
     * Gets the body as a map.
     * 
     * @return The body as a map
     */
    Map<String, Object> getFormVariables() {
      Map<String, Object> map = new HashMap<String, Object>();
      Iterator keys = jsonBody.keys();
      String key, typeKey, type;
      String[] keyPair;
      Object value;
      while (keys.hasNext()) {
        key = (String) keys.next();
        keyPair = key.split(""_"");
        if (keyPair.length == 1) {
          typeKey = keyPair[0] + ""_type"";
          if (jsonBody.has(typeKey)) {
            type = jsonBody.getString(typeKey);
            if (type.equals(""Integer"")) {
              value = jsonBody.getInt(key);
            } else if (type.equals(""Boolean"")) {
              value = jsonBody.getBoolean(key);
            } else if (type.equals(""Date"")) {
              value = jsonBody.getString(key);
            } else if (type.equals(""User"")) {
              value = jsonBody.getString(key);
            } else if (type.equals(""String"")) {
              value = jsonBody.getString(key);
            } else if (type.equals(""RepositoryFolder"")) {
              // TODO: Check implementation in CustomizedViewConnector, but
              // should be moved there
              value = jsonBody.getString(key);
              // if (conn != null) {
              // value = conn.getRepositoryFolder(jsonBody.getString(key));
              // } else {
              // throw new WebScriptException(Status.STATUS_BAD_REQUEST,
              // ""Parameter '"" + keyPair[0] + ""' of type '"" + type
              // + ""' requested without providing a repository connector"");
              // }
            } else {
              throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Parameter '"" + keyPair[0] + ""' is of unknown type '"" + type + ""'"");
            }
          } else {
            value = jsonBody.get(key);
          }
          map.put(key, value);
        } else if (keyPair.length == 2) {
          if (keyPair[1].equals(""required"")) {
            if (!jsonBody.has(keyPair[0]) || jsonBody.get(keyPair[0]) == null) {
              throw new WebScriptException(Status.STATUS_BAD_REQUEST, ""Parameter '"" + keyPair[0] + ""' has no value"");
            }
          }
        }
      }
      return map;
    }

  }",False
