index,name,type,inner invocations,external invocations,calls,visits,length,lines,start location,definition line,modifier,annotation,full text,removed
1,intDoubleRow,Field,"ServerIntDoubleRow(int,RowType,int,int,int,IntDoubleVector)",,,,88,4,1514,42,2,"/** 
 * Just a view of ""row"" in ServerRow
 */
","/**
   * Just a view of ""row"" in ServerRow
   */
  private IntDoubleVector intDoubleRow;",False
2,startColInt,Field,"ServerIntDoubleRow(int,RowType,int,int,int,IntDoubleVector)",,,,90,4,1606,47,130,"/** 
 * Just a view of ""startCol"" in ServerRow
 */
","/**
   * Just a view of ""startCol"" in ServerRow
   */
  private transient int startColInt;",False
3,endColInt,Field,"ServerIntDoubleRow(int,RowType,int,int,int,IntDoubleVector)",,,,86,4,1700,52,130,"/** 
 * Just a view of ""endCol"" in ServerRow
 */
","/**
   * Just a view of ""endCol"" in ServerRow
   */
  private transient int endColInt;",False
4,"ServerIntDoubleRow(int,RowType,int,int,int,IntDoubleVector)",Method,,,,com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+endColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+endColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerRow+row,570,17,1790,64,1,"/** 
 * Create a new ServerIntDoubleRow
 * @param rowId row index
 * @param rowType row type
 * @param startCol start position
 * @param endCol end position
 * @param estElemNum the estimate element number
 * @param innerRow inner row
 */
","/**
   * Create a new ServerIntDoubleRow
   *
   * @param rowId row index
   * @param rowType row type
   * @param startCol start position
   * @param endCol end position
   * @param estElemNum the estimate element number
   * @param innerRow inner row
   */
  public ServerIntDoubleRow(int rowId, RowType rowType, int startCol, int endCol, int estElemNum,
      IntDoubleVector innerRow) {
    super(rowId, rowType, startCol, endCol, estElemNum, innerRow);
    this.startColInt = startCol;
    this.endColInt = endCol;
    this.intDoubleRow = (IntDoubleVector) row;
  }",False
5,"ServerIntDoubleRow(int,RowType,int,int,int)",Method,,,,,393,12,2364,81,1,"/** 
 * Create a new ServerIntDoubleRow
 * @param rowId row index
 * @param rowType row type
 * @param startCol start position
 * @param endCol end position
 * @param estElemNum the estimate element number
 */
","/**
   * Create a new ServerIntDoubleRow
   *
   * @param rowId row index
   * @param rowType row type
   * @param startCol start position
   * @param endCol end position
   * @param estElemNum the estimate element number
   */
  public ServerIntDoubleRow(int rowId, RowType rowType, int startCol, int endCol, int estElemNum) {
    this(rowId, rowType, startCol, endCol, estElemNum, null);
  }",False
6,ServerIntDoubleRow(RowType),Method,,,,,162,8,2761,90,1,"/** 
 * Create a new ServerIntDoubleRow
 * @param rowType row type
 */
","/**
   * Create a new ServerIntDoubleRow
   *
   * @param rowType row type
   */
  public ServerIntDoubleRow(RowType rowType) {
    this(0, rowType, 0, 0, 0);
  }",False
7,get(int),Method,"addTo(int,double) initAndGet(int,InitFunc)","com.tencent.angel.model.output.format.ColumnFormat+saveIntDoubleRows(ServerPartition,ServerRow[],MatrixPartitionMeta,PSMatrixSaveContext,DataOutputStream) com.tencent.angel.model.output.format.ColumnFormat+saveIntDoubleRows(ServerPartition,ServerRow[],MatrixPartitionMeta,PSMatrixSaveContext,DataOutputStream) com.tencent.angel.model.output.format.ColumnFormat+saveIntDoubleRows(ServerPartition,ServerRow[],MatrixPartitionMeta,PSMatrixSaveContext,DataOutputStream) com.tencent.angel.ml.psf.columns.GetColsFunc+doGetLockFree(ServerRow[],long[],InitFunc) com.tencent.angel.ml.psf.columns.UpdateColsFunc+doUpdate(CompIntDoubleVector,int[],long[],ServerIntDoubleRow[],UpdateOp) com.tencent.angel.ml.GBDT.algo.RegTree.GradHistHelper+calGradStats(ServerIntDoubleRow,int,int) com.tencent.angel.ml.GBDT.algo.RegTree.GradHistHelper+calGradStats(ServerIntDoubleRow,int,int) com.tencent.angel.ml.GBDT.algo.RegTree.GradHistHelper+findSplitOfFeature(int,ServerIntDoubleRow,int,GBDTParam) com.tencent.angel.ml.GBDT.algo.RegTree.GradHistHelper+findSplitOfFeature(int,ServerIntDoubleRow,int,GBDTParam) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+merge(List<PartitionGetResult>) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+merge(List<PartitionGetResult>) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+merge(List<PartitionGetResult>) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+merge(List<PartitionGetResult>) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+merge(List<PartitionGetResult>) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+merge(List<PartitionGetResult>) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+merge(List<PartitionGetResult>)",com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int),com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt,209,9,3266,105,1,"/** 
 * Get a element value with out lock operation
 * @param index element index
 * @return element value
 */
","/**
   * Get a element value with out lock operation
   *
   * @param index element index
   * @return element value
   */
  public double get(int index) {
    return intDoubleRow.get(index - startColInt);
  }",False
8,"set(int,double)",Method,"addTo(int,double) initAndGet(int,InitFunc)","com.tencent.angel.model.output.format.ColumnFormat+loadIntDoubleRows(ServerPartition,ServerRow[],MatrixPartitionMeta,PSMatrixLoadContext,DataInputStream) com.tencent.angel.model.output.format.RowFormat+load(ServerIntDoubleRow,PSMatrixLoadContext,MatrixPartitionMeta,DataInputStream) com.tencent.angel.model.output.format.SnapshotFormat+load(ServerIntDoubleRow,PSMatrixLoadContext,MatrixPartitionMeta,DataInputStream) com.tencent.angel.model.output.format.SnapshotFormat+load(ServerIntDoubleRow,PSMatrixLoadContext,MatrixPartitionMeta,DataInputStream) com.tencent.angel.ml.psf.columns.UpdateColsFunc+doUpdate(CompIntDoubleVector,int[],long[],ServerIntDoubleRow[],UpdateOp) com.tencent.angel.ml.psf.columns.UpdateColsFunc+doUpdate(CompIntDoubleVector,int[],long[],ServerIntDoubleRow[],UpdateOp) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+partitionGet(PartitionGetParam) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+partitionGet(PartitionGetParam) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+partitionGet(PartitionGetParam) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+partitionGet(PartitionGetParam) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+partitionGet(PartitionGetParam) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+partitionGet(PartitionGetParam) com.tencent.angel.ml.GBDT.psf.GBDTGradHistGetRowFunc+partitionGet(PartitionGetParam)","com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt,229,9,3479,115,1,"/** 
 * Set a element value without lock operation
 * @param index element index
 * @param value element new value
 */
","/**
   * Set a element value without lock operation
   *
   * @param index element index
   * @param value element new value
   */
  public void set(int index, double value) {
    intDoubleRow.set(index - startColInt, value);
  }",False
9,get(int[]),Method,"indexGet(IndexType,int,ByteBuf,ByteBuf,InitFunc)",com.tencent.angel.ml.matrix.psf.get.indexed.IndexGet+partitionGet(PartitionGetParam),com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int),com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt,353,13,3712,125,1,"/** 
 * Get a batch elements values without lock
 * @param indices elements indices
 * @return elements values
 */
","/**
   * Get a batch elements values without lock
   *
   * @param indices elements indices
   * @return elements values
   */
  public double[] get(int[] indices) {
    double[] values = new double[indices.length];
    for (int i = 0; i < indices.length; i++) {
      values[i] = intDoubleRow.get(indices[i] - startColInt);
    }
    return values;
  }",False
10,"set(int[],double[])",Method,,,,,346,12,4069,139,1,"/** 
 * Set a batch elements values without lock
 * @param indices elements indices
 * @param values elements values
 */
","/**
   * Set a batch elements values without lock
   *
   * @param indices elements indices
   * @param values elements values
   */
  public void set(int[] indices, double[] values) {
    assert indices.length == values.length;
    for (int i = 0; i < indices.length; i++) {
      intDoubleRow.set(indices[i] - startColInt, values[i]);
    }
  }",False
11,"addTo(int,double)",Method,,,"com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+set(int,double) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+set(int,double) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+get(int) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+get(int)",,208,9,4419,152,1,"/** 
 * Add a element value without lock
 * @param index element index
 * @param value element plus value
 */
","/**
   * Add a element value without lock
   *
   * @param index element index
   * @param value element plus value
   */
  public void addTo(int index, double value) {
    set(index, get(index) + value);
  }",False
12,"addTo(int[],double[])",Method,,,,,344,12,4631,162,1,"/** 
 * Add a batch elements values without lock
 * @param indices elements indices
 * @param values elements plus values
 */
","/**
   * Add a batch elements values without lock
   *
   * @param indices elements indices
   * @param values elements plus values
   */
  public void addTo(int[] indices, double[] values) {
    assert indices.length == values.length;
    for (int i = 0; i < indices.length; i++) {
      set(indices[i], get(indices[i]) + values[i]);
    }
  }",False
13,getValues(),Method,mergeTo(IntDoubleVector) serializeRow(ByteBuf) elemUpdate(DoubleElemUpdateFunc),,com.tencent.angel.ml.math2.storage.DoubleVectorStorage+getValues() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.storage.DoubleVectorStorage+getValues(),com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,231,8,4979,174,2,"/** 
 * Get all element values without lock, you must check the storage is dense first use ""isDense""
 * @return all element values
 */
","/**
   * Get all element values without lock, you must check the storage is dense first use ""isDense""
   *
   * @return all element values
   */
  private double[] getValues() {
    return intDoubleRow.getStorage().getValues();
  }",False
14,getIter(),Method,mergeTo(IntDoubleVector) serializeRow(ByteBuf) elemUpdate(DoubleElemUpdateFunc),,com.tencent.angel.ml.math2.storage.IntDoubleVectorStorage+entryIterator() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.storage.IntDoubleVectorStorage+entryIterator(),com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,349,9,5214,184,1,"/** 
 * Get all element indices and values without lock, you must check the storage is sparse first use ""isSparse""; if you want use original indices, you must plus with ""startCol"" first
 * @return all element values
 */
","/**
   * Get all element indices and values without lock, you must check the storage is sparse first use
   * ""isSparse""; if you want use original indices, you must plus with ""startCol"" first
   *
   * @return all element values
   */
  public ObjectIterator<Int2DoubleMap.Entry> getIter() {
    return intDoubleRow.getStorage().entryIterator();
  }",False
15,"update(RowType,ByteBuf,UpdateOp)",Method,,,"com.tencent.angel.ps.storage.vector.ServerRow+startWrite() com.tencent.angel.ps.storage.vector.ServerRow+startWrite() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntDoubleSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntDoubleSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntFloatSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntFloatSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntLongSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntLongSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntIntSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntIntSparse(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntDoubleDense(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntDoubleDense(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntFloatDense(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntFloatDense(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntLongDense(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntLongDense(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntIntDense(ByteBuf,UpdateOp) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+updateUseIntIntDense(ByteBuf,UpdateOp) java.lang.UnsupportedOperationException+UnsupportedOperationException(String) java.lang.Class+getName() java.lang.Object+getClass() java.lang.Object+getClass() java.lang.Class+getName() com.tencent.angel.ps.storage.vector.ServerRow+updateRowVersion() com.tencent.angel.ps.storage.vector.ServerRow+updateRowVersion() com.tencent.angel.ps.storage.vector.ServerRow+endWrite() com.tencent.angel.ps.storage.vector.ServerRow+endWrite()",,1406,56,5567,189,1,,"@Override
  public void update(RowType updateType, ByteBuf buf, UpdateOp op) {
    startWrite();
    try {
      switch (updateType) {
        case T_DOUBLE_SPARSE:
        case T_DOUBLE_SPARSE_COMPONENT:
          updateUseIntDoubleSparse(buf, op);
          break;

        case T_FLOAT_SPARSE:
        case T_FLOAT_SPARSE_COMPONENT:
          updateUseIntFloatSparse(buf, op);
          break;

        case T_LONG_SPARSE:
        case T_LONG_SPARSE_COMPONENT:
          updateUseIntLongSparse(buf, op);
          break;

        case T_INT_SPARSE:
        case T_INT_SPARSE_COMPONENT:
          updateUseIntIntSparse(buf, op);
          break;

        case T_DOUBLE_DENSE:
        case T_DOUBLE_DENSE_COMPONENT:
          updateUseIntDoubleDense(buf, op);
          break;

        case T_FLOAT_DENSE:
        case T_FLOAT_DENSE_COMPONENT:
          updateUseIntFloatDense(buf, op);
          break;

        case T_LONG_DENSE:
        case T_LONG_DENSE_COMPONENT:
          updateUseIntLongDense(buf, op);
          break;

        case T_INT_DENSE:
        case T_INT_DENSE_COMPONENT:
          updateUseIntIntDense(buf, op);
          break;

        default: {
          throw new UnsupportedOperationException(
              ""Unsupport operation: update "" + updateType + "" to "" + this.getClass().getName());
        }
      }

      updateRowVersion();
    } finally {
      endWrite();
    }
  }",True
16,"updateUseIntDoubleDense(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,358,12,6977,245,2,,"private void updateUseIntDoubleDense(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, intDoubleRow.get(i) + buf.readDouble());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, buf.readDouble());
      }
    }
  }",True
17,"updateUseIntFloatDense(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,355,12,7339,258,2,,"private void updateUseIntFloatDense(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, intDoubleRow.get(i) + buf.readFloat());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, buf.readFloat());
      }
    }
  }",True
18,"updateUseIntIntDense(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,349,12,7698,271,2,,"private void updateUseIntIntDense(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, intDoubleRow.get(i) + buf.readInt());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, buf.readInt());
      }
    }
  }",True
19,"updateUseIntLongDense(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,352,12,8051,284,2,,"private void updateUseIntLongDense(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, intDoubleRow.get(i) + buf.readLong());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, buf.readLong());
      }
    }
  }",True
20,"updateUseIntDoubleSparse(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,414,13,8407,297,2,,"private void updateUseIntDoubleSparse(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        int index = buf.readInt();
        intDoubleRow.set(index, intDoubleRow.get(index) + buf.readDouble());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(buf.readInt(), buf.readDouble());
      }
    }
  }",True
21,"updateUseIntFloatSparse(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,411,13,8825,311,2,,"private void updateUseIntFloatSparse(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        int index = buf.readInt();
        intDoubleRow.set(index, intDoubleRow.get(index) + buf.readFloat());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(buf.readInt(), buf.readFloat());
      }
    }
  }",True
22,"updateUseIntIntSparse(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,405,13,9240,325,2,,"private void updateUseIntIntSparse(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        int index = buf.readInt();
        intDoubleRow.set(index, intDoubleRow.get(index) + buf.readInt());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(buf.readInt(), buf.readInt());
      }
    }
  }",True
23,"updateUseIntLongSparse(ByteBuf,UpdateOp)",Method,"update(RowType,ByteBuf,UpdateOp)",,"com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,408,13,9649,339,2,,"private void updateUseIntLongSparse(ByteBuf buf, UpdateOp op) {
    int size = buf.readInt();
    if (op == UpdateOp.PLUS) {
      for (int i = 0; i < size; i++) {
        int index = buf.readInt();
        intDoubleRow.set(index, intDoubleRow.get(index) + buf.readLong());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(buf.readInt(), buf.readLong());
      }
    }
  }",True
24,size(),Method,getRowSpace() getRowSpace(),"com.tencent.angel.ml.psf.compress.QuantifyDoubleFunc+doUpdate(ServerIntDoubleRow,double[]) com.tencent.angel.ml.GBDT.algo.RegTree.GradHistHelper+findSplitOfFeature(int,ServerIntDoubleRow,int,GBDTParam)",com.tencent.angel.ml.math2.vector.IntDoubleVector+size() com.tencent.angel.ml.math2.vector.IntDoubleVector+size(),com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,67,4,10062,355,1,,"@Override
  public int size() {
    return intDoubleRow.size();
  }",False
25,mergeTo(IntDoubleVector),Method,,"com.tencent.angel.psagent.matrix.transport.adapter.RowSplitCombineUtils+combineServerIntDoubleRowSplits(List<ServerRow>,MatrixMeta,int) com.tencent.angel.psagent.matrix.transport.adapter.RowSplitCombineUtils+combineServerDenseDoubleRowSplitsPipeline(GetRowPipelineCache,MatrixMeta,int)","com.tencent.angel.ps.storage.vector.ServerRow+startRead() com.tencent.angel.ps.storage.vector.ServerRow+startRead() com.tencent.angel.ps.storage.vector.ServerRow+isDense() com.tencent.angel.ps.storage.vector.ServerRow+isDense() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getValues() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getValues() com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getIter() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getIter() com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ps.storage.vector.ServerRow+endRead() com.tencent.angel.ps.storage.vector.ServerRow+endRead()",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt,656,25,10133,364,1,"/** 
 * Merge this row split to a row
 * @param mergedRow the dest row
 */
","/**
   * Merge this row split to a row
   *
   * @param mergedRow the dest row
   */
  public void mergeTo(IntDoubleVector mergedRow) {
    startRead();
    try {
      if (isDense()) {
        double[] values = getValues();
        for (int i = 0; i < values.length; i++) {
          mergedRow.set(i + startColInt, values[i]);
        }
      } else {
        ObjectIterator<Int2DoubleMap.Entry> iter = getIter();
        Int2DoubleMap.Entry entry;
        while (iter.hasNext()) {
          entry = iter.next();
          mergedRow.set(entry.getIntKey() + startColInt, entry.getDoubleValue());
        }
      }
    } finally {
      endRead();
    }
  }",False
26,serializeRow(ByteBuf),Method,,,com.tencent.angel.ps.storage.vector.ServerRow+useDenseSerialize() com.tencent.angel.ps.storage.vector.ServerRow+useDenseSerialize() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getValues() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getValues() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getIter() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getIter(),,488,17,10793,386,4,,"@Override
  protected void serializeRow(ByteBuf buf) {
    if (useDenseSerialize()) {
      double[] values = getValues();
      for (int i = 0; i < values.length; i++) {
        buf.writeDouble(values[i]);
      }
    } else {
      ObjectIterator<Int2DoubleMap.Entry> iter = getIter();
      Int2DoubleMap.Entry entry;
      while (iter.hasNext()) {
        entry = iter.next();
        buf.writeInt(entry.getIntKey());
        buf.writeDouble(entry.getDoubleValue());
      }
    }
  }",False
27,deserializeRow(ByteBuf),Method,,,"com.tencent.angel.ps.storage.vector.ServerRow+useDenseSerialize() com.tencent.angel.ps.storage.vector.ServerRow+useDenseSerialize() com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double) com.tencent.angel.ml.math2.vector.IntDoubleVector+set(int,double)",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerRow+startCol com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+endColInt com.tencent.angel.ps.storage.vector.ServerRow+endCol com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerRow+row com.tencent.angel.ps.storage.vector.ServerRow+size com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerRow+size com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,416,15,11285,404,4,,"@Override
  protected void deserializeRow(ByteBuf buf) {
    startColInt = (int) startCol;
    endColInt = (int) endCol;
    intDoubleRow = (IntDoubleVector) row;
    if (useDenseSerialize()) {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(i, buf.readDouble());
      }
    } else {
      for (int i = 0; i < size; i++) {
        intDoubleRow.set(buf.readInt(), buf.readDouble());
      }
    }
  }",False
28,getRowSpace(),Method,,,com.tencent.angel.ps.storage.vector.ServerRow+useDenseSerialize() com.tencent.angel.ps.storage.vector.ServerRow+useDenseSerialize() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+size() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+size() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+size() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+size(),,146,8,11705,420,4,,"@Override
  protected int getRowSpace() {
    if (useDenseSerialize()) {
      return 8 * size();
    } else {
      return 12 * size();
    }
  }",False
29,clone(),Method,,,"com.tencent.angel.ps.storage.vector.ServerRow+startRead() com.tencent.angel.ps.storage.vector.ServerRow+startRead() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+ServerIntDoubleRow(int,RowType,int,int,int,IntDoubleVector) com.tencent.angel.ml.math2.vector.IntDoubleVector+clone() com.tencent.angel.ml.math2.vector.IntDoubleVector+clone() com.tencent.angel.ps.storage.vector.ServerRow+endRead() com.tencent.angel.ps.storage.vector.ServerRow+endRead()",com.tencent.angel.ps.storage.vector.ServerRow+rowId com.tencent.angel.ps.storage.vector.ServerRow+rowType com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+endColInt com.tencent.angel.ps.storage.vector.ServerRow+estElemNum com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,235,10,11855,429,1,,"@Override
  public ServerRow clone() {
    startRead();
    try {
      return new ServerIntDoubleRow(rowId, rowType, startColInt, endColInt, (int) estElemNum,
          intDoubleRow.clone());
    } finally {
      endRead();
    }
  }",False
30,adaptiveClone(),Method,,,"com.tencent.angel.ps.storage.vector.ServerRow+startRead() com.tencent.angel.ps.storage.vector.ServerRow+startRead() com.tencent.angel.ml.math2.vector.Vector+isSparse() com.tencent.angel.ml.math2.vector.Vector+isSparse() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+ServerIntDoubleRow(int,RowType,int,int,int,IntDoubleVector) com.tencent.angel.ml.math2.VFactory+sortedDoubleVector(int,int[],double[]) com.tencent.angel.ml.math2.VFactory+sortedDoubleVector(int,int[],double[]) com.tencent.angel.ml.math2.storage.IntKeyVectorStorage+getIndices() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.storage.IntKeyVectorStorage+getIndices() com.tencent.angel.ml.math2.storage.DoubleVectorStorage+getValues() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.storage.DoubleVectorStorage+getValues() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+ServerIntDoubleRow(int,RowType,int,int,int,IntDoubleVector) com.tencent.angel.ps.storage.vector.ServerRow+endRead() com.tencent.angel.ps.storage.vector.ServerRow+endRead()",com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerRow+rowId com.tencent.angel.ps.storage.vector.ServerRow+rowType com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+endColInt com.tencent.angel.ps.storage.vector.ServerRow+estElemNum com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+endColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerRow+rowId com.tencent.angel.ps.storage.vector.ServerRow+rowType com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+endColInt com.tencent.angel.ps.storage.vector.ServerRow+estElemNum com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,578,18,12094,440,1,,"@Override
  public ServerRow
adaptiveClone() {
    startRead();
    try {
      if (intDoubleRow.isSparse()) {
        return new ServerIntDoubleRow(rowId, rowType, startColInt, endColInt, (int) estElemNum,
            VFactory
                .sortedDoubleVector(endColInt - startColInt, intDoubleRow.getStorage().getIndices(),
                    intDoubleRow.getStorage().getValues()));
      } else {
        return new ServerIntDoubleRow(rowId, rowType, startColInt, endColInt, (int) estElemNum,
            intDoubleRow);
      }
    } finally {
      endRead();
    }
  }",False
31,exist(int),Method,"initAndGet(int,InitFunc)",,com.tencent.angel.ml.math2.vector.Vector+isSparse() com.tencent.angel.ml.math2.vector.Vector+isSparse() com.tencent.angel.ml.math2.storage.IntKeyVectorStorage+hasKey(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.vector.IntDoubleVector+getStorage() com.tencent.angel.ml.math2.storage.IntKeyVectorStorage+hasKey(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int) com.tencent.angel.ml.math2.vector.IntDoubleVector+get(int),com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+startColInt,345,13,12676,464,1,"/** 
 * Check the vector contains the index or not
 * @param index element index
 * @return true means exist
 */
","/**
   * Check the vector contains the index or not
   *
   * @param index element index
   * @return true means exist
   */
  public boolean exist(int index) {
    if (intDoubleRow.isSparse()) {
      return intDoubleRow.getStorage().hasKey(index - startColInt);
    } else {
      return intDoubleRow.get(index - startColInt) != 0.0;
    }
  }",False
32,"initAndGet(int,InitFunc)",Method,"indexGet(IndexType,int,ByteBuf,ByteBuf,InitFunc)","com.tencent.angel.ml.psf.columns.GetColsFunc+doGetLockFree(ServerRow[],long[],InitFunc)","com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+exist(int) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+exist(int) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+get(int) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+get(int) com.tencent.angel.ps.server.data.request.InitFunc+action() com.tencent.angel.ps.server.data.request.InitFunc+action() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+set(int,double) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+set(int,double)",,205,9,13025,472,1,,"public double initAndGet(int index, InitFunc func) {
    if (exist(index)) {
      return get(index);
    } else {
      double value = func.action();
      set(index, value);
      return value;
    }
  }",False
33,"indexGet(IndexType,int,ByteBuf,ByteBuf,InitFunc)",Method,,,"com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+initAndGet(int,InitFunc) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+initAndGet(int,InitFunc) java.io.IOException+IOException(String) java.lang.Class+getName() java.lang.Object+getClass() java.lang.Object+getClass() java.lang.Class+getName() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+get(int[]) com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+get(int[]) java.io.IOException+IOException(String) java.lang.Class+getName() java.lang.Object+getClass() java.lang.Object+getClass() java.lang.Class+getName()",,715,21,13234,483,1,,"@Override
  public void indexGet(IndexType indexType, int indexSize, ByteBuf in, ByteBuf out, InitFunc func)
      throws IOException {
    if (func != null) {
      if (indexType == IndexType.INT) {
        for (int i = 0; i < indexSize; i++) {
          out.writeDouble(initAndGet(in.readInt(), func));
        }
      } else {
        throw new IOException(this.getClass().getName() + "" only support int type index now"");
      }
    } else {
      if (indexType == IndexType.INT) {
        for (int i = 0; i < indexSize; i++) {
          out.writeDouble(get(in.readInt()));
        }
      } else {
        throw new IOException(this.getClass().getName() + "" only support int type index now"");
      }
    }
  }",False
34,setSplit(Vector),Method,,,com.tencent.angel.ps.storage.vector.ServerRow+setSplit(Vector),com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+intDoubleRow,117,5,13953,505,1,,"@Override
  public void setSplit(Vector row) {
    super.setSplit(row);
    intDoubleRow = (IntDoubleVector) row;
  }",False
35,elemUpdate(DoubleElemUpdateFunc),Method,,,com.tencent.angel.ps.storage.vector.ServerRow+isDense() com.tencent.angel.ps.storage.vector.ServerRow+isDense() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getValues() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getValues() com.tencent.angel.ps.storage.vector.func.DoubleElemUpdateFunc+update() com.tencent.angel.ps.storage.vector.func.DoubleElemUpdateFunc+update() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getIter() com.tencent.angel.ps.storage.vector.ServerIntDoubleRow+getIter() com.tencent.angel.ps.storage.vector.func.DoubleElemUpdateFunc+update() com.tencent.angel.ps.storage.vector.func.DoubleElemUpdateFunc+update(),,423,15,14074,510,1,,"public void elemUpdate(DoubleElemUpdateFunc func) {
    if (isDense()) {
      double[] values = getValues();
      for (int i = 0; i < values.length; i++) {
        values[i] = func.update();
      }
    } else {
      ObjectIterator<Int2DoubleMap.Entry> iter = getIter();
      Int2DoubleMap.Entry entry;
      while (iter.hasNext()) {
        entry = iter.next();
        entry.setValue(func.update());
      }
    }
  }",False
