index,name,type,inner invocations,external invocations,calls,visits,length,lines,start location,definition line,modifier,annotation,full text,removed
1,logger,Field,,,,,85,1,5001,89,26,,private static final Logger logger = LoggerFactory.getLogger(HotSpotLogParser.class);,False
2,model,Field,,,,,27,1,5089,91,2,,private JITDataModel model;,False
3,vmCommand,Field,,,,,32,1,5119,93,2,,private String vmCommand = null;,False
4,isTweakVMLog,Field,,,,,37,1,5154,95,2,,private boolean isTweakVMLog = false;,False
5,reading,Field,,,,,32,1,5194,97,2,,private boolean reading = false;,False
6,hasTraceClassLoad,Field,,,,,34,1,5229,99,0,,boolean hasTraceClassLoad = false;,False
7,hasParseError,Field,,,,,38,1,5266,101,2,,private boolean hasParseError = false;,False
8,errorDialogTitle,Field,,,,,32,1,5306,102,2,,private String errorDialogTitle;,False
9,errorDialogBody,Field,,,,,31,1,5340,103,2,,private String errorDialogBody;,False
10,currentMember,Field,,,,,41,1,5374,105,2,,private IMetaMember currentMember = null;,False
11,logListener,Field,HotSpotLogParser(IJITListener),,,,40,1,5418,107,2,,private IJITListener logListener = null;,False
12,errorListener,Field,"processLogFile(File,ILogParseErrorListener)",,,,52,1,5460,108,2,,private ILogParseErrorListener errorListener = null;,False
13,inHeader,Field,,,,,33,1,5515,110,2,,private boolean inHeader = false;,False
14,parseLineNumber,Field,,,,,29,1,5551,112,2,,private long parseLineNumber;,False
15,processLineNumber,Field,,,,,31,1,5582,113,2,,private long processLineNumber;,False
16,config,Field,setConfig(JITWatchConfig),,,,53,1,5616,115,2,,private JITWatchConfig config = new JITWatchConfig();,False
17,tagProcessor,Field,,,,,34,1,5672,117,2,,private TagProcessor tagProcessor;,False
18,asmProcessor,Field,,,,,39,1,5709,119,2,,private AssemblyProcessor asmProcessor;,False
19,splitLog,Field,,,,,43,1,5751,121,2,,private SplitLog splitLog = new SplitLog();,False
20,HotSpotLogParser(IJITListener),Method,,,org.adoptopenjdk.jitwatch.model.JITDataModel+JITDataModel(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener,120,6,5797,123,1,,"public HotSpotLogParser(IJITListener logListener)
	{
		model = new JITDataModel();

		this.logListener = logListener;
	}",False
21,setConfig(JITWatchConfig),Method,,org.adoptopenjdk.jitwatch.launch.LaunchHeadless+LaunchHeadless(String[]),,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+config org.adoptopenjdk.jitwatch.core.HotSpotLogParser+config,85,5,5920,131,1,,"@Override
	public void setConfig(JITWatchConfig config)
	{
		this.config = config;
	}",False
22,getConfig(),Method,,,,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+config,67,5,6008,137,1,,"@Override
	public JITWatchConfig getConfig()
	{
		return config;
	}",False
23,getSplitLog(),Method,,,,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog,65,5,6078,143,1,,"@Override
	public SplitLog getSplitLog()
	{
		return splitLog;
	}",False
24,getParsedClasspath(),Method,configureDisposableClassLoader() configureDisposableClassLoader() buildParsedClasspath(String),,org.adoptopenjdk.jitwatch.core.JITWatchConfig+getParsedClasspath() org.adoptopenjdk.jitwatch.core.JITWatchConfig+getParsedClasspath(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+config,98,5,6146,149,1,,"@Override
	public ParsedClasspath getParsedClasspath()
	{
		return config.getParsedClasspath();
	}",False
25,configureDisposableClassLoader(),Method,parseLogFile(),,"org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) org.adoptopenjdk.jitwatch.core.JITWatchConfig+getConfiguredClassLocations() org.adoptopenjdk.jitwatch.core.JITWatchConfig+getConfiguredClassLocations() org.adoptopenjdk.jitwatch.model.ParsedClasspath+getClassLocations() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getParsedClasspath() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getParsedClasspath() org.adoptopenjdk.jitwatch.model.ParsedClasspath+getClassLocations() java.util.List+size() java.util.List+size() java.util.List+size() java.util.List+size() java.util.ArrayList+ArrayList(int) java.io.File+toURI() java.io.File+File(String) java.io.File+toURI() org.adoptopenjdk.jitwatch.logger.ILogListener+handleLogEntry(String) org.adoptopenjdk.jitwatch.logger.ILogListener+handleLogEntry(String) java.net.URI+toString() java.net.URI+toString() java.util.List+add(E) java.util.List+add(E) java.net.URI+toURL() java.net.URI+toURL() org.slf4j.Logger+error(String,Object,Object) org.slf4j.Logger+error(String,Object,Object) org.adoptopenjdk.jitwatch.model.ParsedClasspath+getClassLocations() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getParsedClasspath() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getParsedClasspath() org.adoptopenjdk.jitwatch.model.ParsedClasspath+getClassLocations() java.util.List+contains(Object) java.util.List+contains(Object) java.io.File+toURI() java.io.File+File(String) java.io.File+toURI() org.adoptopenjdk.jitwatch.logger.ILogListener+handleLogEntry(String) org.adoptopenjdk.jitwatch.logger.ILogListener+handleLogEntry(String) java.net.URI+toString() java.net.URI+toString() java.util.List+add(E) java.util.List+add(E) java.net.URI+toURL() java.net.URI+toURL() org.slf4j.Logger+error(String,Object,Object) org.slf4j.Logger+error(String,Object,Object) org.adoptopenjdk.jitwatch.util.ClassUtil+initialise(List<URL>) org.adoptopenjdk.jitwatch.util.ClassUtil+initialise(List<URL>)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+config org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger,1328,52,6247,154,2,,"private void configureDisposableClassLoader()
	{
		if (DEBUG_LOGGING)
		{
			logger.debug(""configureDisposableClassLoader()"");
		}

		List<String> configuredClassLocations = config.getConfiguredClassLocations();
		List<String> parsedClassLocations = getParsedClasspath().getClassLocations();

		int configuredClasspathCount = configuredClassLocations.size();
		int parsedClasspathCount = parsedClassLocations.size();

		List<URL> classpathURLList = new ArrayList<URL>(configuredClasspathCount + parsedClasspathCount);

		for (String filename : configuredClassLocations)
		{
			URI uri = new File(filename).toURI();

			logListener.handleLogEntry(""Adding configured classpath: "" + uri.toString());

			try
			{
				classpathURLList.add(uri.toURL());
			}
			catch (MalformedURLException e)
			{
				logger.error(""Could not create URL: {} "", uri, e);
			}
		}

		for (String filename : getParsedClasspath().getClassLocations())
		{
			if (!configuredClassLocations.contains(filename))
			{
				URI uri = new File(filename).toURI();

				logListener.handleLogEntry(""Adding parsed classpath: "" + uri.toString());

				try
				{
					classpathURLList.add(uri.toURL());
				}
				catch (MalformedURLException e)
				{
					logger.error(""Could not create URL: {} "", uri, e);
				}
			}
		}

		ClassUtil.initialise(classpathURLList);
	}",False
26,logEvent(JITEvent),Method,"handleMember(String,Map<String,String>,EventType,Tag) handleMember(String,Map<String,String>,EventType,Tag)",,org.adoptopenjdk.jitwatch.core.IJITListener+handleJITEvent(JITEvent) org.adoptopenjdk.jitwatch.core.IJITListener+handleJITEvent(JITEvent),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener,116,7,7578,207,2,,"private void logEvent(JITEvent event)
	{
		if (logListener != null)
		{
			logListener.handleJITEvent(event);
		}
	}",False
27,logError(String),Method,findMemberWithSignature(String) handleTagNMethod(Tag) handleTagNMethod(Tag) addToClassModel(String) addToClassModel(String) addToClassModel(String) addToClassModel(String),,org.adoptopenjdk.jitwatch.logger.ILogListener+handleErrorEntry(String) org.adoptopenjdk.jitwatch.logger.ILogListener+handleErrorEntry(String),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener,116,7,7697,215,2,,"private void logError(String entry)
	{
		if (logListener != null)
		{
			logListener.handleErrorEntry(entry);
		}
	}",False
28,getModel(),Method,reset(),org.adoptopenjdk.jitwatch.launch.LaunchHeadless+handleReadComplete() org.adoptopenjdk.jitwatch.launch.LaunchHeadless+handleReadComplete() org.adoptopenjdk.jitwatch.launch.LaunchHeadless+handleReadComplete() org.adoptopenjdk.jitwatch.launch.LaunchHeadless+handleReadComplete(),,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model,63,5,7816,224,1,,"@Override
	public JITDataModel getModel()
	{
		return model;
	}",False
29,reset(),Method,"processLogFile(File,ILogParseErrorListener)",,org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) org.adoptopenjdk.jitwatch.util.ClassUtil+clear() org.adoptopenjdk.jitwatch.util.ClassUtil+clear() org.adoptopenjdk.jitwatch.model.JITDataModel+reset() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getModel() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getModel() org.adoptopenjdk.jitwatch.model.JITDataModel+reset() org.adoptopenjdk.jitwatch.model.SplitLog+clear() org.adoptopenjdk.jitwatch.model.SplitLog+clear() org.adoptopenjdk.jitwatch.core.TagProcessor+TagProcessor() org.adoptopenjdk.jitwatch.core.AssemblyProcessor+AssemblyProcessor(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasTraceClassLoad org.adoptopenjdk.jitwatch.core.HotSpotLogParser+isTweakVMLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasParseError org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogTitle org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogBody org.adoptopenjdk.jitwatch.core.HotSpotLogParser+reading org.adoptopenjdk.jitwatch.core.HotSpotLogParser+inHeader org.adoptopenjdk.jitwatch.core.HotSpotLogParser+currentMember org.adoptopenjdk.jitwatch.core.HotSpotLogParser+vmCommand org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseLineNumber org.adoptopenjdk.jitwatch.core.HotSpotLogParser+processLineNumber org.adoptopenjdk.jitwatch.core.HotSpotLogParser+tagProcessor org.adoptopenjdk.jitwatch.core.HotSpotLogParser+asmProcessor,527,37,7882,230,1,,"@Override
	public void reset()
	{
		if (DEBUG_LOGGING)
		{
			logger.debug(""HotSpotLogParser.reset()"");
		}

		ClassUtil.clear();

		getModel().reset();

		splitLog.clear();

		hasTraceClassLoad = false;

		isTweakVMLog = false;

		hasParseError = false;
		errorDialogTitle = null;
		errorDialogBody = null;

		reading = false;

		inHeader = false;

		currentMember = null;

		vmCommand = null;

		parseLineNumber = 0;
		processLineNumber = 0;

		tagProcessor = new TagProcessor();

		asmProcessor = new AssemblyProcessor();
	}",False
30,"processLogFile(File,ILogParseErrorListener)",Method,,org.adoptopenjdk.jitwatch.launch.LaunchHeadless+LaunchHeadless(String[]),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+reset() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+reset() org.adoptopenjdk.jitwatch.core.IJITListener+handleReadStart() org.adoptopenjdk.jitwatch.core.IJITListener+handleReadStart() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLogFile(File) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLogFile(File) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logSplitStats() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logSplitStats() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseLogFile() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseLogFile(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorListener,319,19,8412,268,1,,"@Override
	public void processLogFile(File hotspotLog, ILogParseErrorListener errorListener)
	{
		reset();

		// tell listener to reset any data
		logListener.handleReadStart();
		
		this.errorListener = errorListener;

		splitLogFile(hotspotLog);

		if (DEBUG_LOGGING)
		{
			logSplitStats();
		}

		parseLogFile();
	}",False
31,discardParsedLogs(),Method,,,org.adoptopenjdk.jitwatch.model.SplitLog+clear() org.adoptopenjdk.jitwatch.model.SplitLog+clear() org.adoptopenjdk.jitwatch.model.SplitLog+SplitLog(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog,97,6,8734,288,1,,"@Override
	public void discardParsedLogs()
	{
		splitLog.clear();
		splitLog = new SplitLog();
	}",False
32,parseLogFile(),Method,"processLogFile(File,ILogParseErrorListener)",,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseHeaderLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseHeaderLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildParsedClasspath() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildParsedClasspath() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+configureDisposableClassLoader() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+configureDisposableClassLoader() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildClassModel() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildClassModel() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseLogCompilationLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseLogCompilationLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseAssemblyLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseAssemblyLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+checkIfErrorDialogNeeded() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+checkIfErrorDialogNeeded() org.adoptopenjdk.jitwatch.core.IJITListener+handleReadComplete() org.adoptopenjdk.jitwatch.core.IJITListener+handleReadComplete(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logListener,265,18,8834,294,2,,"private void parseLogFile()
	{
		parseHeaderLines();

		buildParsedClasspath();

		configureDisposableClassLoader();

		buildClassModel();

		parseLogCompilationLines();

		parseAssemblyLines();

		checkIfErrorDialogNeeded();

		logListener.handleReadComplete();
	}",True
33,checkIfErrorDialogNeeded(),Method,parseLogFile(),,"org.adoptopenjdk.jitwatch.core.ILogParseErrorListener+handleError(String,String) org.adoptopenjdk.jitwatch.core.ILogParseErrorListener+handleError(String,String)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasParseError org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasTraceClassLoad org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasParseError org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogTitle org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogBody org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasParseError org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorListener org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogTitle org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogBody,450,18,9102,313,2,,"private void checkIfErrorDialogNeeded()
	{
		if (!hasParseError)
		{
			if (!hasTraceClassLoad)
			{
				hasParseError = true;

				errorDialogTitle = ""Missing VM Switch -XX:+TraceClassLoading"";
				errorDialogBody = ""JITWatch requires the -XX:+TraceClassLoading VM switch to be used.\nPlease recreate your log file with this switch enabled."";
			}
		}

		if (hasParseError)
		{
			errorListener.handleError(errorDialogTitle, errorDialogBody);
		}
	}",True
34,parseHeaderLines(),Method,parseLogFile(),,"org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) org.adoptopenjdk.jitwatch.model.SplitLog+getHeaderLines() org.adoptopenjdk.jitwatch.model.SplitLog+getHeaderLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+skipLine(String,Set<String>) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+skipLine(String,Set<String>) org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.core.TagProcessor+processLine(String) org.adoptopenjdk.jitwatch.core.TagProcessor+processLine(String) org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLineNumber() org.adoptopenjdk.jitwatch.model.NumberedLine+getLineNumber() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTag(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTag(Tag)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+tagProcessor org.adoptopenjdk.jitwatch.core.HotSpotLogParser+processLineNumber,420,22,9555,332,2,,"private void parseHeaderLines()
	{
		if (DEBUG_LOGGING)
		{
			logger.debug(""parseHeaderLines()"");
		}

		for (NumberedLine numberedLine : splitLog.getHeaderLines())
		{
			if (!skipLine(numberedLine.getLine(), SKIP_HEADER_TAGS))
			{
				Tag tag = tagProcessor.processLine(numberedLine.getLine());

				processLineNumber = numberedLine.getLineNumber();

				if (tag != null)
				{
					handleTag(tag);
				}
			}
		}
	}",True
35,parseLogCompilationLines(),Method,parseLogFile(),,"org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) org.adoptopenjdk.jitwatch.model.SplitLog+getLogCompilationLines() org.adoptopenjdk.jitwatch.model.SplitLog+getLogCompilationLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+skipLine(String,Set<String>) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+skipLine(String,Set<String>) org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.core.TagProcessor+processLine(String) org.adoptopenjdk.jitwatch.core.TagProcessor+processLine(String) org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLineNumber() org.adoptopenjdk.jitwatch.model.NumberedLine+getLineNumber() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTag(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTag(Tag)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+tagProcessor org.adoptopenjdk.jitwatch.core.HotSpotLogParser+processLineNumber,442,22,9978,355,2,,"private void parseLogCompilationLines()
	{
		if (DEBUG_LOGGING)
		{
			logger.debug(""parseLogCompilationLines()"");
		}

		for (NumberedLine numberedLine : splitLog.getLogCompilationLines())
		{
			if (!skipLine(numberedLine.getLine(), SKIP_BODY_TAGS))
			{
				Tag tag = tagProcessor.processLine(numberedLine.getLine());

				processLineNumber = numberedLine.getLineNumber();

				if (tag != null)
				{
					handleTag(tag);
				}
			}
		}
	}",True
36,parseAssemblyLines(),Method,parseLogFile(),,org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) org.adoptopenjdk.jitwatch.model.SplitLog+getAssemblyLines() org.adoptopenjdk.jitwatch.model.SplitLog+getAssemblyLines() org.adoptopenjdk.jitwatch.model.NumberedLine+getLineNumber() org.adoptopenjdk.jitwatch.model.NumberedLine+getLineNumber() org.adoptopenjdk.jitwatch.core.AssemblyProcessor+handleLine(String) org.adoptopenjdk.jitwatch.core.AssemblyProcessor+handleLine(String) org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.core.AssemblyProcessor+complete() org.adoptopenjdk.jitwatch.core.AssemblyProcessor+complete() org.adoptopenjdk.jitwatch.core.AssemblyProcessor+attachAssemblyToMembers(PackageManager) org.adoptopenjdk.jitwatch.core.AssemblyProcessor+attachAssemblyToMembers(PackageManager) org.adoptopenjdk.jitwatch.model.JITDataModel+getPackageManager() org.adoptopenjdk.jitwatch.model.JITDataModel+getPackageManager() org.adoptopenjdk.jitwatch.core.AssemblyProcessor+clear() org.adoptopenjdk.jitwatch.core.AssemblyProcessor+clear(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+processLineNumber org.adoptopenjdk.jitwatch.core.HotSpotLogParser+asmProcessor org.adoptopenjdk.jitwatch.core.HotSpotLogParser+asmProcessor org.adoptopenjdk.jitwatch.core.HotSpotLogParser+asmProcessor org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+asmProcessor,409,20,10423,378,2,,"private void parseAssemblyLines()
	{
		if (DEBUG_LOGGING)
		{
			logger.debug(""parseAssemblyLines()"");
		}

		for (NumberedLine numberedLine : splitLog.getAssemblyLines())
		{
			processLineNumber = numberedLine.getLineNumber();

			asmProcessor.handleLine(numberedLine.getLine());
		}

		asmProcessor.complete();

		asmProcessor.attachAssemblyToMembers(model.getPackageManager());

		asmProcessor.clear();
	}",True
37,splitLogFile(File),Method,"processLogFile(File,ILogParseErrorListener)",,"java.io.BufferedReader+BufferedReader(Reader,int) java.io.FileReader+FileReader(File) java.io.BufferedReader+readLine() java.io.BufferedReader+readLine() java.lang.String+trim() java.lang.String+trim() java.lang.String+length() java.lang.String+length() java.lang.String+charAt(int) java.lang.String+charAt(int) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleLogLine(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleLogLine(String) org.slf4j.Logger+error(String,Object,Object) org.slf4j.Logger+error(String,Object,Object) java.io.BufferedReader+readLine() java.io.BufferedReader+readLine() org.slf4j.Logger+error(String,Throwable) org.slf4j.Logger+error(String,Throwable) java.io.BufferedReader+close() java.io.BufferedReader+close() org.slf4j.Logger+error(String) org.slf4j.Logger+error(String)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+reading org.adoptopenjdk.jitwatch.core.HotSpotLogParser+reading org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger,1028,57,10835,399,2,,"private void splitLogFile(File hotspotLog)
	{
		reading = true;

		BufferedReader reader = null;

		try
		{
			reader = new BufferedReader(new FileReader(hotspotLog), 65536);

			String currentLine = reader.readLine();

			while (reading && currentLine != null)
			{
				try
				{
					String trimmedLine = currentLine.trim();

					if (trimmedLine.length() > 0)
					{
						char firstChar = trimmedLine.charAt(0);

						if (firstChar == C_OPEN_ANGLE || firstChar == C_OPEN_SQUARE_BRACKET || firstChar == C_AT)
						{
							currentLine = trimmedLine;
						}

						handleLogLine(currentLine);
					}
				}
				catch (Exception ex)
				{
					logger.error(""Exception handling: '{}'"", currentLine, ex);
				}

				currentLine = reader.readLine();
			}
		}
		catch (IOException ioe)
		{
			logger.error(""Exception while splitting log file"", ioe);
		}
		finally
		{
			if (reader != null)
			{
				try
				{
					reader.close();
				}
				catch (Exception e)
				{
					logger.error(""Could not close reader"");
				}
			}
		}
	}",True
38,logSplitStats(),Method,"processLogFile(File,ILogParseErrorListener)",,"org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object) java.util.List+size() org.adoptopenjdk.jitwatch.model.SplitLog+getHeaderLines() org.adoptopenjdk.jitwatch.model.SplitLog+getHeaderLines() java.util.List+size() org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object) java.util.List+size() org.adoptopenjdk.jitwatch.model.SplitLog+getClassLoaderLines() org.adoptopenjdk.jitwatch.model.SplitLog+getClassLoaderLines() java.util.List+size() org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object) java.util.List+size() org.adoptopenjdk.jitwatch.model.SplitLog+getLogCompilationLines() org.adoptopenjdk.jitwatch.model.SplitLog+getLogCompilationLines() java.util.List+size() org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object) java.util.List+size() org.adoptopenjdk.jitwatch.model.SplitLog+getAssemblyLines() org.adoptopenjdk.jitwatch.model.SplitLog+getAssemblyLines() java.util.List+size()",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog,361,7,11866,457,2,,"private void logSplitStats()
	{
		logger.debug(""Header lines        : {}"", splitLog.getHeaderLines().size());
		logger.debug(""ClassLoader lines   : {}"", splitLog.getClassLoaderLines().size());
		logger.debug(""LogCompilation lines: {}"", splitLog.getLogCompilationLines().size());
		logger.debug(""Assembly lines      : {}"", splitLog.getAssemblyLines().size());
	}",False
39,stopParsing(),Method,,,,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+reading,61,5,12230,466,1,,"@Override
	public void stopParsing()
	{
		reading = false;
	}",False
40,"skipLine(String,Set<String>)",Method,parseHeaderLines() parseLogCompilationLines(),,java.lang.String+startsWith(String) java.lang.String+startsWith(String),,229,15,12294,471,2,,"private boolean skipLine(final String line, final Set<String> skipSet)
	{
		boolean isSkip = false;

		for (String skip : skipSet)
		{
			if (line.startsWith(skip))
			{
				isSkip = true;
				break;
			}
		}

		return isSkip;
	}",True
41,handleLogLine(String),Method,splitLogFile(File) handleLogLine(String),,"org.adoptopenjdk.jitwatch.model.NumberedLine+NumberedLine(long,String) java.lang.String+startsWith(String) java.lang.String+startsWith(String) org.adoptopenjdk.jitwatch.model.SplitLog+addHeaderLine(NumberedLine) org.adoptopenjdk.jitwatch.model.SplitLog+addHeaderLine(NumberedLine) java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+startsWith(String) org.adoptopenjdk.jitwatch.model.SplitLog+addLogCompilationLine(NumberedLine) org.adoptopenjdk.jitwatch.model.SplitLog+addLogCompilationLine(NumberedLine) java.lang.String+startsWith(String) java.lang.String+startsWith(String) org.adoptopenjdk.jitwatch.model.SplitLog+addClassLoaderLine(NumberedLine) org.adoptopenjdk.jitwatch.model.SplitLog+addClassLoaderLine(NumberedLine) java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+indexOf(String) java.lang.String+indexOf(String) org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.lang.String+substring(int) java.lang.String+substring(int) org.adoptopenjdk.jitwatch.model.NumberedLine+setLine(String) org.adoptopenjdk.jitwatch.model.NumberedLine+setLine(String) org.adoptopenjdk.jitwatch.model.SplitLog+addAssemblyLine(NumberedLine) org.adoptopenjdk.jitwatch.model.SplitLog+addAssemblyLine(NumberedLine) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleLogLine(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleLogLine(String) org.adoptopenjdk.jitwatch.model.SplitLog+addAssemblyLine(NumberedLine) org.adoptopenjdk.jitwatch.model.SplitLog+addAssemblyLine(NumberedLine)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+parseLineNumber org.adoptopenjdk.jitwatch.core.HotSpotLogParser+inHeader org.adoptopenjdk.jitwatch.core.HotSpotLogParser+inHeader org.adoptopenjdk.jitwatch.core.HotSpotLogParser+inHeader org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog,1817,75,12526,487,2,,"private void handleLogLine(final String inCurrentLine)
	{
		String currentLine = inCurrentLine;

		NumberedLine numberedLine = new NumberedLine(parseLineNumber++, currentLine);

		if (TAG_TTY.equals(currentLine))
		{
			inHeader = false;
			return;
		}
		else if (currentLine.startsWith(TAG_XML))
		{
			inHeader = true;
		}

		if (inHeader)
		{
			// HotSpot log header XML can have text nodes so consume all lines
			splitLog.addHeaderLine(numberedLine);
		}
		else
		{
			if (currentLine.startsWith(TAG_OPEN_CDATA) || currentLine.startsWith(TAG_CLOSE_CDATA)
					|| currentLine.startsWith(TAG_OPEN_CLOSE_CDATA))
			{
				// ignore, TagProcessor will recognise from <fragment> tag
			}
			else if (currentLine.startsWith(S_OPEN_ANGLE))
			{
				// After the header, XML nodes do not have text nodes
				splitLog.addLogCompilationLine(numberedLine);
			}
			else if (currentLine.startsWith(LOADED))
			{
				splitLog.addClassLoaderLine(numberedLine);
			}
			else if (currentLine.startsWith(S_AT))
			{
				// possible PrintCompilation was enabled as well as
				// LogCompilation?
				// jmh does this with perf annotations
				// Ignore this line
			}
			else
			{
				// need to cope with nmethod appearing on same line as last hlt
				// 0x0000 hlt <nmethod compile_id= ....

				int indexNMethod = currentLine.indexOf(S_OPEN_ANGLE + TAG_NMETHOD);

				if (indexNMethod != -1)
				{
					if (DEBUG_LOGGING)
					{
						logger.debug(""detected nmethod tag mangled with assembly"");
					}

					String assembly = currentLine.substring(0, indexNMethod);

					String remainder = currentLine.substring(indexNMethod);

					numberedLine.setLine(assembly);

					splitLog.addAssemblyLine(numberedLine);

					handleLogLine(remainder);
				}
				else
				{
					splitLog.addAssemblyLine(numberedLine);
				}
			}
		}
	}",True
42,handleTag(Tag),Method,parseHeaderLines() parseLogCompilationLines(),,"org.adoptopenjdk.jitwatch.model.Tag+getName() org.adoptopenjdk.jitwatch.model.Tag+getName() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleVmVersion(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleVmVersion(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagQueued(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagQueued(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagNMethod(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagNMethod(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagTask(Task) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagTask(Task) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEvent(CodeCacheEventType,Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEvent(CodeCacheEventType,Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEvent(CodeCacheEventType,Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEvent(CodeCacheEventType,Tag) org.adoptopenjdk.jitwatch.model.JITDataModel+setEndOfLog(Tag) org.adoptopenjdk.jitwatch.model.JITDataModel+setEndOfLog(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleStartCompileThread(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleStartCompileThread(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagVmArguments(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTagVmArguments(Tag)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model,754,46,14346,563,2,,"private void handleTag(Tag tag)
	{
		String tagName = tag.getName();

		switch (tagName)
		{
		case TAG_VM_VERSION:
			handleVmVersion(tag);
			break;

		case TAG_TASK_QUEUED:
			handleTagQueued(tag);
			break;

		case TAG_NMETHOD:
			handleTagNMethod(tag);
			break;

		case TAG_TASK:
			handleTagTask((Task)tag);
			break;

		case TAG_SWEEPER:
			storeCodeCacheEvent(CodeCacheEventType.SWEEPER, tag);
			break;
			
		case TAG_CODE_CACHE_FULL:
			storeCodeCacheEvent(CodeCacheEventType.CACHE_FULL, tag);
			break;

		case TAG_HOTSPOT_LOG_DONE:
			model.setEndOfLog(tag);
			break;

		case TAG_START_COMPILE_THREAD:
			handleStartCompileThread(tag);
			break;

		case TAG_VM_ARGUMENTS:
			handleTagVmArguments(tag);
			break;

		default:
			break;
		}
	}",True
43,handleVmVersion(Tag),Method,handleTag(Tag),,org.adoptopenjdk.jitwatch.model.Tag+getNamedChildren(String) org.adoptopenjdk.jitwatch.model.Tag+getNamedChildren(String) org.adoptopenjdk.jitwatch.model.JITDataModel+setVmVersionRelease(String) org.adoptopenjdk.jitwatch.model.JITDataModel+setVmVersionRelease(String) org.adoptopenjdk.jitwatch.model.Tag+getNamedChildren(String) org.adoptopenjdk.jitwatch.model.Tag+getNamedChildren(String) java.util.List+size() java.util.List+size() org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+isTweakVMLog org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger,359,18,15103,610,2,,"private void handleVmVersion(Tag tag)
	{
		String release = tag.getNamedChildren(TAG_RELEASE).get(0).getTextContent();

		model.setVmVersionRelease(release);

		List<Tag> tweakVMTags = tag.getNamedChildren(TAG_TWEAK_VM);

		if (tweakVMTags.size() == 1)
		{
			isTweakVMLog = true;

			if (DEBUG_LOGGING)
			{
				logger.debug(""TweakVM detected!"");
			}
		}
	}",True
44,handleTagVmArguments(Tag),Method,handleTag(Tag),,"org.adoptopenjdk.jitwatch.model.Tag+getNamedChildren(String) org.adoptopenjdk.jitwatch.model.Tag+getNamedChildren(String) java.util.List+size() java.util.List+size() org.adoptopenjdk.jitwatch.model.Tag+getTextContent() java.util.List+get(int) java.util.List+get(int) org.adoptopenjdk.jitwatch.model.Tag+getTextContent() org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+vmCommand org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+vmCommand,301,14,15465,629,2,,"private void handleTagVmArguments(Tag tag)
	{
		List<Tag> tagCommandChildren = tag.getNamedChildren(TAG_COMMAND);

		if (tagCommandChildren.size() > 0)
		{
			vmCommand = tagCommandChildren.get(0).getTextContent();

			if (DEBUG_LOGGING)
			{
				logger.debug(""VM Command: {}"", vmCommand);
			}
		}
	}",True
45,handleStartCompileThread(Tag),Method,handleTag(Tag),,org.adoptopenjdk.jitwatch.model.JITStats+incCompilerThreads() org.adoptopenjdk.jitwatch.model.JITDataModel+getJITStats() org.adoptopenjdk.jitwatch.model.JITDataModel+getJITStats() org.adoptopenjdk.jitwatch.model.JITStats+incCompilerThreads(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model,96,4,15769,644,2,,"private void handleStartCompileThread(Tag tag)
	{
		model.getJITStats().incCompilerThreads();
	}",True
46,findMemberWithSignature(String),Method,"handleMember(String,Map<String,String>,EventType,Tag)",,"org.adoptopenjdk.jitwatch.util.ParseUtil+findMemberWithSignature(IReadOnlyJITDataModel,String) org.adoptopenjdk.jitwatch.util.ParseUtil+findMemberWithSignature(IReadOnlyJITDataModel,String) org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object) org.slf4j.Logger+debug(String,Object) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage()",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+processLineNumber,498,21,15868,649,1,,"public IMetaMember findMemberWithSignature(String logSignature)
	{
		IMetaMember result = null;

		try
		{
			result = ParseUtil.findMemberWithSignature(model, logSignature);
		}
		catch (LogParseException ex)
		{
			if (DEBUG_LOGGING)
			{
				logger.debug(""Could not parse signature: {}"", logSignature);
				logger.debug(""Exception was {}"", ex.getMessage());
			}

			logError(""Could not parse line "" + processLineNumber + "" : "" + logSignature + "" : "" + ex.getMessage());
		}

		return result;
	}",False
47,handleTagQueued(Tag),Method,handleTag(Tag),,"org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType)",,85,4,16369,671,2,,"private void handleTagQueued(Tag tag)
	{
		handleMethodLine(tag, EventType.QUEUE);
	}",False
48,renameCompilationCompletedTimestamp(Tag),Method,handleTagNMethod(Tag),,"java.util.Map+get(Object) org.adoptopenjdk.jitwatch.model.Tag+getAttributes() org.adoptopenjdk.jitwatch.model.Tag+getAttributes() java.util.Map+get(Object) java.util.Map+remove(Object) org.adoptopenjdk.jitwatch.model.Tag+getAttributes() org.adoptopenjdk.jitwatch.model.Tag+getAttributes() java.util.Map+remove(Object) java.util.Map+put(K,V) org.adoptopenjdk.jitwatch.model.Tag+getAttributes() org.adoptopenjdk.jitwatch.model.Tag+getAttributes() java.util.Map+put(K,V)",,307,10,16457,676,2,,"private void renameCompilationCompletedTimestamp(Tag tag)
	{
		String compilationCompletedStamp = tag.getAttributes().get(ATTR_STAMP);

		if (compilationCompletedStamp != null)
		{
			tag.getAttributes().remove(ATTR_STAMP);
			tag.getAttributes().put(ATTR_STAMP_COMPLETED, compilationCompletedStamp);
		}
	}",False
49,handleTagNMethod(Tag),Method,handleTag(Tag),,"org.adoptopenjdk.jitwatch.model.Tag+getAttributes() org.adoptopenjdk.jitwatch.model.Tag+getAttributes() java.util.Map+get(Object) java.util.Map+get(Object) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+renameCompilationCompletedTimestamp(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+renameCompilationCompletedTimestamp(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) java.util.Map+get(Object) java.util.Map+get(Object) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String)",,787,37,16767,687,2,,"private void handleTagNMethod(Tag tag)
	{
		Map<String, String> tagAttributes = tag.getAttributes();

		String attrCompiler = tagAttributes.get(ATTR_COMPILER);

		renameCompilationCompletedTimestamp(tag);

		if (attrCompiler != null)
		{
			if (C1.equals(attrCompiler))
			{
				handleMethodLine(tag, EventType.NMETHOD_C1);
			}
			else if (C2.equals(attrCompiler))
			{
				handleMethodLine(tag, EventType.NMETHOD_C2);
			}
			else
			{
				logError(""Unexpected Compiler attribute: "" + attrCompiler);
			}
		}
		else
		{
			String attrCompileKind = tagAttributes.get(ATTR_COMPILE_KIND);

			if (attrCompileKind != null && C2N.equals(attrCompileKind))
			{
				handleMethodLine(tag, EventType.NMETHOD_C2N);
			}
			else
			{
				logError(""Missing Compiler attribute "" + tag);
			}
		}
	}",False
50,handleTagTask(Task),Method,handleTag(Tag),,"org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMethodLine(Tag,EventType) org.adoptopenjdk.jitwatch.model.Tag+getFirstNamedChild(String) org.adoptopenjdk.jitwatch.model.Tag+getFirstNamedChild(String) org.adoptopenjdk.jitwatch.model.Tag+getFirstNamedChild(String) org.adoptopenjdk.jitwatch.model.Tag+getFirstNamedChild(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTaskDone(Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleTaskDone(Tag) org.adoptopenjdk.jitwatch.util.ParseUtil+parseStampFromTag(Tag) org.adoptopenjdk.jitwatch.util.ParseUtil+parseStampFromTag(Tag) org.adoptopenjdk.jitwatch.util.ParseUtil+parseLongAttributeFromTag(Tag,String) org.adoptopenjdk.jitwatch.util.ParseUtil+parseLongAttributeFromTag(Tag,String) org.adoptopenjdk.jitwatch.util.ParseUtil+parseLongAttributeFromTag(Tag,String) org.adoptopenjdk.jitwatch.util.ParseUtil+parseLongAttributeFromTag(Tag,String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEventDetail(CodeCacheEventType,long,long,long) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEventDetail(CodeCacheEventType,long,long,long) org.slf4j.Logger+error(String,Object,Object) org.slf4j.Logger+error(String,Object,Object)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger,750,25,17557,725,2,,"private void handleTagTask(Task task)
	{
		handleMethodLine(task, EventType.TASK);

		Tag tagCodeCache = task.getFirstNamedChild(TAG_CODE_CACHE);
		Tag tagTaskDone = task.getFirstNamedChild(TAG_TASK_DONE);
				
		if (tagTaskDone != null)
		{
			handleTaskDone(tagTaskDone);
			
			if (tagCodeCache != null)
			{
				long stamp = ParseUtil.parseStampFromTag(tagTaskDone);
				long freeCodeCache = ParseUtil.parseLongAttributeFromTag(tagCodeCache, ATTR_FREE_CODE_CACHE);
				long nativeCodeSize = ParseUtil.parseLongAttributeFromTag(tagTaskDone, ATTR_NMSIZE);
				
				storeCodeCacheEventDetail(CodeCacheEventType.COMPILATION, stamp, nativeCodeSize, freeCodeCache);
			}
		}
		else
		{
			logger.error(""{} not found in {}"", TAG_TASK_DONE, task);
		}
	}",False
51,"storeCodeCacheEvent(CodeCacheEventType,Tag)",Method,handleTag(Tag) handleTag(Tag),,"org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEventDetail(CodeCacheEventType,long,long,long) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+storeCodeCacheEventDetail(CodeCacheEventType,long,long,long) org.adoptopenjdk.jitwatch.util.ParseUtil+parseStampFromTag(Tag) org.adoptopenjdk.jitwatch.util.ParseUtil+parseStampFromTag(Tag)",,157,4,18310,751,2,,"private void storeCodeCacheEvent(CodeCacheEventType eventType, Tag tag)
	{
		storeCodeCacheEventDetail(eventType, ParseUtil.parseStampFromTag(tag), 0, 0);
	}",False
52,"storeCodeCacheEventDetail(CodeCacheEventType,long,long,long)",Method,"handleTagTask(Task) storeCodeCacheEvent(CodeCacheEventType,Tag)",,"org.adoptopenjdk.jitwatch.model.CodeCacheEvent+CodeCacheEvent(CodeCacheEventType,long,long,long) org.adoptopenjdk.jitwatch.model.JITDataModel+addCodeCacheEvent(CodeCacheEvent) org.adoptopenjdk.jitwatch.model.JITDataModel+addCodeCacheEvent(CodeCacheEvent)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model,274,6,18470,756,2,,"private void storeCodeCacheEventDetail(CodeCacheEventType eventType, long stamp, long nativeCodeSize, long freeCodeCache)
	{
		CodeCacheEvent codeCacheEvent = new CodeCacheEvent(eventType, stamp, nativeCodeSize, freeCodeCache);

		model.addCodeCacheEvent(codeCacheEvent);
	}",False
53,"handleMethodLine(Tag,EventType)",Method,handleTagQueued(Tag) handleTagNMethod(Tag) handleTagNMethod(Tag) handleTagNMethod(Tag) handleTagTask(Task),,"org.adoptopenjdk.jitwatch.model.Tag+getAttributes() org.adoptopenjdk.jitwatch.model.Tag+getAttributes() java.util.Map+get(Object) java.util.Map+get(Object) java.lang.String+replace(CharSequence,CharSequence) java.lang.String+replace(CharSequence,CharSequence) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMember(String,Map<String,String>,EventType,Tag) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+handleMember(String,Map<String,String>,EventType,Tag)",,303,13,18747,763,2,,"private void handleMethodLine(Tag tag, EventType eventType)
	{
		Map<String, String> attrs = tag.getAttributes();

		String attrMethod = attrs.get(ATTR_METHOD);

		if (attrMethod != null)
		{
			attrMethod = attrMethod.replace(S_SLASH, S_DOT);

			handleMember(attrMethod, attrs, eventType, tag);
		}
	}",False
54,"handleMember(String,Map<String,String>,EventType,Tag)",Method,"handleMethodLine(Tag,EventType)",,"org.adoptopenjdk.jitwatch.core.HotSpotLogParser+findMemberWithSignature(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+findMemberWithSignature(String) org.adoptopenjdk.jitwatch.util.ParseUtil+getStamp(Map<String,String>) org.adoptopenjdk.jitwatch.util.ParseUtil+getStamp(Map<String,String>) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagTaskQueued(Tag) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagTaskQueued(Tag) org.adoptopenjdk.jitwatch.model.JITEvent+JITEvent(long,EventType,IMetaMember) org.adoptopenjdk.jitwatch.model.JITDataModel+addEvent(JITEvent) org.adoptopenjdk.jitwatch.model.JITDataModel+addEvent(JITEvent) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logEvent(JITEvent) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logEvent(JITEvent) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagNMethod(Tag) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagNMethod(Tag) org.adoptopenjdk.jitwatch.model.MetaClass+incCompiledMethodCount() org.adoptopenjdk.jitwatch.model.IMetaMember+getMetaClass() org.adoptopenjdk.jitwatch.model.IMetaMember+getMetaClass() org.adoptopenjdk.jitwatch.model.MetaClass+incCompiledMethodCount() org.adoptopenjdk.jitwatch.model.JITDataModel+updateStats(IMetaMember,Map<String,String>) org.adoptopenjdk.jitwatch.model.JITDataModel+updateStats(IMetaMember,Map<String,String>) org.adoptopenjdk.jitwatch.model.JITEvent+JITEvent(long,EventType,IMetaMember) org.adoptopenjdk.jitwatch.model.JITDataModel+addEvent(JITEvent) org.adoptopenjdk.jitwatch.model.JITDataModel+addEvent(JITEvent) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logEvent(JITEvent) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logEvent(JITEvent) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagTask(Task) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagTask(Task)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+currentMember,935,40,19053,777,2,,"private void handleMember(String signature, Map<String, String> attrs, EventType type, Tag tag)
	{
		IMetaMember metaMember = findMemberWithSignature(signature);

		long stampTime = ParseUtil.getStamp(attrs);

		if (metaMember != null)
		{
			switch (type)
			{
			case QUEUE:
			{
				metaMember.setTagTaskQueued(tag);
				JITEvent queuedEvent = new JITEvent(stampTime, type, metaMember);
				model.addEvent(queuedEvent);
				logEvent(queuedEvent);
			}
				break;
			case NMETHOD_C1:
			case NMETHOD_C2:
			case NMETHOD_C2N:
			{
				metaMember.setTagNMethod(tag);
				metaMember.getMetaClass().incCompiledMethodCount();
				model.updateStats(metaMember, attrs);

				JITEvent compiledEvent = new JITEvent(stampTime, type, metaMember);
				model.addEvent(compiledEvent);
				logEvent(compiledEvent);
			}
				break;
			case TASK:
			{
				metaMember.setTagTask((Task) tag);
				currentMember = metaMember;
			}
				break;
			}
		}
	}",False
55,handleTaskDone(Tag),Method,handleTagTask(Task),,"org.adoptopenjdk.jitwatch.model.Tag+getAttributes() org.adoptopenjdk.jitwatch.model.Tag+getAttributes() java.util.Map+containsKey(Object) java.util.Map+containsKey(Object) java.lang.Long+parseLong(String) java.lang.Long+parseLong(String) java.util.Map+get(Object) java.util.Map+get(Object) org.adoptopenjdk.jitwatch.model.JITDataModel+addNativeBytes(long) org.adoptopenjdk.jitwatch.model.JITDataModel+addNativeBytes(long) org.adoptopenjdk.jitwatch.model.Tag+getParent() org.adoptopenjdk.jitwatch.model.Tag+getParent() org.adoptopenjdk.jitwatch.model.Tag+getName() org.adoptopenjdk.jitwatch.model.Tag+getName() java.util.Map+get(Object) org.adoptopenjdk.jitwatch.model.Tag+getAttributes() org.adoptopenjdk.jitwatch.model.Tag+getAttributes() java.util.Map+get(Object) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagTaskDone(String,Tag) org.adoptopenjdk.jitwatch.model.IMetaMember+setTagTaskDone(String,Tag) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String) org.slf4j.Logger+warn(String,Object) org.slf4j.Logger+warn(String,Object) org.adoptopenjdk.jitwatch.model.Tag+getName() org.adoptopenjdk.jitwatch.model.Tag+getName()",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+currentMember org.adoptopenjdk.jitwatch.core.HotSpotLogParser+currentMember org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+currentMember,867,39,19991,818,2,,"private void handleTaskDone(Tag tagTaskDone)
	{
		Map<String, String> attrs = tagTaskDone.getAttributes();

		if (attrs.containsKey(ATTR_NMSIZE))
		{
			long nmsize = Long.parseLong(attrs.get(ATTR_NMSIZE));
			model.addNativeBytes(nmsize);
		}

		if (currentMember != null)
		{
			Tag parent = tagTaskDone.getParent();

			String compileID = null;

			if (TAG_TASK.equals(parent.getName()))
			{
				compileID = parent.getAttributes().get(ATTR_COMPILE_ID);

				if (compileID != null)
				{
					currentMember.setTagTaskDone(compileID, tagTaskDone);
				}
				else
				{
					logger.warn(""No compile_id attribute found on task"");
				}
			}
			else
			{
				logger.warn(""Unexpected parent of task_done: {}"", parent.getName());
			}

			// prevents attr overwrite by next task_done if next member not
			// found due to classpath issues
			currentMember = null;
		}
	}",False
56,buildParsedClasspath(),Method,parseLogFile(),,org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) org.adoptopenjdk.jitwatch.model.SplitLog+getClassLoaderLines() org.adoptopenjdk.jitwatch.model.SplitLog+getClassLoaderLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildParsedClasspath(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildParsedClasspath(String) org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLine(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog,238,12,20861,858,2,,"private void buildParsedClasspath()
	{
		if (DEBUG_LOGGING)
		{
			logger.debug(""buildParsedClasspath()"");
		}

		for (NumberedLine numberedLine : splitLog.getClassLoaderLines())
		{
			buildParsedClasspath(numberedLine.getLine());
		}
	}",True
57,buildClassModel(),Method,parseLogFile(),,org.slf4j.Logger+debug(String) org.slf4j.Logger+debug(String) org.adoptopenjdk.jitwatch.model.SplitLog+getClassLoaderLines() org.adoptopenjdk.jitwatch.model.SplitLog+getClassLoaderLines() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildClassModel(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+buildClassModel(String) org.adoptopenjdk.jitwatch.model.NumberedLine+getLine() org.adoptopenjdk.jitwatch.model.NumberedLine+getLine(),org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+splitLog,223,12,21102,871,2,,"private void buildClassModel()
	{
		if (DEBUG_LOGGING)
		{
			logger.debug(""buildClassModel()"");
		}

		for (NumberedLine numberedLine : splitLog.getClassLoaderLines())
		{
			buildClassModel(numberedLine.getLine());
		}
	}",True
58,buildParsedClasspath(String),Method,buildParsedClasspath(),,"java.lang.String+indexOf(String) java.lang.String+indexOf(String) java.lang.String+substring(int,int) java.lang.String+substring(int,int) java.lang.String+length() java.lang.String+length() java.lang.String+length() java.lang.String+length() java.lang.String+startsWith(String) java.lang.String+startsWith(String) java.lang.String+substring(int) java.lang.String+substring(int) java.net.URLDecoder+decode(String,String) java.net.URLDecoder+decode(String,String) org.adoptopenjdk.jitwatch.model.ParsedClasspath+addClassLocation(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getParsedClasspath() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+getParsedClasspath() org.adoptopenjdk.jitwatch.model.ParsedClasspath+addClassLocation(String)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasTraceClassLoad org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasTraceClassLoad,773,34,21328,884,2,,"private void buildParsedClasspath(String inCurrentLine)
	{
		if (!hasTraceClassLoad)
		{
			hasTraceClassLoad = true;
		}

		final String FROM_SPACE = ""from "";

		String originalLocation = null;

		int fromSpacePos = inCurrentLine.indexOf(FROM_SPACE);

		if (fromSpacePos != -1)
		{
			originalLocation = inCurrentLine.substring(fromSpacePos + FROM_SPACE.length(), inCurrentLine.length() - 1);
		}

		if (originalLocation != null && originalLocation.startsWith(S_FILE_COLON))
		{
			originalLocation = originalLocation.substring(S_FILE_COLON.length());

			try
			{
				originalLocation = URLDecoder.decode(originalLocation, ""UTF-8"");
			}
			catch (UnsupportedEncodingException e)
			{
				// ignore
			}

			getParsedClasspath().addClassLocation(originalLocation);
		}
	}",True
59,buildClassModel(String),Method,buildClassModel(),,"org.adoptopenjdk.jitwatch.util.StringUtil+getSubstringBetween(String,String,String) org.adoptopenjdk.jitwatch.util.StringUtil+getSubstringBetween(String,String,String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+addToClassModel(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+addToClassModel(String)",,212,9,22104,919,2,,"private void buildClassModel(String inCurrentLine)
	{
		String fqClassName = StringUtil.getSubstringBetween(inCurrentLine, LOADED, S_SPACE);

		if (fqClassName != null)
		{
			addToClassModel(fqClassName);
		}
	}",True
60,addToClassModel(String),Method,buildClassModel(String),,"org.adoptopenjdk.jitwatch.model.PackageManager+getMetaClass(String) org.adoptopenjdk.jitwatch.model.JITDataModel+getPackageManager() org.adoptopenjdk.jitwatch.model.JITDataModel+getPackageManager() org.adoptopenjdk.jitwatch.model.PackageManager+getMetaClass(String) org.adoptopenjdk.jitwatch.util.ClassUtil+loadClassWithoutInitialising(String) org.adoptopenjdk.jitwatch.util.ClassUtil+loadClassWithoutInitialising(String) org.adoptopenjdk.jitwatch.model.JITDataModel+buildAndGetMetaClass(Class<?>) org.adoptopenjdk.jitwatch.model.JITDataModel+buildAndGetMetaClass(Class<?>) org.adoptopenjdk.jitwatch.util.ParseUtil+possibleLambdaMethod(String) org.adoptopenjdk.jitwatch.util.ParseUtil+possibleLambdaMethod(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) java.lang.Throwable+getMessage() java.lang.Throwable+getMessage() org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.slf4j.Logger+error(String,Object,Object) org.slf4j.Logger+error(String,Object,Object) org.slf4j.Logger+error(String,Object,Object) org.slf4j.Logger+error(String,Object,Object) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String) org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logError(String)",org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+model org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasParseError org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogTitle org.adoptopenjdk.jitwatch.core.HotSpotLogParser+errorDialogBody org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger org.adoptopenjdk.jitwatch.core.HotSpotLogParser+logger,1351,48,22319,929,2,,"private void addToClassModel(String fqClassName)
	{
		Class<?> clazz = null;

		MetaClass metaClass = model.getPackageManager().getMetaClass(fqClassName);

		if (metaClass != null)
		{
			return;
		}

		try
		{
			clazz = ClassUtil.loadClassWithoutInitialising(fqClassName);

			if (clazz != null)
			{
				model.buildAndGetMetaClass(clazz);
			}
		}
		catch (ClassNotFoundException cnf)
		{
			if (!ParseUtil.possibleLambdaMethod(fqClassName))
			{
				logError(""ClassNotFoundException: '"" + fqClassName + C_QUOTE);
			}
		}
		catch (NoClassDefFoundError ncdf)
		{
			logError(""NoClassDefFoundError: '"" + fqClassName + C_SPACE + ""requires "" + ncdf.getMessage() + C_QUOTE);
		}
		catch (UnsupportedClassVersionError ucve)
		{
			hasParseError = true;
			errorDialogTitle = ""UnsupportedClassVersionError for class "" + fqClassName;
			errorDialogBody = ""Could not load "" + fqClassName + "" as the class file version is too recent for this JVM."";

			logError(
					""UnsupportedClassVersionError! Tried to load a class file with an unsupported format (later version than this JVM)"");
			logger.error(""Class file for {} created in a later JVM version"", fqClassName, ucve);
		}
		catch (Throwable t)
		{
			// Possibly a VerifyError
			logger.error(""Could not addClassToModel {}"", fqClassName, t);
			logError(""Exception: '"" + fqClassName + C_QUOTE);
		}
	}",False
61,hasParseError(),Method,,,,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+hasParseError,71,5,23673,979,1,,"@Override
	public boolean hasParseError()
	{
		return hasParseError;
	}",False
62,isTweakVMLog(),Method,,,,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+isTweakVMLog,69,5,23747,985,1,,"@Override
	public boolean isTweakVMLog()
	{
		return isTweakVMLog;
	}",False
63,getVMCommand(),Method,,,,org.adoptopenjdk.jitwatch.core.HotSpotLogParser+vmCommand,65,5,23819,991,1,,"@Override
	public String getVMCommand()
	{
		return vmCommand;
	}",False
