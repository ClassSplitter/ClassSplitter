index,name,type,inner invocations,external invocations,calls,visits,length,lines,start location,definition line,modifier,annotation,full text,removed
1,TAG,Field,,,,,49,1,2627,69,18,,"private final String TAG = ""MediaplayerActivity"";",False
2,DEFAULT_SEEK_DELTA,Field,,,,,52,1,2679,71,26,,private static final int DEFAULT_SEEK_DELTA = 30000;,False
3,orientation,Field,,,,,60,2,2819,75,2,"/** 
 * Current screen orientation. 
 */
","/** Current screen orientation. */
	private int orientation;",False
4,videoControlsShowing,Field,,,,,98,2,2882,78,2,"/** 
 * True if video controls are currently visible. 
 */
","/** True if video controls are currently visible. */
	private boolean videoControlsShowing = true;",True
5,mediaInfoLoaded,Field,,,,,86,2,2982,80,2,"/** 
 * True if media information was loaded. 
 */
","/** True if media information was loaded. */
	private boolean mediaInfoLoaded = false;",False
6,playbackService,Field,,,,,40,1,3071,82,2,,private PlaybackService playbackService;,False
7,positionObserver,Field,,,,,47,1,3113,83,2,,private MediaPositionObserver positionObserver;,False
8,videoControlsToggler,Field,,,,,48,1,3162,84,2,,private VideoControlsHider videoControlsToggler;,True
9,media,Field,,,,,24,1,3213,86,2,,private FeedMedia media;,False
10,status,Field,,,,,28,1,3239,87,2,,private PlayerStatus status;,False
11,manager,Field,,,,,28,1,3269,88,2,,private FeedManager manager;,False
12,coverFragment,Field,,,,,36,1,3312,91,2,,private CoverFragment coverFragment;,True
13,descriptionFragment,Field,,,,,52,1,3350,92,2,,private ItemDescriptionFragment descriptionFragment;,True
14,viewpager,Field,,,,,28,1,3404,93,2,,private ViewPager viewpager;,True
15,tabs,Field,,,,,30,1,3434,94,2,,private TabPageIndicator tabs;,True
16,pagerAdapter,Field,,,,,45,1,3466,95,2,,private MediaPlayerPagerAdapter pagerAdapter;,True
17,videoview,Field,,,,,28,1,3513,96,2,,private VideoView videoview;,True
18,txtvStatus,Field,,,,,28,1,3543,97,2,,private TextView txtvStatus;,True
19,txtvPosition,Field,,,,,30,1,3573,98,2,,private TextView txtvPosition;,False
20,txtvLength,Field,,,,,28,1,3605,99,2,,private TextView txtvLength;,False
21,sbPosition,Field,,,,,27,1,3635,100,2,,private SeekBar sbPosition;,False
22,butPlay,Field,,,,,28,1,3664,101,2,,private ImageButton butPlay;,False
23,butRev,Field,,,,,27,1,3694,102,2,,private ImageButton butRev;,False
24,butFF,Field,,,,,26,1,3723,103,2,,private ImageButton butFF;,False
25,videoOverlay,Field,,,,,34,1,3751,104,2,,private LinearLayout videoOverlay;,True
26,onStop(),Method,,,,de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+statusUpdate de.danoeh.antennapod.activity.MediaplayerActivity+notificationReceiver de.danoeh.antennapod.activity.MediaplayerActivity+mConnection de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver,500,26,3788,107,4,,"@Override
	protected void onStop() {
		super.onStop();
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Activity stopped"");
		try {
			unregisterReceiver(statusUpdate);
		} catch (IllegalArgumentException e) {
			// ignore
		}

		try {
			unregisterReceiver(notificationReceiver);
		} catch (IllegalArgumentException e) {
			// ignore
		}

		try {
			unbindService(mConnection);
		} catch (IllegalArgumentException e) {
			// ignore
		}
		if (positionObserver != null) {
			positionObserver.cancel(true);
		}
	}",False
27,onCreateOptionsMenu(Menu),Method,,,,,172,6,4291,134,1,,"@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		MenuInflater inflater = new MenuInflater(this);
		inflater.inflate(R.menu.mediaplayer, menu);
		return true;
	}",False
28,onPrepareOptionsMenu(Menu),Method,,,de.danoeh.antennapod.feed.FeedItem+getPaymentLink() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedItem+getPaymentLink() de.danoeh.antennapod.feed.FeedItem+getLink() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedItem+getLink() de.danoeh.antennapod.feed.FeedItem+getLink() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedItem+getLink() de.danoeh.antennapod.service.PlaybackService+sleepTimerActive() de.danoeh.antennapod.service.PlaybackService+sleepTimerActive() de.danoeh.antennapod.service.PlaybackService+sleepTimerActive() de.danoeh.antennapod.service.PlaybackService+sleepTimerActive(),de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService,742,18,4466,141,1,,"@Override
	public boolean onPrepareOptionsMenu(Menu menu) {

		menu.findItem(R.id.support_item).setVisible(
				media != null && media.getItem().getPaymentLink() != null);
		menu.findItem(R.id.share_link_item).setVisible(
				media != null && media.getItem().getLink() != null);
		menu.findItem(R.id.visit_website_item).setVisible(
				media != null && media.getItem().getLink() != null);

		boolean sleepTimerSet = playbackService != null
				&& playbackService.sleepTimerActive();
		boolean sleepTimerNotSet = playbackService != null
				&& !playbackService.sleepTimerActive();
		menu.findItem(R.id.set_sleeptimer_item).setVisible(sleepTimerNotSet);
		menu.findItem(R.id.disable_sleeptimer_item).setVisible(sleepTimerSet);
		return true;
	}",False
29,onOptionsItemSelected(MenuItem),Method,,,"de.danoeh.antennapod.util.Converter+getDurationStringLong(int) de.danoeh.antennapod.util.Converter+getDurationStringLong(int) de.danoeh.antennapod.service.PlaybackService+getSleepTimerTimeLeft() de.danoeh.antennapod.service.PlaybackService+getSleepTimerTimeLeft() +onClick(DialogInterface,int)",de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService,1680,61,5211,160,1,,"@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			startActivity(new Intent(MediaplayerActivity.this,
					MainActivity.class));
			break;
		case R.id.disable_sleeptimer_item:
			if (playbackService != null) {
				AlertDialog.Builder stDialog = new AlertDialog.Builder(this);
				stDialog.setTitle(R.string.sleep_timer_label);
				stDialog.setMessage(getString(R.string.time_left_label)
						+ Converter.getDurationStringLong((int) playbackService
								.getSleepTimerTimeLeft()));
				stDialog.setPositiveButton(R.string.disable_sleeptimer_label,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface dialog,
									int which) {
								dialog.dismiss();
								if (playbackService != null) {
									playbackService.disableSleepTimer();
								}
							}
						});
				stDialog.setNegativeButton(R.string.cancel_label,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface dialog,
									int which) {
								dialog.dismiss();
							}
						});
				stDialog.create().show();
			}
			break;
		case R.id.set_sleeptimer_item:
			if (playbackService != null) {
				TimeDialog td = new TimeDialog(this,
						R.string.set_sleeptimer_label,
						R.string.set_sleeptimer_label) {

					@Override
					public void onTimeEntered(long millis) {
						if (playbackService != null) {
							playbackService.setSleepTimer(millis);
						}
					}
				};
				td.show();
				break;

			}
		default:
			return FeedItemMenuHandler.onMenuItemClicked(this, item,
					media.getItem());
		}
		return true;
	}",False
30,onResume(),Method,,,de.danoeh.antennapod.util.StorageUtils+checkStorageAvailability(Activity) de.danoeh.antennapod.util.StorageUtils+checkStorageAvailability(Activity) de.danoeh.antennapod.activity.MediaplayerActivity+bindToService() de.danoeh.antennapod.activity.MediaplayerActivity+bindToService(),de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG,187,9,6894,222,4,,"@Override
	protected void onResume() {
		super.onResume();
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Resuming Activity"");
		StorageUtils.checkStorageAvailability(this);
		bindToService();

	}",False
31,onConfigurationChanged(Configuration),Method,,,de.danoeh.antennapod.activity.MediaplayerActivity+setupGUI() de.danoeh.antennapod.activity.MediaplayerActivity+setupGUI() de.danoeh.antennapod.activity.MediaplayerActivity+handleStatus() de.danoeh.antennapod.activity.MediaplayerActivity+handleStatus(),de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+orientation de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver,325,13,7084,232,1,,"@Override
	public void onConfigurationChanged(Configuration newConfig) {
		super.onConfigurationChanged(newConfig);
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Configuration changed"");
		orientation = newConfig.orientation;
		if (positionObserver != null) {
			positionObserver.cancel(true);
		}
		setupGUI();
		handleStatus();

	}",False
32,onPause(),Method,,,de.danoeh.antennapod.service.PlaybackService+isPlayingVideo() de.danoeh.antennapod.service.PlaybackService+isPlayingVideo() de.danoeh.antennapod.service.PlaybackService+stop() de.danoeh.antennapod.service.PlaybackService+stop(),de.danoeh.antennapod.service.PlaybackService+isRunning de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler,284,12,7412,246,4,,"@Override
	protected void onPause() {
		super.onPause();
		if (PlaybackService.isRunning && playbackService != null
				&& playbackService.isPlayingVideo()) {
			playbackService.stop();
		}
		if (videoControlsToggler != null) {
			videoControlsToggler.cancel(true);
		}
		finish();
	}",True
33,onCreate(Bundle),Method,,,de.danoeh.antennapod.util.StorageUtils+checkStorageAvailability(Activity) de.danoeh.antennapod.util.StorageUtils+checkStorageAvailability(Activity) de.danoeh.antennapod.feed.FeedManager+getInstance() de.danoeh.antennapod.feed.FeedManager+getInstance() de.danoeh.antennapod.activity.MediaplayerActivity+bindToService() de.danoeh.antennapod.activity.MediaplayerActivity+bindToService(),de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+orientation de.danoeh.antennapod.activity.MediaplayerActivity+manager,439,13,7699,259,4,,"@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Creating Activity"");
		StorageUtils.checkStorageAvailability(this);

		orientation = getResources().getConfiguration().orientation;
		manager = FeedManager.getInstance();
		getWindow().setFormat(PixelFormat.TRANSPARENT);
		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
		bindToService();
	}",True
34,bindToService(),Method,onResume() onCreate(Bundle),,de.danoeh.antennapod.activity.MediaplayerActivity+setupGUI() de.danoeh.antennapod.activity.MediaplayerActivity+setupGUI() de.danoeh.antennapod.activity.MediaplayerActivity+handleStatus() de.danoeh.antennapod.activity.MediaplayerActivity+handleStatus(),de.danoeh.antennapod.service.PlaybackService+isRunning de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.PodcastApp+PREF_NAME de.danoeh.antennapod.service.PlaybackService+PREF_LAST_PLAYED_ID de.danoeh.antennapod.service.PlaybackService+PREF_LAST_PLAYED_FEED_ID de.danoeh.antennapod.service.PlaybackService+EXTRA_FEED_ID de.danoeh.antennapod.service.PlaybackService+EXTRA_MEDIA_ID de.danoeh.antennapod.service.PlaybackService+EXTRA_START_WHEN_PREPARED de.danoeh.antennapod.service.PlaybackService+EXTRA_SHOULD_STREAM de.danoeh.antennapod.service.PlaybackService+PREF_LAST_IS_STREAM de.danoeh.antennapod.activity.MediaplayerActivity+mConnection de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+status de.danoeh.antennapod.activity.MediaplayerActivity+mConnection de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG,1335,36,8141,272,2,,"private void bindToService() {
		Intent serviceIntent = new Intent(this, PlaybackService.class);
		boolean bound = false;
		if (!PlaybackService.isRunning) {
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Trying to restore last played media"");
			SharedPreferences prefs = getApplicationContext()
					.getSharedPreferences(PodcastApp.PREF_NAME, 0);
			long mediaId = prefs.getLong(PlaybackService.PREF_LAST_PLAYED_ID,
					-1);
			long feedId = prefs.getLong(
					PlaybackService.PREF_LAST_PLAYED_FEED_ID, -1);
			if (mediaId != -1 && feedId != -1) {
				serviceIntent.putExtra(PlaybackService.EXTRA_FEED_ID, feedId);
				serviceIntent.putExtra(PlaybackService.EXTRA_MEDIA_ID, mediaId);
				serviceIntent.putExtra(
						PlaybackService.EXTRA_START_WHEN_PREPARED, false);
				serviceIntent.putExtra(PlaybackService.EXTRA_SHOULD_STREAM,
						prefs.getBoolean(PlaybackService.PREF_LAST_IS_STREAM,
								true));
				startService(serviceIntent);
				bound = bindService(serviceIntent, mConnection,
						Context.BIND_AUTO_CREATE);
			} else {
				if (AppConfig.DEBUG)
					Log.d(TAG, ""No last played media found"");
				status = PlayerStatus.STOPPED;
				setupGUI();
				handleStatus();
			}
		} else {
			bound = bindService(serviceIntent, mConnection, 0);
		}
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Result for service binding: "" + bound);
	}",False
35,handleStatus(),Method,onConfigurationChanged(Configuration) bindToService() queryService(),,"de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+setupPositionObserver() de.danoeh.antennapod.activity.MediaplayerActivity+setupPositionObserver() de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+loadMediaInfo() de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int) de.danoeh.antennapod.activity.MediaplayerActivity+setStatusMsg(int,int)",de.danoeh.antennapod.activity.MediaplayerActivity+status de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver de.danoeh.antennapod.activity.MediaplayerActivity+butPlay de.danoeh.antennapod.activity.MediaplayerActivity+butPlay de.danoeh.antennapod.activity.MediaplayerActivity+butPlay de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG,1193,42,9479,309,2,,"private void handleStatus() {
		switch (status) {

		case ERROR:
			setStatusMsg(R.string.player_error_msg, View.VISIBLE);
			break;
		case PAUSED:
			setStatusMsg(R.string.player_paused_msg, View.VISIBLE);
			loadMediaInfo();
			if (positionObserver != null) {
				positionObserver.cancel(true);
				positionObserver = null;
			}
			butPlay.setImageResource(R.drawable.av_play);
			break;
		case PLAYING:
			setStatusMsg(R.string.player_playing_msg, View.INVISIBLE);
			loadMediaInfo();
			setupPositionObserver();
			butPlay.setImageResource(R.drawable.av_pause);
			break;
		case PREPARING:
			setStatusMsg(R.string.player_preparing_msg, View.VISIBLE);
			loadMediaInfo();
			break;
		case STOPPED:
			setStatusMsg(R.string.player_stopped_msg, View.VISIBLE);
			break;
		case PREPARED:
			loadMediaInfo();
			setStatusMsg(R.string.player_ready_msg, View.VISIBLE);
			butPlay.setImageResource(R.drawable.av_play);
			break;
		case SEEKING:
			setStatusMsg(R.string.player_seeking_msg, View.VISIBLE);
			break;
		case AWAITING_VIDEO_SURFACE:
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Preparing video playback"");
			this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
		}
	}",False
36,"setStatusMsg(int,int)",Method,handleStatus() handleStatus() handleStatus() handleStatus() handleStatus() handleStatus() handleStatus(),,,de.danoeh.antennapod.activity.MediaplayerActivity+orientation de.danoeh.antennapod.activity.MediaplayerActivity+txtvStatus de.danoeh.antennapod.activity.MediaplayerActivity+txtvStatus,234,8,10675,352,2,,"private void setStatusMsg(int resId, int visibility) {
		if (orientation == Configuration.ORIENTATION_PORTRAIT) {
			if (visibility == View.VISIBLE) {
				txtvStatus.setText(resId);
			}
			txtvStatus.setVisibility(visibility);
		}
	}",False
37,setupPositionObserver(),Method,handleStatus(),,+() +onProgressUpdate(Void[]),de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+positionObserver,1065,33,10912,362,2,,"@SuppressLint(""NewApi"")
	private void setupPositionObserver() {
		if (positionObserver == null || positionObserver.isCancelled()) {
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Setting up position observer"");
			positionObserver = new MediaPositionObserver() {

				@Override
				protected void onProgressUpdate(Void... v) {
					super.onProgressUpdate();
					int currentPosition = playbackService.getPlayer()
							.getCurrentPosition();
					media.setPosition(currentPosition);
					txtvPosition.setText(Converter
							.getDurationStringLong(currentPosition));
					txtvLength.setText(Converter
							.getDurationStringLong(playbackService.getPlayer()
									.getDuration()));
					updateProgressbarPosition();
					pagerAdapter.notifyMediaPositionChanged();
				}

			};
			if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.GINGERBREAD_MR1) {
				positionObserver.executeOnExecutor(
						AsyncTask.THREAD_POOL_EXECUTOR,
						playbackService.getPlayer());
			} else {
				positionObserver.execute(playbackService.getPlayer());
			}

		}
	}",False
38,updateProgressbarPosition(),Method,,,de.danoeh.antennapod.service.PlaybackService+getPlayer() de.danoeh.antennapod.service.PlaybackService+getPlayer(),de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+sbPosition de.danoeh.antennapod.activity.MediaplayerActivity+sbPosition,315,8,11980,395,2,,"private void updateProgressbarPosition() {
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Updating progressbar info"");
		MediaPlayer player = playbackService.getPlayer();
		float progress = ((float) player.getCurrentPosition())
				/ player.getDuration();
		sbPosition.setProgress((int) (progress * sbPosition.getMax()));
	}",False
39,loadMediaInfo(),Method,handleStatus() handleStatus() handleStatus() handleStatus(),,de.danoeh.antennapod.feed.FeedItem+getTitle() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedItem+getTitle() de.danoeh.antennapod.feed.Feed+getTitle() de.danoeh.antennapod.feed.FeedItem+getFeed() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedItem+getFeed() de.danoeh.antennapod.feed.Feed+getTitle() de.danoeh.antennapod.util.Converter+getDurationStringLong(int) de.danoeh.antennapod.util.Converter+getDurationStringLong(int) de.danoeh.antennapod.feed.FeedMedia+getPosition() de.danoeh.antennapod.feed.FeedMedia+getPosition() de.danoeh.antennapod.service.PlaybackService+isShouldStream() de.danoeh.antennapod.service.PlaybackService+isShouldStream() de.danoeh.antennapod.util.Converter+getDurationStringLong(int) de.danoeh.antennapod.util.Converter+getDurationStringLong(int) de.danoeh.antennapod.feed.FeedMedia+getDuration() de.danoeh.antennapod.feed.FeedMedia+getDuration() de.danoeh.antennapod.feed.FeedMedia+getPosition() de.danoeh.antennapod.feed.FeedMedia+getPosition() de.danoeh.antennapod.feed.FeedMedia+getDuration() de.danoeh.antennapod.feed.FeedMedia+getDuration(),de.danoeh.antennapod.activity.MediaplayerActivity+mediaInfoLoaded de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+orientation de.danoeh.antennapod.activity.MediaplayerActivity+pagerAdapter de.danoeh.antennapod.activity.MediaplayerActivity+txtvPosition de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+txtvLength de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+sbPosition de.danoeh.antennapod.activity.MediaplayerActivity+sbPosition de.danoeh.antennapod.activity.MediaplayerActivity+mediaInfoLoaded,827,28,12298,404,2,,"private void loadMediaInfo() {
		if (!mediaInfoLoaded) {
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Loading media info"");
			if (media != null) {
				getSupportActionBar().setSubtitle(media.getItem().getTitle());
				getSupportActionBar().setTitle(
						media.getItem().getFeed().getTitle());
				if (orientation == Configuration.ORIENTATION_PORTRAIT) {
					pagerAdapter.notifyDataSetChanged();

				}

				txtvPosition.setText(Converter.getDurationStringLong((media
						.getPosition())));

				if (!playbackService.isShouldStream()) {
					txtvLength.setText(Converter.getDurationStringLong(media
							.getDuration()));
					float progress = ((float) media.getPosition())
							/ media.getDuration();
					sbPosition.setProgress((int) (progress * sbPosition
							.getMax()));
				}
			}
			mediaInfoLoaded = true;
		}
	}",False
40,setupGUI(),Method,onConfigurationChanged(Configuration) bindToService() queryService(),,"+onProgressChanged(SeekBar,int,boolean)",de.danoeh.antennapod.activity.MediaplayerActivity+sbPosition de.danoeh.antennapod.activity.MediaplayerActivity+txtvPosition de.danoeh.antennapod.activity.MediaplayerActivity+txtvLength de.danoeh.antennapod.activity.MediaplayerActivity+butPlay de.danoeh.antennapod.activity.MediaplayerActivity+butRev de.danoeh.antennapod.activity.MediaplayerActivity+butFF de.danoeh.antennapod.activity.MediaplayerActivity+sbPosition +duration +prog,2806,93,13128,433,2,,"private void setupGUI() {
		setContentView(R.layout.mediaplayer_activity);
		sbPosition = (SeekBar) findViewById(R.id.sbPosition);
		txtvPosition = (TextView) findViewById(R.id.txtvPosition);
		txtvLength = (TextView) findViewById(R.id.txtvLength);
		butPlay = (ImageButton) findViewById(R.id.butPlay);
		butRev = (ImageButton) findViewById(R.id.butRev);
		butFF = (ImageButton) findViewById(R.id.butFF);

		// SEEKBAR SETUP

		sbPosition.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
			int duration;
			float prog;

			@Override
			public void onProgressChanged(SeekBar seekBar, int progress,
					boolean fromUser) {
				if (fromUser && PlaybackService.isRunning) {
					prog = progress / ((float) seekBar.getMax());
					duration = playbackService.getPlayer().getDuration();
					txtvPosition.setText(Converter
							.getDurationStringLong((int) (prog * duration)));
				}

			}

			@Override
			public void onStartTrackingTouch(SeekBar seekBar) {
				// interrupt position Observer, restart later
				if (positionObserver != null) {
					positionObserver.cancel(true);
					positionObserver = null;
				}
			}

			@Override
			public void onStopTrackingTouch(SeekBar seekBar) {
				if (PlaybackService.isRunning) {
					playbackService.seek((int) (prog * duration));
					setupPositionObserver();
				}
			}
		});

		// BUTTON SETUP

		butPlay.setOnClickListener(playbuttonListener);

		butFF.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				if (status == PlayerStatus.PLAYING) {
					playbackService.seekDelta(DEFAULT_SEEK_DELTA);
				}
			}
		});

		butRev.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				if (status == PlayerStatus.PLAYING) {
					playbackService.seekDelta(-DEFAULT_SEEK_DELTA);
				}
			}
		});

		// PORTRAIT ORIENTATION SETUP

		if (orientation == Configuration.ORIENTATION_PORTRAIT) {
			txtvStatus = (TextView) findViewById(R.id.txtvStatus);
			viewpager = (ViewPager) findViewById(R.id.viewpager);
			tabs = (TabPageIndicator) findViewById(R.id.tabs);

			int tabcount = 2;
			if (media != null && media.getItem().getSimpleChapters() != null) {
				tabcount = 3;
			}
			pagerAdapter = new MediaPlayerPagerAdapter(
					getSupportFragmentManager(), tabcount, this);
			viewpager.setAdapter(pagerAdapter);
			tabs.setViewPager(viewpager);
		} else {
			videoOverlay = (LinearLayout) findViewById(R.id.overlay);
			videoview = (VideoView) findViewById(R.id.videoview);
			videoview.getHolder().addCallback(this);
			videoview.setOnClickListener(playbuttonListener);
			videoview.setOnTouchListener(onVideoviewTouched);
			setupVideoControlsToggler();
			getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
					WindowManager.LayoutParams.FLAG_FULLSCREEN);
		}
	}",False
41,playbuttonListener,Field,,,,,314,11,15937,527,2,,"private OnClickListener playbuttonListener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			if (status == PlayerStatus.PLAYING) {
				playbackService.pause(true);
			} else if (status == PlayerStatus.PAUSED
					|| status == PlayerStatus.PREPARED) {
				playbackService.play();
			}
		}
	};",False
42,onVideoviewTouched,Field,,,,,456,19,16254,539,2,,"private View.OnTouchListener onVideoviewTouched = new View.OnTouchListener() {

		@Override
		public boolean onTouch(View v, MotionEvent event) {
			if (event.getAction() == MotionEvent.ACTION_DOWN) {
				if (videoControlsToggler != null) {
					videoControlsToggler.cancel(true);
				}
				toggleVideoControlsVisibility();
				if (videoControlsShowing) {
					setupVideoControlsToggler();
				}

				return true;
			} else {
				return false;
			}
		}
	};",True
43,setupVideoControlsToggler(),Method,,,de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+VideoControlsHider(),de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler,423,13,16713,560,2,,"@SuppressLint(""NewApi"")
	private void setupVideoControlsToggler() {
		if (videoControlsToggler != null) {
			videoControlsToggler.cancel(true);
		}
		videoControlsToggler = new VideoControlsHider();
		if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.GINGERBREAD_MR1) {
			videoControlsToggler
					.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
		} else {
			videoControlsToggler.execute();
		}
	}",True
44,toggleVideoControlsVisibility(),Method,,,,de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsShowing de.danoeh.antennapod.activity.MediaplayerActivity+videoOverlay de.danoeh.antennapod.activity.MediaplayerActivity+videoOverlay de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsShowing de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsShowing,295,10,17139,573,2,,"private void toggleVideoControlsVisibility() {
		if (videoControlsShowing) {
			getSupportActionBar().hide();
			videoOverlay.setVisibility(View.GONE);
		} else {
			getSupportActionBar().show();
			videoOverlay.setVisibility(View.VISIBLE);
		}
		videoControlsShowing = !videoControlsShowing;
	}",True
45,handleError(int),Method,,,"de.danoeh.antennapod.util.MediaPlayerError+getErrorString(Context,int) de.danoeh.antennapod.util.MediaPlayerError+getErrorString(Context,int) +onClick(DialogInterface,int)",,488,15,17437,584,2,,"private void handleError(int errorCode) {
		final AlertDialog.Builder errorDialog = new AlertDialog.Builder(this);
		errorDialog.setTitle(R.string.error_label);
		errorDialog
				.setMessage(MediaPlayerError.getErrorString(this, errorCode));
		errorDialog.setNeutralButton(""OK"",
				new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog, int which) {
						dialog.dismiss();
						finish();
					}
				});
		errorDialog.create().show();
	}",False
46,mConnection,Field,,,,,718,24,17928,600,2,,"private ServiceConnection mConnection = new ServiceConnection() {
		public void onServiceConnected(ComponentName className, IBinder service) {
			playbackService = ((PlaybackService.LocalBinder) service)
					.getService();

			registerReceiver(statusUpdate, new IntentFilter(
					PlaybackService.ACTION_PLAYER_STATUS_CHANGED));

			registerReceiver(notificationReceiver, new IntentFilter(
					PlaybackService.ACTION_PLAYER_NOTIFICATION));

			queryService();
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Connection to Service established"");
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			playbackService = null;
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Disconnected from Service"");

		}
	};",False
47,queryService(),Method,,,de.danoeh.antennapod.service.PlaybackService+getStatus() de.danoeh.antennapod.service.PlaybackService+getStatus() de.danoeh.antennapod.service.PlaybackService+getMedia() de.danoeh.antennapod.service.PlaybackService+getMedia() de.danoeh.antennapod.service.PlaybackService+isPlayingVideo() de.danoeh.antennapod.service.PlaybackService+isPlayingVideo() de.danoeh.antennapod.activity.MediaplayerActivity+setupGUI() de.danoeh.antennapod.activity.MediaplayerActivity+setupGUI() de.danoeh.antennapod.activity.MediaplayerActivity+handleStatus() de.danoeh.antennapod.activity.MediaplayerActivity+handleStatus(),de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+status de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+orientation de.danoeh.antennapod.activity.MediaplayerActivity+orientation de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+TAG,1361,37,18649,629,2,"/** 
 * Called when connection to playback service has been established or information has to be refreshed
 */
","/**
	 * Called when connection to playback service has been established or
	 * information has to be refreshed
	 */
	private void queryService() {
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Querying service info"");
		if (playbackService != null) {
			int requestedOrientation;
			status = playbackService.getStatus();
			media = playbackService.getMedia();
			invalidateOptionsMenu();

			if (playbackService.isPlayingVideo()) {
				setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
				requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;
			} else {
				setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
				requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;
			}
			// check if orientation is correct
			if ((requestedOrientation == ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE && orientation == Configuration.ORIENTATION_LANDSCAPE)
					|| (requestedOrientation == ActivityInfo.SCREEN_ORIENTATION_PORTRAIT && orientation == Configuration.ORIENTATION_PORTRAIT)) {
				if (AppConfig.DEBUG)
					Log.d(TAG, ""Orientation correct"");
				setupGUI();
				handleStatus();
			} else {
				if (AppConfig.DEBUG)
					Log.d(TAG,
							""Orientation incorrect, waiting for orientation change"");
			}
		} else {
			Log.e(TAG,
					""queryService() was called without an existing connection to playbackservice"");
		}
	}",False
48,statusUpdate,Field,,,,,277,9,20013,663,2,,"private BroadcastReceiver statusUpdate = new BroadcastReceiver() {
		@Override
		public void onReceive(Context context, Intent intent) {
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Received statusUpdate Intent."");
			status = playbackService.getStatus();
			handleStatus();
		}
	};",False
49,notificationReceiver,Field,,,,,1139,42,20293,673,2,,"private BroadcastReceiver notificationReceiver = new BroadcastReceiver() {

		@Override
		public void onReceive(Context context, Intent intent) {
			int type = intent.getIntExtra(
					PlaybackService.EXTRA_NOTIFICATION_TYPE, -1);
			int code = intent.getIntExtra(
					PlaybackService.EXTRA_NOTIFICATION_CODE, -1);
			if (code != -1 && type != -1) {
				switch (type) {
				case PlaybackService.NOTIFICATION_TYPE_ERROR:
					handleError(code);
					break;
				case PlaybackService.NOTIFICATION_TYPE_BUFFER_UPDATE:
					if (sbPosition != null) {
						float progress = ((float) code) / 100;
						sbPosition.setSecondaryProgress((int) progress
								* sbPosition.getMax());
					}
					break;
				case PlaybackService.NOTIFICATION_TYPE_RELOAD:
					if (positionObserver != null) {
						positionObserver.cancel(true);
						positionObserver = null;
					}
					mediaInfoLoaded = false;
					queryService();

					break;
				case PlaybackService.NOTIFICATION_TYPE_SLEEPTIMER_UPDATE:
					invalidateOptionsMenu();
					break;
				}

			} else {
				if (AppConfig.DEBUG)
					Log.d(TAG, ""Bad arguments. Won't handle intent"");
			}

		}

	};",False
50,holderCreated,Field,,,,,30,1,21435,716,2,,private boolean holderCreated;,True
51,"surfaceChanged(SurfaceHolder,int,int,int)",Method,,,,,140,5,21468,719,1,,"@Override
	public void surfaceChanged(SurfaceHolder holder, int format, int width,
			int height) {
		holder.setFixedSize(width, height);
	}",True
52,surfaceCreated(SurfaceHolder),Method,,,de.danoeh.antennapod.service.PlaybackService+setVideoSurface(SurfaceHolder) de.danoeh.antennapod.service.PlaybackService+setVideoSurface(SurfaceHolder),de.danoeh.antennapod.activity.MediaplayerActivity+holderCreated de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity+TAG de.danoeh.antennapod.activity.MediaplayerActivity+status de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity+TAG,406,15,21611,725,1,,"@Override
	public void surfaceCreated(SurfaceHolder holder) {
		holderCreated = true;
		if (AppConfig.DEBUG)
			Log.d(TAG, ""Videoview holder created"");
		if (status == PlayerStatus.AWAITING_VIDEO_SURFACE) {
			if (playbackService != null) {
				playbackService.setVideoSurface(holder);
			} else {
				Log.e(TAG,
						""Could'nt attach surface to mediaplayer - reference to service was null"");
			}
		}

	}",True
53,surfaceDestroyed(SurfaceHolder),Method,,,,de.danoeh.antennapod.activity.MediaplayerActivity+holderCreated,91,4,22020,741,1,,"@Override
	public void surfaceDestroyed(SurfaceHolder holder) {
		holderCreated = false;
	}",True
54,MediaPlayerPagerAdapter,MemberClass,,,"de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+MediaPlayerPagerAdapter(FragmentManager,int,MediaplayerActivity) de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+getItem(int) de.danoeh.antennapod.fragment.CoverFragment+newInstance(FeedItem) de.danoeh.antennapod.fragment.CoverFragment+newInstance(FeedItem) de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.fragment.ItemDescriptionFragment+newInstance(FeedItem) de.danoeh.antennapod.fragment.ItemDescriptionFragment+newInstance(FeedItem) de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() +onListItemClick(ListView,View,int,long) de.danoeh.antennapod.service.PlaybackService+seekToChapter(SimpleChapter) de.danoeh.antennapod.service.PlaybackService+seekToChapter(SimpleChapter) de.danoeh.antennapod.adapter.SCListAdapter+SCListAdapter(Context,int,List<SimpleChapter>) de.danoeh.antennapod.feed.FeedItem+getSimpleChapters() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedMedia+getItem() de.danoeh.antennapod.feed.FeedItem+getSimpleChapters() de.danoeh.antennapod.fragment.CoverFragment+newInstance(FeedItem) de.danoeh.antennapod.fragment.CoverFragment+newInstance(FeedItem) de.danoeh.antennapod.fragment.CoverFragment+newInstance(FeedItem) de.danoeh.antennapod.fragment.CoverFragment+newInstance(FeedItem) de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+getPageTitle(int) de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+getCount() de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+getItemPosition(Object) de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+notifyMediaPositionChanged()",de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+numItems de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+sCChapterFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_COVER de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_DESCR de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_CHAPTERS de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+numItems de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_COVER de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+coverFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+coverFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_DESCR de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+descriptionFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+descriptionFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_CHAPTERS de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+sCChapterFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+playbackService de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+sCChapterFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity+media de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+sCChapterFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_COVER de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_DESCR de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+POS_CHAPTERS de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+activity de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+numItems de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+sCChapterFragment de.danoeh.antennapod.activity.MediaplayerActivity.MediaPlayerPagerAdapter+sCChapterFragment,2473,92,-1,-1,9,,"public static class MediaPlayerPagerAdapter extends
			FragmentStatePagerAdapter {
		private int numItems;
		private MediaplayerActivity activity;

		private SherlockListFragment sCChapterFragment;

		private static final int POS_COVER = 0;
		private static final int POS_DESCR = 1;
		private static final int POS_CHAPTERS = 2;

		public MediaPlayerPagerAdapter(FragmentManager fm, int numItems,
				MediaplayerActivity activity) {
			super(fm);
			this.numItems = numItems;
			this.activity = activity;
		}

		@Override
		public Fragment getItem(int position) {
			if (activity.media != null) {
				switch (position) {
				case POS_COVER:
					activity.coverFragment = CoverFragment
							.newInstance(activity.media.getItem());
					return activity.coverFragment;
				case POS_DESCR:
					activity.descriptionFragment = ItemDescriptionFragment
							.newInstance(activity.media.getItem());
					return activity.descriptionFragment;
				case POS_CHAPTERS:
					sCChapterFragment = new SherlockListFragment() {

						@Override
						public void onListItemClick(ListView l, View v,
								int position, long id) {
							super.onListItemClick(l, v, position, id);
							SimpleChapter chapter = (SimpleChapter) this
									.getListAdapter().getItem(position);
							if (activity.playbackService != null) {
								activity.playbackService.seekToChapter(chapter);
							}
						}

					};

					sCChapterFragment.setListAdapter(new SCListAdapter(
							activity, 0, activity.media.getItem()
									.getSimpleChapters()));
					
					return sCChapterFragment;
				default:
					return CoverFragment.newInstance(null);
				}
			} else {
				return CoverFragment.newInstance(null);
			}
		}

		@Override
		public CharSequence getPageTitle(int position) {
			switch (position) {
			case POS_COVER:
				return activity.getString(R.string.cover_label);
			case POS_DESCR:
				return activity.getString(R.string.shownotes_label);
			case POS_CHAPTERS:
				return activity.getString(R.string.chapters_label);
			default:
				return super.getPageTitle(position);
			}
		}

		@Override
		public int getCount() {
			return numItems;
		}

		@Override
		public int getItemPosition(Object object) {
			return POSITION_UNCHANGED;
		}

		public void notifyMediaPositionChanged() {
			if (sCChapterFragment != null) {
				ArrayAdapter<SimpleChapter> adapter = (ArrayAdapter<SimpleChapter>) sCChapterFragment
						.getListAdapter();
				adapter.notifyDataSetChanged();
			}
		}

	}",False
55,MediaPositionObserver,MemberClass,,,de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+onCancelled() de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+doInBackground(MediaPlayer[]) java.lang.Thread+sleep(long) java.lang.Thread+sleep(long),de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+TAG de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+WAITING_INTERVALL de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+player de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+TAG de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+TAG de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+player de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+player de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+WAITING_INTERVALL de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+TAG de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+TAG de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity.MediaPositionObserver+TAG,1100,41,-1,-1,1,"/** 
 * Refreshes the current position of the media file that is playing. 
 */
","/** Refreshes the current position of the media file that is playing. */
	public class MediaPositionObserver extends
			AsyncTask<MediaPlayer, Void, Void> {

		private static final String TAG = ""MediaPositionObserver"";
		private static final int WAITING_INTERVALL = 1000;
		private MediaPlayer player;

		@Override
		protected void onCancelled() {
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Task was cancelled"");
		}

		@Override
		protected Void doInBackground(MediaPlayer... p) {
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Background Task started"");
			player = p[0];
			try {
				while (player.isPlaying() && !isCancelled()) {
					try {
						Thread.sleep(WAITING_INTERVALL);
					} catch (InterruptedException e) {
						if (AppConfig.DEBUG)
							Log.d(TAG,
									""Thread was interrupted while waiting. Finishing now"");
						return null;
					}
					publishProgress();

				}
			} catch (IllegalStateException e) {
				if (AppConfig.DEBUG)
					Log.d(TAG, ""player is in illegal state, exiting now"");
			}
			if (AppConfig.DEBUG)
				Log.d(TAG, ""Background Task finished"");
			return null;
		}
	}",False
56,VideoControlsHider,MemberClass,,,de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+onCancelled() de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+onPostExecute(Void) de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+onProgressUpdate(Void[]) de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+doInBackground(Void[]) java.lang.Thread+sleep(long) java.lang.Thread+sleep(long),de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsToggler de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+WAITING_INTERVALL de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+TAG de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsShowing de.danoeh.antennapod.AppConfig+DEBUG de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+TAG de.danoeh.antennapod.activity.MediaplayerActivity+videoOverlay de.danoeh.antennapod.activity.MediaplayerActivity+videoControlsShowing de.danoeh.antennapod.activity.MediaplayerActivity.VideoControlsHider+WAITING_INTERVALL,921,38,-1,-1,1,"/** 
 * Hides the videocontrols after a certain period of time. 
 */
","/** Hides the videocontrols after a certain period of time. */
	public class VideoControlsHider extends AsyncTask<Void, Void, Void> {
		@Override
		protected void onCancelled() {
			videoControlsToggler = null;
		}

		@Override
		protected void onPostExecute(Void result) {
			videoControlsToggler = null;
		}

		private static final int WAITING_INTERVALL = 5000;
		private static final String TAG = ""VideoControlsToggler"";

		@Override
		protected void onProgressUpdate(Void... values) {
			if (videoControlsShowing) {
				if (AppConfig.DEBUG)
					Log.d(TAG, ""Hiding video controls"");
				getSupportActionBar().hide();
				videoOverlay.setVisibility(View.GONE);
				videoControlsShowing = false;
			}
		}

		@Override
		protected Void doInBackground(Void... params) {
			try {
				Thread.sleep(WAITING_INTERVALL);
			} catch (InterruptedException e) {
				return null;
			}
			publishProgress();
			return null;
		}

	}",False
