index,project name,project path,commit hash,parent hash,extract type,origin class,new class,commit message,url,data path,class path
13,abel533_Mapper,D:\Top1kProjects\abel533_Mapper,0586a42d5e36d8eab6a6e85f1a19d96adf861094,5fda159c7bcf1ec423ba27bd1bb4bacdcdd4b521,Extract Class,com.github.abel533.mapper.MapperHelper,com.github.abel533.mapper.MapperTemplate,refactor,https://github.com/abel533/Mapper/commit/0586a42d5e36d8eab6a6e85f1a19d96adf861094,refactor_example_position/13+MapperHelper+MapperTemplate.csv,src/main/java/com/github/abel533/mapper/MapperHelper.java
104,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,16e4a7f94b20ff6ff79c4be2238a17e2468713b4,ae2b65700df426e32b1b824b3b2f369230d00e0c,Extract Class,com.activiti.service.editor.ModelServiceImpl,com.activiti.service.editor.ModelImageService,"App deployment refactoring
",https://github.com/Activiti/Activiti/commit/16e4a7f94b20ff6ff79c4be2238a17e2468713b4,refactor_example_position/104+ModelServiceImpl+ModelImageService.csv,modules/activiti-ui/activiti-app-logic/src/main/java/com/activiti/service/editor/ModelServiceImpl.java
111,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,b12bf8c6bfcb77765613e19b79198ee9a8842afe,b8bfda4eff7fcc9b0362fc74225e60f3b912518a,Extract Superclass,org.activiti.engine.impl.persistence.entity.IdentityInfoEntityImpl,org.activiti.engine.impl.persistence.entity.AbstractEntity,"Two new experimental flags: execution tree caching and related entity counting (#971)

* Porting https://github.com/Activiti/Activiti/tree/entity-cache-proposal branch to the latest state of v6: introducing two new experimental flags to 1) cache execution trees during the lifetime of a command and 2) keep a count on executions to avoid deletes.
This commit contains the basics to get the -Pcheck running and the optimization config working. However, still needs a general rollout. Also, timers/suspended/DL jobs not yet done.

* Entity-caching v2: adding support for timer/suspended/DL job count on execution.

* More work on entity cache/count experiment:
* Moving Entity interface to impl.persistence.entity class (not specific to db)
* Introduced abstract superclass for all entities
* All entities now have a isInserted/isUpdated/isDeleted method
* Which is then used in a heuristic little check to avoid checking for historic activity instances (when execution is inserted, no need to check db for historic activity instances, can never happen)

* More work on entity cache/count functionality: fixes for new job types

* Small fixes.

* Implemented execution caching for all queries.

* Added simple global switch to disable localization on queries

* Entity counting: added simple unit test + fixed v5 test run + added upgrade scripts
",https://github.com/Activiti/Activiti/commit/b12bf8c6bfcb77765613e19b79198ee9a8842afe,refactor_example_position/111+IdentityInfoEntityImpl+AbstractEntity.csv,modules/activiti-engine/src/main/java/org/activiti/engine/impl/persistence/entity/IdentityInfoEntityImpl.java
144,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,30899a552baa9b443ed1a0fa16eedc7ed3e05a13,88216679a73214201b9e52803b555807a8af9f31,Extract Superclass,org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor,org.activiti.engine.impl.asyncexecutor.AbstractAsyncJobExecutor,"(2) DefaultAsyncJobExecutor refactoring.
",https://github.com/Activiti/Activiti/commit/30899a552baa9b443ed1a0fa16eedc7ed3e05a13,refactor_example_position/144+DefaultAsyncJobExecutor+AbstractAsyncJobExecutor.csv,modules/activiti-engine/src/main/java/org/activiti/engine/impl/asyncexecutor/DefaultAsyncJobExecutor.java
383,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,b79e02e3b46b742ed1c631416aead855cc0eab0e,ea46e5ed9be1cbaec6d797c6c82447e498d5e9ba,Extract Class,org.activiti.rest.api.task.TaskResponse,org.activiti.rest.api.legacy.task.LegacyTaskResponse,Added single task REST-resource and test,https://github.com/Activiti/Activiti/commit/b79e02e3b46b742ed1c631416aead855cc0eab0e,refactor_example_position/383+TaskResponse+LegacyTaskResponse.csv,modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskResponse.java
423,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,6ed56300662f449a6eeae96277e484c3e5d71629,99ee22fde09a3a17e4a85b9a6dccbaf3e5ceaded,Extract Subclass,org.activiti.engine.impl.jobexecutor.JobExecutor,org.activiti.engine.impl.jobexecutor.DefaultJobExecutor,"ACT-34 merging branch
",https://github.com/Activiti/Activiti/commit/6ed56300662f449a6eeae96277e484c3e5d71629,refactor_example_position/423+JobExecutor+DefaultJobExecutor.csv,modules/activiti-engine/src/main/java/org/activiti/engine/impl/jobexecutor/JobExecutor.java
555,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,97e87a8189391d99bf34e2ce02152c276d4c987d,313efd4f0663f3413a5693a00596a9c81166579a,Extract Class,org.activiti.spring.ProcessEngineFactoryBean,org.activiti.engine.ProcessEngineConfiguration,"ACT-378 simplify configuration (on trunk)
",https://github.com/Activiti/Activiti/commit/97e87a8189391d99bf34e2ce02152c276d4c987d,refactor_example_position/555+ProcessEngineFactoryBean+ProcessEngineConfiguration.csv,modules/activiti-spring/src/main/java/org/activiti/spring/ProcessEngineFactoryBean.java
591,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,c09b87988749ea1b2de3d5fa6c527c5ee0614998,98b691e0e0ee26fd52648d7be79361410dc623f5,Extract Class,org.activiti.rest.util.ActivitiWebScript,org.activiti.rest.util.ActivitiRequest,"Implemented ACT-140 ""REST API for Show process definition diagram"" & REST API refactor to make streaming binary code common
- Moved common binary streaming code from ContentGet to ActivitiStreamingWebScript 
- New Class ActivitiRequest that now wrapps the getMandatory[String/PathParam/Int] code so it can be used in both Activiti base webscript classes
- Now extend the activitiStreamingWebscript (in web-application-context.xml) & ActivitiStreamingWebScript (in XxxGet.java) for webscripts that return test and/or binary data such as images


",https://github.com/Activiti/Activiti/commit/c09b87988749ea1b2de3d5fa6c527c5ee0614998,refactor_example_position/591+ActivitiWebScript+ActivitiRequest.csv,modules/activiti-rest/src/main/java/org/activiti/rest/util/ActivitiWebScript.java
617,Activiti_Activiti,D:\Top1kProjects\Activiti_Activiti,51bcbd6a942fbe30237c4245f035411802d5d901,7262dc3913045001cbc658a8474e9d295980c345,Extract Class,org.activiti.impl.cfg.ProcessEngineConfiguration,org.activiti.impl.cfg.ProcessEngineFactory,"ACT-33: Refactor ProcessEngineConfiguration to separate out factory reponsibility
",https://github.com/Activiti/Activiti/commit/51bcbd6a942fbe30237c4245f035411802d5d901,refactor_example_position/617+ProcessEngineConfiguration+ProcessEngineFactory.csv,modules/activiti-engine/src/main/java/org/activiti/impl/cfg/ProcessEngineConfiguration.java
636,actorapp_actor-platform,D:\Top1kProjects\actorapp_actor-platform,859c2500f904bbbc0240ea9540605dec4f23af37,3f086a77ad6907fec15eb21074d3bd762fbf8b5e,Extract Class,im.actor.sdk.controllers.conversation.ChatActivity,im.actor.sdk.controllers.conversation.ChatFragment,"wip(android): VERY BIG ChatActivity refactoring
",https://github.com/actorapp/actor-platform/commit/859c2500f904bbbc0240ea9540605dec4f23af37,refactor_example_position/636+ChatActivity+ChatFragment.csv,actor-sdk/sdk-core-android/android-sdk/src/main/java/im/actor/sdk/controllers/conversation/ChatActivity.java
661,AdoptOpenJDK_jitwatch,D:\Top1kProjects\AdoptOpenJDK_jitwatch,962fead849bf4f4f73364a9f38d772eda99b83fb,4d1d360ff8ba2c87dccc9fde1e0162c800ee7cf5,Extract Subclass,org.adoptopenjdk.jitwatch.core.HotSpotLogParser,org.adoptopenjdk.jitwatch.parser.hotspot.HotSpotLogParser,"Initial support for IBM J9 JIT logs
",https://github.com/AdoptOpenJDK/jitwatch/commit/962fead849bf4f4f73364a9f38d772eda99b83fb,refactor_example_position/661+HotSpotLogParser+HotSpotLogParser.csv,core/src/main/java/org/adoptopenjdk/jitwatch/core/HotSpotLogParser.java
665,AdoptOpenJDK_jitwatch,D:\Top1kProjects\AdoptOpenJDK_jitwatch,54122979e2ba2cd642b7a59d07e72cb4e7e99501,977c7b125925a133f7be36766ac9feacb47646af,Extract Class,org.adoptopenjdk.jitwatch.test.TestMetaClass,org.adoptopenjdk.jitwatch.test.TestClassWithGenerics,"InlineSmallCode example and bug fixes
",https://github.com/AdoptOpenJDK/jitwatch/commit/54122979e2ba2cd642b7a59d07e72cb4e7e99501,refactor_example_position/665+TestMetaClass+TestClassWithGenerics.csv,core/src/test/java/org/adoptopenjdk/jitwatch/test/TestMetaClass.java
720,airbnb_epoxy,D:\Top1kProjects\airbnb_epoxy,ae898f3d0d9c329e52533833ab7e053b8dee94a6,2042bdd34aae948f38bca32991ec5019ead4afb8,Extract Class,com.airbnb.epoxy.EpoxyProcessorTest,com.airbnb.epoxy.ConfigTest,"Change config to be package based (#128)

",https://github.com/airbnb/epoxy/commit/ae898f3d0d9c329e52533833ab7e053b8dee94a6,refactor_example_position/720+EpoxyProcessorTest+ConfigTest.csv,epoxy-processortest/src/test/java/com/airbnb/epoxy/EpoxyProcessorTest.java
782,airbytehq_airbyte,D:\Top1kProjects\airbytehq_airbyte,d767003375dbedf5aef089d2eedcf9f9fc3880d6,73ee2e93633368b71b22a9e27acdf9e47fd8504c,Extract Superclass,io.airbyte.oauth.BaseOAuthFlow,io.airbyte.oauth.BaseOAuthConfig,"Trello OAuth backend. (#6944)

",https://github.com/airbytehq/airbyte/commit/d767003375dbedf5aef089d2eedcf9f9fc3880d6,refactor_example_position/782+BaseOAuthFlow+BaseOAuthConfig.csv,airbyte-oauth/src/main/java/io/airbyte/oauth/BaseOAuthFlow.java
792,airbytehq_airbyte,D:\Top1kProjects\airbytehq_airbyte,4863ea1a93e10aac6067e2b6ec30cec44f3a1168,078de483a1e41c1aa4e240bc17ea731162f9f2e7,Extract Superclass,io.airbyte.integrations.source.mysql.CdcMySqlSourceTest,io.airbyte.integrations.debezium.CdcSourceTest,"introduce common abstraction for CDC via debezium (#4580)

* wip

* add file

* final structure

* few more updates

* undo unwanted changes

* add abstract test + more refinement

* remove CDC metadata to debezium

* rename class + add missing property

* move debezium to bases + upgrade debezium version + review comments

* downgrade version + minor fixes

* reset to minutes

* fix build

* address review comments

* should return Optional

* use common abstraction for CDC via debezium for mysql (#4604)

* use new cdc abstraction for mysql

* undo wanted change

* pull in latest changes

* use renamed class + move constants to MySqlSource

* bring in latest changes from cdc abstraction

* format

* bring in latest changes

* pull in latest changes

* use common abstraction for CDC via debezium for postgres (#4607)

* use cdc abstraction for postgres

* add files

* ready

* use renamed class + move constants to PostgresSource

* bring in the latest changes

* bring in latest changes

* pull in latest changes",https://github.com/airbytehq/airbyte/commit/4863ea1a93e10aac6067e2b6ec30cec44f3a1168,refactor_example_position/792+CdcMySqlSourceTest+CdcSourceTest.csv,airbyte-integrations/connectors/source-mysql/src/test/java/io/airbyte/integrations/source/mysql/CdcMySqlSourceTest.java
808,airbytehq_airbyte,D:\Top1kProjects\airbytehq_airbyte,213fae17a17e25aeace693cdc487ee5fdc9b7244,5d911ed8f2ccfb83964f0d5dc51d7859783f38e0,Extract Superclass,io.airbyte.integrations.standardtest.source.SourceAcceptanceTest,io.airbyte.integrations.standardtest.source.SourceAbstractTest,"MySQL source: Add comprehensive data type test (#3810)

",https://github.com/airbytehq/airbyte/commit/213fae17a17e25aeace693cdc487ee5fdc9b7244,refactor_example_position/808+SourceAcceptanceTest+SourceAbstractTest.csv,airbyte-integrations/bases/standard-source-test/src/main/java/io/airbyte/integrations/standardtest/source/SourceAcceptanceTest.java
1049,alibaba_atlas,D:\Top1kProjects\alibaba_atlas,742bbc1992bd77a65a4b435a1cefe05ba54dbe8f,903ba0b580b87b5973cc367fb06f6ad7c865efc5,Extract Subclass,com.taobao.android.builder.tools.proguard.domain.LibClassRefVisitor,com.taobao.android.builder.tools.proguard.domain.LibMethodFieldsVisitor,"[atlas-gradle-plugin]  prguard bugfix extends
",https://github.com/alibaba/atlas/commit/742bbc1992bd77a65a4b435a1cefe05ba54dbe8f,refactor_example_position/1049+LibClassRefVisitor+LibMethodFieldsVisitor.csv,atlas-gradle-plugin/atlas-plugin/src/main/java/com/taobao/android/builder/tools/proguard/domain/LibClassRefVisitor.java
1265,alibaba_jetcache,D:\Top1kProjects\alibaba_jetcache,f73af8fde3886a746432f820a7a5b27f3086a41f,8605162f37037b6d8fa848fb82b4ba42412bbb03,Extract Superclass,com.alicp.jetcache.anno.support.CachedAnnoConfig,com.alicp.jetcache.anno.support.CacheAnnoConfig,"introduce @CacheInvalidate for removing cache entry after a method invoke.
",https://github.com/alibaba/jetcache/commit/f73af8fde3886a746432f820a7a5b27f3086a41f,refactor_example_position/1265+CachedAnnoConfig+CacheAnnoConfig.csv,jetcache-anno/src/main/java/com/alicp/jetcache/anno/support/CachedAnnoConfig.java
1388,alibaba_nacos,D:\Top1kProjects\alibaba_nacos,a43bf8fcfb6ca705c8de4464e28d19119787bdc8,8500279c793da5ffa654e262ce0e147523e9de14,Extract Superclass,com.alibaba.nacos.naming.consistency.persistent.impl.PersistentServiceProcessor,com.alibaba.nacos.naming.consistency.persistent.impl.BasePersistentServiceProcessor,"refactor: refactor issue #4291 (#4292)

",https://github.com/alibaba/nacos/commit/a43bf8fcfb6ca705c8de4464e28d19119787bdc8,refactor_example_position/1388+PersistentServiceProcessor+BasePersistentServiceProcessor.csv,naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
1549,Alluxio_alluxio,D:\Top1kProjects\Alluxio_alluxio,1cf3196a9e57ba8129d1587fb1d9f017159c204d,65298227e9206d8ce681b226f5c09520f74d184d,Extract Class,alluxio.client.cli.fs.command.LsCommandIntegrationTest,alluxio.client.cli.fs.command.LsCommandSecurityIntegrationTest,"Reuse LocalAlluxioCluster to speedup CLI tests

This speeds up the cli integration tests, by reusing the
LocalAlluxioCluster throughout each test class. This avoids tearing down
and recreating the cluster between each individual test case. When a new
cluster configuration was required, a new test class was created and
those test cases were moved into the new file.

pr-link: Alluxio/alluxio#10672
change-id: cid-23324a389d6518a1625c12805cff119f27b75635",https://github.com/Alluxio/alluxio/commit/1cf3196a9e57ba8129d1587fb1d9f017159c204d,refactor_example_position/1549+LsCommandIntegrationTest+LsCommandSecurityIntegrationTest.csv,tests/src/test/java/alluxio/client/cli/fs/command/LsCommandIntegrationTest.java
2177,Alluxio_alluxio,D:\Top1kProjects\Alluxio_alluxio,34e1c857d7300cb315518f1eef8e6df4d9e0d843,c91b3ca17422c9d9ff3da5e7bc73ad5f96366980,Extract Class,alluxio.master.file.ConcurrentFileSystemMasterRenameTest,alluxio.master.file.ConcurrentFileSystemMasterCreateTest,"Extract concurrent create tests
",https://github.com/Alluxio/alluxio/commit/34e1c857d7300cb315518f1eef8e6df4d9e0d843,refactor_example_position/2177+ConcurrentFileSystemMasterRenameTest+ConcurrentFileSystemMasterCreateTest.csv,tests/src/test/java/alluxio/master/file/ConcurrentFileSystemMasterRenameTest.java
2427,Alluxio_alluxio,D:\Top1kProjects\Alluxio_alluxio,360aff0f7d42c0eec8fd1a743f70649b1ee5325e,7b864360fe0a0860a8a73eabf239f4d9cf9a6766,Extract Class,tachyon.client.TachyonFSTest,tachyon.client.TachyonFSTestIso,"Speed up client unit tests P1.
",https://github.com/Alluxio/alluxio/commit/360aff0f7d42c0eec8fd1a743f70649b1ee5325e,refactor_example_position/2427+TachyonFSTest+TachyonFSTestIso.csv,core/src/test/java/tachyon/client/TachyonFSTest.java
2449,Alluxio_alluxio,D:\Top1kProjects\Alluxio_alluxio,4c67b71ae49e2b89e6ad79acf2e741b57f3bfa89,42c994494283fea4f35b8d9a92d304a8c5aa2365,Extract Class,tachyon.MasterServiceHandler,tachyon.MasterInfo,"MasterInfo on masterside.
",https://github.com/Alluxio/alluxio/commit/4c67b71ae49e2b89e6ad79acf2e741b57f3bfa89,refactor_example_position/2449+MasterServiceHandler+MasterInfo.csv,src/main/java/tachyon/MasterServiceHandler.java
2460,AltBeacon_android-beacon-library,D:\Top1kProjects\AltBeacon_android-beacon-library,8164337b67ccb069d2a7cad0b49874a7cd20ad65,0db920e7550e0939fa9d81d12bd5e20d4da9729d,Extract Class,org.altbeacon.beacon.service.BeaconService,org.altbeacon.beacon.service.CycledLeScanner,"refactor scanning code to a new class so we can more easily implement Android L apis
",https://github.com/AltBeacon/android-beacon-library/commit/8164337b67ccb069d2a7cad0b49874a7cd20ad65,refactor_example_position/2460+BeaconService+CycledLeScanner.csv,src/main/java/org/altbeacon/beacon/service/BeaconService.java
2775,Angel-ML_angel,D:\Top1kProjects\Angel-ML_angel,23b0f5fe301546a053ef796af461f91f52a63930,d50e02a7f17374815ab8657ee2f4bdb3398691c1,Extract Superclass,com.tencent.angel.ps.storage.vector.ServerIntDoubleRow,com.tencent.angel.ps.storage.vector.ServerBasicTypeRow,"Merge angel-ps-core
",https://github.com/Angel-ML/angel/commit/23b0f5fe301546a053ef796af461f91f52a63930,refactor_example_position/2775+ServerIntDoubleRow+ServerBasicTypeRow.csv,angel-ps/core/src/main/java/com/tencent/angel/ps/storage/vector/ServerIntDoubleRow.java
2996,ant-media_Ant-Media-Server,D:\Top1kProjects\ant-media_Ant-Media-Server,cc9a6ce0c8de9591c6f053aa4cdf6938955e2ff1,490c6c05454adcf5cdba144cf891e5ced51c31fe,Extract Superclass,io.antmedia.rest.StreamsSourceRestService,io.antmedia.rest.RestServiceBase,"refactor in rest. RestServiceBase is added. StreamsSourceRestService and
BroadcastRestService extend it.",https://github.com/ant-media/Ant-Media-Server/commit/cc9a6ce0c8de9591c6f053aa4cdf6938955e2ff1,refactor_example_position/2996+StreamsSourceRestService+RestServiceBase.csv,src/main/java/io/antmedia/rest/StreamsSourceRestService.java
3004,AntennaPod_AntennaPod,D:\Top1kProjects\AntennaPod_AntennaPod,bc85ebc806367d863973bc9434e7b0d9d5fd2168,dab44b68436601f415edb095da605811e985eb00,Extract Class,de.danoeh.antennapod.core.sync.SyncService,de.danoeh.antennapod.core.sync.queue.SynchronizationQueueStorage,"Add synchronization with gPodder Nextcloud server app (#5243)

",https://github.com/AntennaPod/AntennaPod/commit/bc85ebc806367d863973bc9434e7b0d9d5fd2168,refactor_example_position/3004+SyncService+SynchronizationQueueStorage.csv,core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java
3034,AntennaPod_AntennaPod,D:\Top1kProjects\AntennaPod_AntennaPod,862e86850faed63073aba2b0ba7792fc25c26959,c99fd0f5204e3a0554fc26bc94fbb2cad88180d3,Extract Superclass,de.danoeh.antennapod.fragment.AllEpisodesFragment,de.danoeh.antennapod.fragment.EpisodesListFragment,"Extracted episodes fragment
",https://github.com/AntennaPod/AntennaPod/commit/862e86850faed63073aba2b0ba7792fc25c26959,refactor_example_position/3034+AllEpisodesFragment+EpisodesListFragment.csv,app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
3080,AntennaPod_AntennaPod,D:\Top1kProjects\AntennaPod_AntennaPod,c1dcfe7aa6278907aaf9ee64ff9af8d1ec5125f8,a6bdf5bb30b4ef663b85141b82363df63a08c543,Extract Subclass,de.danoeh.antennapod.activity.MediaplayerActivity,de.danoeh.antennapod.activity.AudioplayerActivity,"Created superclass for mediaplayer, implemented Audioplayer",https://github.com/AntennaPod/AntennaPod/commit/c1dcfe7aa6278907aaf9ee64ff9af8d1ec5125f8,refactor_example_position/3080+MediaplayerActivity+AudioplayerActivity.csv,src/de/danoeh/antennapod/activity/MediaplayerActivity.java
3087,antlr_antlr4,D:\Top1kProjects\antlr_antlr4,e50ecf49615887b1914e50a069a6f9c7eb92f7cd,62a0b02bf4608a225f803068774f1aa3881dd4a0,Extract Superclass,org.antlr.v4.test.runtime.cpp.BaseCppTest,org.antlr.v4.test.runtime.BaseRuntimeTestSupport,"Sanitize test code base (#3061)

* sanitize test code base and factorize common code

* fix failing tests

* fix failing tests

* fix failing tests",https://github.com/antlr/antlr4/commit/e50ecf49615887b1914e50a069a6f9c7eb92f7cd,refactor_example_position/3087+BaseCppTest+BaseRuntimeTestSupport.csv,runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/BaseCppTest.java
3088,antlr_antlr4,D:\Top1kProjects\antlr_antlr4,e50ecf49615887b1914e50a069a6f9c7eb92f7cd,62a0b02bf4608a225f803068774f1aa3881dd4a0,Extract Superclass,org.antlr.v4.test.runtime.csharp.BaseCSharpTest,org.antlr.v4.test.runtime.BaseRuntimeTestSupport,"Sanitize test code base (#3061)

* sanitize test code base and factorize common code

* fix failing tests

* fix failing tests

* fix failing tests",https://github.com/antlr/antlr4/commit/e50ecf49615887b1914e50a069a6f9c7eb92f7cd,refactor_example_position/3088+BaseCSharpTest+BaseRuntimeTestSupport.csv,runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/BaseCSharpTest.java
3095,antlr_antlr4,D:\Top1kProjects\antlr_antlr4,e50ecf49615887b1914e50a069a6f9c7eb92f7cd,62a0b02bf4608a225f803068774f1aa3881dd4a0,Extract Superclass,org.antlr.v4.test.runtime.swift.BaseSwiftTest,org.antlr.v4.test.runtime.BaseRuntimeTestSupport,"Sanitize test code base (#3061)

* sanitize test code base and factorize common code

* fix failing tests

* fix failing tests

* fix failing tests",https://github.com/antlr/antlr4/commit/e50ecf49615887b1914e50a069a6f9c7eb92f7cd,refactor_example_position/3095+BaseSwiftTest+BaseRuntimeTestSupport.csv,runtime-testsuite/test/org/antlr/v4/test/runtime/swift/BaseSwiftTest.java
3100,antlr_antlr4,D:\Top1kProjects\antlr_antlr4,e50ecf49615887b1914e50a069a6f9c7eb92f7cd,62a0b02bf4608a225f803068774f1aa3881dd4a0,Extract Class,org.antlr.v4.test.runtime.javascript.BaseNodeTest,org.antlr.v4.test.runtime.RuntimeTestUtils,"Sanitize test code base (#3061)

* sanitize test code base and factorize common code

* fix failing tests

* fix failing tests

* fix failing tests",https://github.com/antlr/antlr4/commit/e50ecf49615887b1914e50a069a6f9c7eb92f7cd,refactor_example_position/3100+BaseNodeTest+RuntimeTestUtils.csv,runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/BaseNodeTest.java
3390,antlr_antlr4,D:\Top1kProjects\antlr_antlr4,b395127e733b33c27f344695ebf155ecf5edeeab,53678867ca61ffb4aa79298b40efcc74bebf952c,Extract Class,org.antlr.v4.runtime.RuleContext,org.antlr.v4.gui.Trees,"move swing related stuff out of runtime package into org.antlr.v4.gui
",https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab,refactor_example_position/3390+RuleContext+Trees.csv,runtime/Java/src/org/antlr/v4/runtime/RuleContext.java
3415,antlr_antlr4,D:\Top1kProjects\antlr_antlr4,9f28fca583f59c6913673a5520c6de691eb6eb73,e98a2b1b6777cdb3d189139c553dc3175f8ca015,Extract Class,org.antlr.v4.test.TestLexerExec,org.antlr.v4.test.TestLexerActions,"split action/command tests from lexer tests; add tests for new action stuff from Sam.
",https://github.com/antlr/antlr4/commit/9f28fca583f59c6913673a5520c6de691eb6eb73,refactor_example_position/3415+TestLexerExec+TestLexerActions.csv,tool/test/org/antlr/v4/test/TestLexerExec.java
3455,antlr_antlr4,D:\Top1kProjects\antlr_antlr4,07161bffe74109cd7c26bc3080cdab81dfd541ca,919e3a1c0686d966a27394439a27140748e17053,Extract Superclass,org.antlr.v4.codegen.DefaultOutputModelFactory,org.antlr.v4.codegen.BlankOutputModelFactory,"major reorg to get rewrites in there

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8821]
",https://github.com/antlr/antlr4/commit/07161bffe74109cd7c26bc3080cdab81dfd541ca,refactor_example_position/3455+DefaultOutputModelFactory+BlankOutputModelFactory.csv,tool/src/org/antlr/v4/codegen/DefaultOutputModelFactory.java
3490,Anuken_Mindustry,D:\Top1kProjects\Anuken_Mindustry,82742339a3f001ac5ddd7d1c5002738d999c8bfa,a64efce5a0a171d88675f3beccaa617641b8ba78,Extract Class,mindustry.core.NetClient,mindustry.ui.Menus,"Implementation of #5280
",https://github.com/Anuken/Mindustry/commit/82742339a3f001ac5ddd7d1c5002738d999c8bfa,refactor_example_position/3490+NetClient+Menus.csv,core/src/mindustry/core/NetClient.java
3638,apache_beam,D:\Top1kProjects\apache_beam,fb21fe22746982bcf5f87b88b5ef8931d3bb5462,5c5156fc41e291f38ca3d5a6a142d254afd4f972,Extract Superclass,org.apache.beam.sdk.extensions.sql.zetasql.ZetaSQLDialectSpecTest,org.apache.beam.sdk.extensions.sql.zetasql.ZetaSqlTestBase,"Refactor time functions test out of giant ZetaSqlDialectSpecTest (#12219)

",https://github.com/apache/beam/commit/fb21fe22746982bcf5f87b88b5ef8931d3bb5462,refactor_example_position/3638+ZetaSQLDialectSpecTest+ZetaSqlTestBase.csv,sdks/java/extensions/sql/zetasql/src/test/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLDialectSpecTest.java
3653,apache_beam,D:\Top1kProjects\apache_beam,4105390f1779de3a778a60c4408c430c81bf8c5c,17ce646160f50461a7c37117ae0a56ce7c067466,Extract Class,org.apache.beam.sdk.nexmark.queries.QueryTest,org.apache.beam.sdk.nexmark.queries.SqlQueryTest,"Split Nexmark QueryTest and SqlQueryTest for clarity
",https://github.com/apache/beam/commit/4105390f1779de3a778a60c4408c430c81bf8c5c,refactor_example_position/3653+QueryTest+SqlQueryTest.csv,sdks/java/testing/nexmark/src/test/java/org/apache/beam/sdk/nexmark/queries/QueryTest.java
3729,apache_calcite,D:\Top1kProjects\apache_calcite,2c17f7afec58b79f5e715cae5b43f9ca8da39cf4,f61541d633cfde53a4b0de0c23a010250c93274e,Extract Class,org.apache.calcite.rel.metadata.JaninoRelMetadataProvider,org.apache.calcite.rel.metadata.janino.CacheGeneratorUtil,"[CALCITE-4551] Reusing Immutable metadata cache keys

* Changing RelMetadataQueryBase.map generic from Table<Object, List, Object>
to Table<Object, Object, Object> to support more efficient cache keys.
* Adding regression test generated RelMetdata code.
* Adding api status internal to DescriptiveCacheKey.
* Splitting code generation out of JaninoRelMetadataHandler to
  RelMetadataHandlerGenerator.
* Moving DispatchGenerator to be packaged scoped.
* In DispatchGenerator, sorting RelNode class by name so the dispatch orders
  is repeatable.

Close apache/calcite#2585
",https://github.com/apache/calcite/commit/2c17f7afec58b79f5e715cae5b43f9ca8da39cf4,refactor_example_position/3729+JaninoRelMetadataProvider+CacheGeneratorUtil.csv,core/src/main/java/org/apache/calcite/rel/metadata/JaninoRelMetadataProvider.java
3741,apache_commons-lang,D:\Top1kProjects\apache_commons-lang,7995aad79fab336a4534a5290fdd760df7f55dde,bcdff98f02c3ef011187f2dbf7934a3ea3a48db5,Extract Class,org.apache.commons.lang3.time.FastDateParserTest,org.apache.commons.lang3.time.Java15BugFastDateParserTest,"Split out tests for a Java 15 bug.

These tests fail on Java 15 due to a bug which was only fixed for Java
16.
See https://bugs.openjdk.java.net/browse/JDK-8248434
See https://bugs.openjdk.java.net/browse/JDK-8248655
",https://github.com/apache/commons-lang/commit/7995aad79fab336a4534a5290fdd760df7f55dde,refactor_example_position/3741+FastDateParserTest+Java15BugFastDateParserTest.csv,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java
3745,apache_commons-lang,D:\Top1kProjects\apache_commons-lang,0223a4d4cd127a1e209a04d8e1eff3296c0ed8c1,009e33bb5d2950ad46d80f0b84ac77f075378859,Extract Class,org.apache.commons.lang3.StringUtilsEqualsIndexOfTest,org.apache.commons.lang3.StringUtilsContainsTest,"reorganize test classes for StringUtils to make it clearer were tests for a method are located
",https://github.com/apache/commons-lang/commit/0223a4d4cd127a1e209a04d8e1eff3296c0ed8c1,refactor_example_position/3745+StringUtilsEqualsIndexOfTest+StringUtilsContainsTest.csv,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
3783,apache_curator,D:\Top1kProjects\apache_curator,fefbba1cc3bd5641983657440b40e25425165a6a,45332f301ea5747b91c821e9f09dd66cad710b9f,Extract Superclass,org.apache.curator.framework.recipes.nodes.PersistentEphemeralNode,org.apache.curator.framework.recipes.nodes.PersistentNode,"Deprecated PersistentEphemeralNode in favor of PersistentNode which is the same code but now accepts any createmode
",https://github.com/apache/curator/commit/fefbba1cc3bd5641983657440b40e25425165a6a,refactor_example_position/3783+PersistentEphemeralNode+PersistentNode.csv,curator-recipes/src/main/java/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode.java
3786,apache_curator,D:\Top1kProjects\apache_curator,f4743336e09fa4f487b95bf72b2877c789371202,cf700d37322786a153065169bc921fe41466e793,Extract Superclass,org.apache.curator.framework.recipes.cache.TestTreeCache,org.apache.curator.framework.recipes.cache.BaseTestTreeCache,"Added more extensive testing.
",https://github.com/apache/curator/commit/f4743336e09fa4f487b95bf72b2877c789371202,refactor_example_position/3786+TestTreeCache+BaseTestTreeCache.csv,curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java
3848,apache_druid,D:\Top1kProjects\apache_druid,02b205737124f42f5cdebe7beec31dc66cfc9a8a,43103632fbd87b672574bc76c66194cacbdf3dbe,Extract Superclass,org.apache.druid.segment.StringDimensionIndexer,org.apache.druid.segment.DictionaryEncodedColumnIndexer,"extract generic dictionary encoded column indexing and merging stuffs (#11829)

* extract generic dictionary encoded column indexing and merging stuffs to pave the path towards supporting other types of dictionary encoded columns

* spotbugs and inspections fixes

* friendlier

* javadoc

* better name

* adjust",https://github.com/apache/druid/commit/02b205737124f42f5cdebe7beec31dc66cfc9a8a,refactor_example_position/3848+StringDimensionIndexer+DictionaryEncodedColumnIndexer.csv,processing/src/main/java/org/apache/druid/segment/StringDimensionIndexer.java
4023,apache_flink,D:\Top1kProjects\apache_flink,e54c59ea097c573278bd55a9e620ac621f456e92,fb14d4d9671eb91035d5103fb3ca814e5d02d6b6,Extract Class,org.apache.flink.runtime.checkpoint.CheckpointCoordinatorRestoringTest,org.apache.flink.runtime.checkpoint.VertexFinishedStateCheckerTest,"[FLINK-24270][checkpoint] Refactor the tests related to the VertexFinishedStateChecker.

This closes #18196.
",https://github.com/apache/flink/commit/e54c59ea097c573278bd55a9e620ac621f456e92,refactor_example_position/4023+CheckpointCoordinatorRestoringTest+VertexFinishedStateCheckerTest.csv,flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinatorRestoringTest.java
4279,apache_groovy,D:\Top1kProjects\apache_groovy,37af188c3f944f730b6140f44b1e72131a13137a,4c5e5b1a51627e7a18e13fcaff128bc5ad91afc0,Extract Class,org.codehaus.groovy.vmplugin.v8.PluginDefaultGroovyMethods,org.codehaus.groovy.runtime.StreamGroovyMethods,"Move stream-related extension methods to StreamGroovyMethods
",https://github.com/apache/groovy/commit/37af188c3f944f730b6140f44b1e72131a13137a,refactor_example_position/4279+PluginDefaultGroovyMethods+StreamGroovyMethods.csv,src/main/java/org/codehaus/groovy/vmplugin/v8/PluginDefaultGroovyMethods.java
4316,apache_hbase,D:\Top1kProjects\apache_hbase,39d143f29037797454ee803267d0a5e50a1a7549,cb247f94640457e487e00d87933b0de1cf3e7f6d,Extract Superclass,org.apache.hadoop.hbase.replication.regionserver.TestWALEntryStream,org.apache.hadoop.hbase.replication.regionserver.WALEntryStreamTestBase,"HBASE-26020 Split TestWALEntryStream.testDifferentCounts out (#3409)

Signed-off-by: Xiaolin Ha <haxiaolin@apache.org>",https://github.com/apache/hbase/commit/39d143f29037797454ee803267d0a5e50a1a7549,refactor_example_position/4316+TestWALEntryStream+WALEntryStreamTestBase.csv,hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestWALEntryStream.java
4341,apache_hbase,D:\Top1kProjects\apache_hbase,be984cc8d4c0bbfeff7d6440b3c096987031ebfb,1e8db480b349d6e90e6e2419455cad9e5eff7f35,Extract Class,org.apache.hadoop.hbase.MetaTableAccessor,org.apache.hadoop.hbase.replication.ReplicationBarrierFamilyFormat,"HBASE-24986 Move ReplicationBarrier related methods to a separated class (#2354)

Signed-off-by: Guanghao Zhang <zghao@apache.org>",https://github.com/apache/hbase/commit/be984cc8d4c0bbfeff7d6440b3c096987031ebfb,refactor_example_position/4341+MetaTableAccessor+ReplicationBarrierFamilyFormat.csv,hbase-balancer/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java
4423,apache_hive,D:\Top1kProjects\apache_hive,64b6e6beaebc4a027f914abfd3b0787f9c3d9ddb,151efb3cab287d54588eb9e4768589e7c7279b2d,Extract Class,org.apache.hadoop.hive.ql.txn.compactor.TestInitiator,org.apache.hadoop.hive.ql.txn.compactor.TestCompactionMetrics,"HIVE-24824: Create AcidMetricsService (Peter Varga reviewed by Karen Coppage)

Closes #2016",https://github.com/apache/hive/commit/64b6e6beaebc4a027f914abfd3b0787f9c3d9ddb,refactor_example_position/4423+TestInitiator+TestCompactionMetrics.csv,ql/src/test/org/apache/hadoop/hive/ql/txn/compactor/TestInitiator.java
4456,apache_hive,D:\Top1kProjects\apache_hive,91ab242841879ca8133c1231ad124b48df6fa05b,b631f663c45d5f83990de2c07c5505559fbdd34d,Extract Class,org.apache.hive.hplsql.Query,org.apache.hive.hplsql.Cursor,"HIVE-24230 Integrate HPL/SQL into HiveServer2 (amagyar) (#1633) (Attila Magyar reviewed by Zoltan Haindrich)

",https://github.com/apache/hive/commit/91ab242841879ca8133c1231ad124b48df6fa05b,refactor_example_position/4456+Query+Cursor.csv,hplsql/src/main/java/org/apache/hive/hplsql/Query.java
4494,apache_hive,D:\Top1kProjects\apache_hive,3bed626d5b6a7bab3659bb0422c67b4168935ee6,1fe0bd2298ece4eb37a89c5d9e983d597e2b93eb,Extract Subclass,org.apache.hadoop.hive.ql.parse.DDLSemanticAnalyzer,org.apache.hadoop.hive.ql.ddl.table.misc.truncate.TruncateTableAnalyzer,"HIVE-22907 Break up DDLSemanticAnalyzer - extract the rest of the Alter Table analyzers (Miklos Gergely, reviewed by Jesus Camacho Rodriguez)
",https://github.com/apache/hive/commit/3bed626d5b6a7bab3659bb0422c67b4168935ee6,refactor_example_position/4494+DDLSemanticAnalyzer+TruncateTableAnalyzer.csv,ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
4528,apache_hive,D:\Top1kProjects\apache_hive,358e5a93f3c1e33662bf35d75343b31f4d1246bf,6ab93165cfd40c2700541cd6ada56505c5b56dd7,Extract Class,org.apache.hadoop.hive.ql.txn.compactor.CompactorMR,org.apache.hadoop.hive.ql.txn.compactor.MajorQueryCompactor,"HIVE-22401: ACID: Refactor CompactorMR (Laszlo Pinter reviewed by Peter Vary)
",https://github.com/apache/hive/commit/358e5a93f3c1e33662bf35d75343b31f4d1246bf,refactor_example_position/4528+CompactorMR+MajorQueryCompactor.csv,ql/src/java/org/apache/hadoop/hive/ql/txn/compactor/CompactorMR.java
4536,apache_hive,D:\Top1kProjects\apache_hive,541fe86a07ea749a5b8e663d79e55dcb39225039,2947a1f66959ffcba23ac9bc191f40ecf0759d72,Extract Class,org.apache.hadoop.hive.ql.exec.DDLTask,org.apache.hadoop.hive.ql.ddl.table.misc.AlterTableSetPropertiesOperation,"HIVE-21830: Break up DDLTask - extract rest of the Alter Table operations (Miklos Gergely via Zoltan Haindrich)

Signed-off-by: Zoltan Haindrich <kirk@rxd.hu>
",https://github.com/apache/hive/commit/541fe86a07ea749a5b8e663d79e55dcb39225039,refactor_example_position/4536+DDLTask+AlterTableSetPropertiesOperation.csv,ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
